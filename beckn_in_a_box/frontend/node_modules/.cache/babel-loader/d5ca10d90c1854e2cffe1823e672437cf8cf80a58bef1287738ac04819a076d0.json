{"ast":null,"code":"/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction ct() {}\nconst _o = function () {\n  let i = 0;\n  return function () {\n    return i++;\n  };\n}();\nfunction T(i) {\n  return i === null || typeof i > \"u\";\n}\nfunction z(i) {\n  if (Array.isArray && Array.isArray(i)) return !0;\n  const t = Object.prototype.toString.call(i);\n  return t.slice(0, 7) === \"[object\" && t.slice(-6) === \"Array]\";\n}\nfunction D(i) {\n  return i !== null && Object.prototype.toString.call(i) === \"[object Object]\";\n}\nconst N = i => (typeof i == \"number\" || i instanceof Number) && isFinite(+i);\nfunction Q(i, t) {\n  return N(i) ? i : t;\n}\nfunction C(i, t) {\n  return typeof i > \"u\" ? t : i;\n}\nconst yo = (i, t) => typeof i == \"string\" && i.endsWith(\"%\") ? parseFloat(i) / 100 : i / t,\n  an = (i, t) => typeof i == \"string\" && i.endsWith(\"%\") ? parseFloat(i) / 100 * t : +i;\nfunction I(i, t, e) {\n  if (i && typeof i.call == \"function\") return i.apply(e, t);\n}\nfunction E(i, t, e, s) {\n  let n, o, r;\n  if (z(i)) {\n    if (o = i.length, s) for (n = o - 1; n >= 0; n--) t.call(e, i[n], n);else for (n = 0; n < o; n++) t.call(e, i[n], n);\n  } else if (D(i)) for (r = Object.keys(i), o = r.length, n = 0; n < o; n++) t.call(e, i[r[n]], r[n]);\n}\nfunction ze(i, t) {\n  let e, s, n, o;\n  if (!i || !t || i.length !== t.length) return !1;\n  for (e = 0, s = i.length; e < s; ++e) if (n = i[e], o = t[e], n.datasetIndex !== o.datasetIndex || n.index !== o.index) return !1;\n  return !0;\n}\nfunction Be(i) {\n  if (z(i)) return i.map(Be);\n  if (D(i)) {\n    const t = /* @__PURE__ */Object.create(null),\n      e = Object.keys(i),\n      s = e.length;\n    let n = 0;\n    for (; n < s; ++n) t[e[n]] = Be(i[e[n]]);\n    return t;\n  }\n  return i;\n}\nfunction ln(i) {\n  return [\"__proto__\", \"prototype\", \"constructor\"].indexOf(i) === -1;\n}\nfunction vo(i, t, e, s) {\n  if (!ln(i)) return;\n  const n = t[i],\n    o = e[i];\n  D(n) && D(o) ? ne(n, o, s) : t[i] = Be(o);\n}\nfunction ne(i, t, e) {\n  const s = z(t) ? t : [t],\n    n = s.length;\n  if (!D(i)) return i;\n  e = e || {};\n  const o = e.merger || vo;\n  for (let r = 0; r < n; ++r) {\n    if (t = s[r], !D(t)) continue;\n    const a = Object.keys(t);\n    for (let l = 0, c = a.length; l < c; ++l) o(a[l], i, t, e);\n  }\n  return i;\n}\nfunction Qt(i, t) {\n  return ne(i, t, {\n    merger: Mo\n  });\n}\nfunction Mo(i, t, e) {\n  if (!ln(i)) return;\n  const s = t[i],\n    n = e[i];\n  D(s) && D(n) ? Qt(s, n) : Object.prototype.hasOwnProperty.call(t, i) || (t[i] = Be(n));\n}\nconst Xi = {\n  \"\": i => i,\n  x: i => i.x,\n  y: i => i.y\n};\nfunction _t(i, t) {\n  return (Xi[t] || (Xi[t] = ko(t)))(i);\n}\nfunction ko(i) {\n  const t = wo(i);\n  return e => {\n    for (const s of t) {\n      if (s === \"\") break;\n      e = e && e[s];\n    }\n    return e;\n  };\n}\nfunction wo(i) {\n  const t = i.split(\".\"),\n    e = [];\n  let s = \"\";\n  for (const n of t) s += n, s.endsWith(\"\\\\\") ? s = s.slice(0, -1) + \".\" : (e.push(s), s = \"\");\n  return e;\n}\nfunction Oi(i) {\n  return i.charAt(0).toUpperCase() + i.slice(1);\n}\nconst et = i => typeof i < \"u\",\n  yt = i => typeof i == \"function\",\n  Ui = (i, t) => {\n    if (i.size !== t.size) return !1;\n    for (const e of i) if (!t.has(e)) return !1;\n    return !0;\n  };\nfunction So(i) {\n  return i.type === \"mouseup\" || i.type === \"click\" || i.type === \"contextmenu\";\n}\nconst B = Math.PI,\n  F = 2 * B,\n  Po = F + B,\n  Ve = Number.POSITIVE_INFINITY,\n  Co = B / 180,\n  V = B / 2,\n  $t = B / 4,\n  Ki = B * 2 / 3,\n  tt = Math.log10,\n  lt = Math.sign;\nfunction qi(i) {\n  const t = Math.round(i);\n  i = te(i, t, i / 1e3) ? t : i;\n  const e = Math.pow(10, Math.floor(tt(i))),\n    s = i / e;\n  return (s <= 1 ? 1 : s <= 2 ? 2 : s <= 5 ? 5 : 10) * e;\n}\nfunction Do(i) {\n  const t = [],\n    e = Math.sqrt(i);\n  let s;\n  for (s = 1; s < e; s++) i % s === 0 && (t.push(s), t.push(i / s));\n  return e === (e | 0) && t.push(e), t.sort((n, o) => n - o).pop(), t;\n}\nfunction Bt(i) {\n  return !isNaN(parseFloat(i)) && isFinite(i);\n}\nfunction te(i, t, e) {\n  return Math.abs(i - t) < e;\n}\nfunction Oo(i, t) {\n  const e = Math.round(i);\n  return e - t <= i && e + t >= i;\n}\nfunction cn(i, t, e) {\n  let s, n, o;\n  for (s = 0, n = i.length; s < n; s++) o = i[s][e], isNaN(o) || (t.min = Math.min(t.min, o), t.max = Math.max(t.max, o));\n}\nfunction nt(i) {\n  return i * (B / 180);\n}\nfunction Ai(i) {\n  return i * (180 / B);\n}\nfunction Gi(i) {\n  if (!N(i)) return;\n  let t = 1,\n    e = 0;\n  for (; Math.round(i * t) / t !== i;) t *= 10, e++;\n  return e;\n}\nfunction hn(i, t) {\n  const e = t.x - i.x,\n    s = t.y - i.y,\n    n = Math.sqrt(e * e + s * s);\n  let o = Math.atan2(s, e);\n  return o < -0.5 * B && (o += F), {\n    angle: o,\n    distance: n\n  };\n}\nfunction bi(i, t) {\n  return Math.sqrt(Math.pow(t.x - i.x, 2) + Math.pow(t.y - i.y, 2));\n}\nfunction Ao(i, t) {\n  return (i - t + Po) % F - B;\n}\nfunction Z(i) {\n  return (i % F + F) % F;\n}\nfunction oe(i, t, e, s) {\n  const n = Z(i),\n    o = Z(t),\n    r = Z(e),\n    a = Z(o - n),\n    l = Z(r - n),\n    c = Z(n - o),\n    h = Z(n - r);\n  return n === o || n === r || s && o === r || a > l && c < h;\n}\nfunction Y(i, t, e) {\n  return Math.max(t, Math.min(e, i));\n}\nfunction To(i) {\n  return Y(i, -32768, 32767);\n}\nfunction ut(i, t, e, s = 1e-6) {\n  return i >= Math.min(t, e) - s && i <= Math.max(t, e) + s;\n}\nfunction Ti(i, t, e) {\n  e = e || (r => i[r] < t);\n  let s = i.length - 1,\n    n = 0,\n    o;\n  for (; s - n > 1;) o = n + s >> 1, e(o) ? n = o : s = o;\n  return {\n    lo: n,\n    hi: s\n  };\n}\nconst ft = (i, t, e, s) => Ti(i, e, s ? n => i[n][t] <= e : n => i[n][t] < e),\n  Lo = (i, t, e) => Ti(i, e, s => i[s][t] >= e);\nfunction Ro(i, t, e) {\n  let s = 0,\n    n = i.length;\n  for (; s < n && i[s] < t;) s++;\n  for (; n > s && i[n - 1] > e;) n--;\n  return s > 0 || n < i.length ? i.slice(s, n) : i;\n}\nconst dn = [\"push\", \"pop\", \"shift\", \"splice\", \"unshift\"];\nfunction Eo(i, t) {\n  if (i._chartjs) {\n    i._chartjs.listeners.push(t);\n    return;\n  }\n  Object.defineProperty(i, \"_chartjs\", {\n    configurable: !0,\n    enumerable: !1,\n    value: {\n      listeners: [t]\n    }\n  }), dn.forEach(e => {\n    const s = \"_onData\" + Oi(e),\n      n = i[e];\n    Object.defineProperty(i, e, {\n      configurable: !0,\n      enumerable: !1,\n      value(...o) {\n        const r = n.apply(this, o);\n        return i._chartjs.listeners.forEach(a => {\n          typeof a[s] == \"function\" && a[s](...o);\n        }), r;\n      }\n    });\n  });\n}\nfunction Zi(i, t) {\n  const e = i._chartjs;\n  if (!e) return;\n  const s = e.listeners,\n    n = s.indexOf(t);\n  n !== -1 && s.splice(n, 1), !(s.length > 0) && (dn.forEach(o => {\n    delete i[o];\n  }), delete i._chartjs);\n}\nfunction un(i) {\n  const t = /* @__PURE__ */new Set();\n  let e, s;\n  for (e = 0, s = i.length; e < s; ++e) t.add(i[e]);\n  return t.size === s ? i : Array.from(t);\n}\nconst fn = function () {\n  return typeof window > \"u\" ? function (i) {\n    return i();\n  } : window.requestAnimationFrame;\n}();\nfunction gn(i, t, e) {\n  const s = e || (r => Array.prototype.slice.call(r));\n  let n = !1,\n    o = [];\n  return function (...r) {\n    o = s(r), n || (n = !0, fn.call(window, () => {\n      n = !1, i.apply(t, o);\n    }));\n  };\n}\nfunction Fo(i, t) {\n  let e;\n  return function (...s) {\n    return t ? (clearTimeout(e), e = setTimeout(i, t, s)) : i.apply(this, s), t;\n  };\n}\nconst Li = i => i === \"start\" ? \"left\" : i === \"end\" ? \"right\" : \"center\",\n  U = (i, t, e) => i === \"start\" ? t : i === \"end\" ? e : (t + e) / 2,\n  Io = (i, t, e, s) => i === (s ? \"left\" : \"right\") ? e : i === \"center\" ? (t + e) / 2 : t;\nfunction pn(i, t, e) {\n  const s = t.length;\n  let n = 0,\n    o = s;\n  if (i._sorted) {\n    const {\n        iScale: r,\n        _parsed: a\n      } = i,\n      l = r.axis,\n      {\n        min: c,\n        max: h,\n        minDefined: d,\n        maxDefined: u\n      } = r.getUserBounds();\n    d && (n = Y(Math.min(ft(a, r.axis, c).lo, e ? s : ft(t, l, r.getPixelForValue(c)).lo), 0, s - 1)), u ? o = Y(Math.max(ft(a, r.axis, h, !0).hi + 1, e ? 0 : ft(t, l, r.getPixelForValue(h), !0).hi + 1), n, s) - n : o = s - n;\n  }\n  return {\n    start: n,\n    count: o\n  };\n}\nfunction mn(i) {\n  const {\n      xScale: t,\n      yScale: e,\n      _scaleRanges: s\n    } = i,\n    n = {\n      xmin: t.min,\n      xmax: t.max,\n      ymin: e.min,\n      ymax: e.max\n    };\n  if (!s) return i._scaleRanges = n, !0;\n  const o = s.xmin !== t.min || s.xmax !== t.max || s.ymin !== e.min || s.ymax !== e.max;\n  return Object.assign(s, n), o;\n}\nconst we = i => i === 0 || i === 1,\n  Ji = (i, t, e) => -(Math.pow(2, 10 * (i -= 1)) * Math.sin((i - t) * F / e)),\n  Qi = (i, t, e) => Math.pow(2, -10 * i) * Math.sin((i - t) * F / e) + 1,\n  ee = {\n    linear: i => i,\n    easeInQuad: i => i * i,\n    easeOutQuad: i => -i * (i - 2),\n    easeInOutQuad: i => (i /= 0.5) < 1 ? 0.5 * i * i : -0.5 * (--i * (i - 2) - 1),\n    easeInCubic: i => i * i * i,\n    easeOutCubic: i => (i -= 1) * i * i + 1,\n    easeInOutCubic: i => (i /= 0.5) < 1 ? 0.5 * i * i * i : 0.5 * ((i -= 2) * i * i + 2),\n    easeInQuart: i => i * i * i * i,\n    easeOutQuart: i => -((i -= 1) * i * i * i - 1),\n    easeInOutQuart: i => (i /= 0.5) < 1 ? 0.5 * i * i * i * i : -0.5 * ((i -= 2) * i * i * i - 2),\n    easeInQuint: i => i * i * i * i * i,\n    easeOutQuint: i => (i -= 1) * i * i * i * i + 1,\n    easeInOutQuint: i => (i /= 0.5) < 1 ? 0.5 * i * i * i * i * i : 0.5 * ((i -= 2) * i * i * i * i + 2),\n    easeInSine: i => -Math.cos(i * V) + 1,\n    easeOutSine: i => Math.sin(i * V),\n    easeInOutSine: i => -0.5 * (Math.cos(B * i) - 1),\n    easeInExpo: i => i === 0 ? 0 : Math.pow(2, 10 * (i - 1)),\n    easeOutExpo: i => i === 1 ? 1 : -Math.pow(2, -10 * i) + 1,\n    easeInOutExpo: i => we(i) ? i : i < 0.5 ? 0.5 * Math.pow(2, 10 * (i * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (i * 2 - 1)) + 2),\n    easeInCirc: i => i >= 1 ? i : -(Math.sqrt(1 - i * i) - 1),\n    easeOutCirc: i => Math.sqrt(1 - (i -= 1) * i),\n    easeInOutCirc: i => (i /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - i * i) - 1) : 0.5 * (Math.sqrt(1 - (i -= 2) * i) + 1),\n    easeInElastic: i => we(i) ? i : Ji(i, 0.075, 0.3),\n    easeOutElastic: i => we(i) ? i : Qi(i, 0.075, 0.3),\n    easeInOutElastic(i) {\n      return we(i) ? i : i < 0.5 ? 0.5 * Ji(i * 2, 0.1125, 0.45) : 0.5 + 0.5 * Qi(i * 2 - 1, 0.1125, 0.45);\n    },\n    easeInBack(i) {\n      return i * i * ((1.70158 + 1) * i - 1.70158);\n    },\n    easeOutBack(i) {\n      return (i -= 1) * i * ((1.70158 + 1) * i + 1.70158) + 1;\n    },\n    easeInOutBack(i) {\n      let t = 1.70158;\n      return (i /= 0.5) < 1 ? 0.5 * (i * i * (((t *= 1.525) + 1) * i - t)) : 0.5 * ((i -= 2) * i * (((t *= 1.525) + 1) * i + t) + 2);\n    },\n    easeInBounce: i => 1 - ee.easeOutBounce(1 - i),\n    easeOutBounce(i) {\n      return i < 1 / 2.75 ? 7.5625 * i * i : i < 2 / 2.75 ? 7.5625 * (i -= 1.5 / 2.75) * i + 0.75 : i < 2.5 / 2.75 ? 7.5625 * (i -= 2.25 / 2.75) * i + 0.9375 : 7.5625 * (i -= 2.625 / 2.75) * i + 0.984375;\n    },\n    easeInOutBounce: i => i < 0.5 ? ee.easeInBounce(i * 2) * 0.5 : ee.easeOutBounce(i * 2 - 1) * 0.5 + 0.5\n  };\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction he(i) {\n  return i + 0.5 | 0;\n}\nconst mt = (i, t, e) => Math.max(Math.min(i, e), t);\nfunction Gt(i) {\n  return mt(he(i * 2.55), 0, 255);\n}\nfunction xt(i) {\n  return mt(he(i * 255), 0, 255);\n}\nfunction dt(i) {\n  return mt(he(i / 2.55) / 100, 0, 1);\n}\nfunction ts(i) {\n  return mt(he(i * 100), 0, 100);\n}\nconst J = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n  },\n  xi = [...\"0123456789ABCDEF\"],\n  zo = i => xi[i & 15],\n  Bo = i => xi[(i & 240) >> 4] + xi[i & 15],\n  Se = i => (i & 240) >> 4 === (i & 15),\n  Vo = i => Se(i.r) && Se(i.g) && Se(i.b) && Se(i.a);\nfunction Wo(i) {\n  var t = i.length,\n    e;\n  return i[0] === \"#\" && (t === 4 || t === 5 ? e = {\n    r: 255 & J[i[1]] * 17,\n    g: 255 & J[i[2]] * 17,\n    b: 255 & J[i[3]] * 17,\n    a: t === 5 ? J[i[4]] * 17 : 255\n  } : (t === 7 || t === 9) && (e = {\n    r: J[i[1]] << 4 | J[i[2]],\n    g: J[i[3]] << 4 | J[i[4]],\n    b: J[i[5]] << 4 | J[i[6]],\n    a: t === 9 ? J[i[7]] << 4 | J[i[8]] : 255\n  })), e;\n}\nconst No = (i, t) => i < 255 ? t(i) : \"\";\nfunction Ho(i) {\n  var t = Vo(i) ? zo : Bo;\n  return i ? \"#\" + t(i.r) + t(i.g) + t(i.b) + No(i.a, t) : void 0;\n}\nconst jo = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction bn(i, t, e) {\n  const s = t * Math.min(e, 1 - e),\n    n = (o, r = (o + i / 30) % 12) => e - s * Math.max(Math.min(r - 3, 9 - r, 1), -1);\n  return [n(0), n(8), n(4)];\n}\nfunction $o(i, t, e) {\n  const s = (n, o = (n + i / 60) % 6) => e - e * t * Math.max(Math.min(o, 4 - o, 1), 0);\n  return [s(5), s(3), s(1)];\n}\nfunction Yo(i, t, e) {\n  const s = bn(i, 1, 0.5);\n  let n;\n  for (t + e > 1 && (n = 1 / (t + e), t *= n, e *= n), n = 0; n < 3; n++) s[n] *= 1 - t - e, s[n] += t;\n  return s;\n}\nfunction Xo(i, t, e, s, n) {\n  return i === n ? (t - e) / s + (t < e ? 6 : 0) : t === n ? (e - i) / s + 2 : (i - t) / s + 4;\n}\nfunction Ri(i) {\n  const e = i.r / 255,\n    s = i.g / 255,\n    n = i.b / 255,\n    o = Math.max(e, s, n),\n    r = Math.min(e, s, n),\n    a = (o + r) / 2;\n  let l, c, h;\n  return o !== r && (h = o - r, c = a > 0.5 ? h / (2 - o - r) : h / (o + r), l = Xo(e, s, n, h, o), l = l * 60 + 0.5), [l | 0, c || 0, a];\n}\nfunction Ei(i, t, e, s) {\n  return (Array.isArray(t) ? i(t[0], t[1], t[2]) : i(t, e, s)).map(xt);\n}\nfunction Fi(i, t, e) {\n  return Ei(bn, i, t, e);\n}\nfunction Uo(i, t, e) {\n  return Ei(Yo, i, t, e);\n}\nfunction Ko(i, t, e) {\n  return Ei($o, i, t, e);\n}\nfunction xn(i) {\n  return (i % 360 + 360) % 360;\n}\nfunction qo(i) {\n  const t = jo.exec(i);\n  let e = 255,\n    s;\n  if (!t) return;\n  t[5] !== s && (e = t[6] ? Gt(+t[5]) : xt(+t[5]));\n  const n = xn(+t[2]),\n    o = +t[3] / 100,\n    r = +t[4] / 100;\n  return t[1] === \"hwb\" ? s = Uo(n, o, r) : t[1] === \"hsv\" ? s = Ko(n, o, r) : s = Fi(n, o, r), {\n    r: s[0],\n    g: s[1],\n    b: s[2],\n    a: e\n  };\n}\nfunction Go(i, t) {\n  var e = Ri(i);\n  e[0] = xn(e[0] + t), e = Fi(e), i.r = e[0], i.g = e[1], i.b = e[2];\n}\nfunction Zo(i) {\n  if (!i) return;\n  const t = Ri(i),\n    e = t[0],\n    s = ts(t[1]),\n    n = ts(t[2]);\n  return i.a < 255 ? `hsla(${e}, ${s}%, ${n}%, ${dt(i.a)})` : `hsl(${e}, ${s}%, ${n}%)`;\n}\nconst es = {\n    x: \"dark\",\n    Z: \"light\",\n    Y: \"re\",\n    X: \"blu\",\n    W: \"gr\",\n    V: \"medium\",\n    U: \"slate\",\n    A: \"ee\",\n    T: \"ol\",\n    S: \"or\",\n    B: \"ra\",\n    C: \"lateg\",\n    D: \"ights\",\n    R: \"in\",\n    Q: \"turquois\",\n    E: \"hi\",\n    P: \"ro\",\n    O: \"al\",\n    N: \"le\",\n    M: \"de\",\n    L: \"yello\",\n    F: \"en\",\n    K: \"ch\",\n    G: \"arks\",\n    H: \"ea\",\n    I: \"ightg\",\n    J: \"wh\"\n  },\n  is = {\n    OiceXe: \"f0f8ff\",\n    antiquewEte: \"faebd7\",\n    aqua: \"ffff\",\n    aquamarRe: \"7fffd4\",\n    azuY: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"0\",\n    blanKedOmond: \"ffebcd\",\n    Xe: \"ff\",\n    XeviTet: \"8a2be2\",\n    bPwn: \"a52a2a\",\n    burlywood: \"deb887\",\n    caMtXe: \"5f9ea0\",\n    KartYuse: \"7fff00\",\n    KocTate: \"d2691e\",\n    cSO: \"ff7f50\",\n    cSnflowerXe: \"6495ed\",\n    cSnsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"ffff\",\n    xXe: \"8b\",\n    xcyan: \"8b8b\",\n    xgTMnPd: \"b8860b\",\n    xWay: \"a9a9a9\",\n    xgYF: \"6400\",\n    xgYy: \"a9a9a9\",\n    xkhaki: \"bdb76b\",\n    xmagFta: \"8b008b\",\n    xTivegYF: \"556b2f\",\n    xSange: \"ff8c00\",\n    xScEd: \"9932cc\",\n    xYd: \"8b0000\",\n    xsOmon: \"e9967a\",\n    xsHgYF: \"8fbc8f\",\n    xUXe: \"483d8b\",\n    xUWay: \"2f4f4f\",\n    xUgYy: \"2f4f4f\",\n    xQe: \"ced1\",\n    xviTet: \"9400d3\",\n    dAppRk: \"ff1493\",\n    dApskyXe: \"bfff\",\n    dimWay: \"696969\",\n    dimgYy: \"696969\",\n    dodgerXe: \"1e90ff\",\n    fiYbrick: \"b22222\",\n    flSOwEte: \"fffaf0\",\n    foYstWAn: \"228b22\",\n    fuKsia: \"ff00ff\",\n    gaRsbSo: \"dcdcdc\",\n    ghostwEte: \"f8f8ff\",\n    gTd: \"ffd700\",\n    gTMnPd: \"daa520\",\n    Way: \"808080\",\n    gYF: \"8000\",\n    gYFLw: \"adff2f\",\n    gYy: \"808080\",\n    honeyMw: \"f0fff0\",\n    hotpRk: \"ff69b4\",\n    RdianYd: \"cd5c5c\",\n    Rdigo: \"4b0082\",\n    ivSy: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavFMr: \"e6e6fa\",\n    lavFMrXsh: \"fff0f5\",\n    lawngYF: \"7cfc00\",\n    NmoncEffon: \"fffacd\",\n    ZXe: \"add8e6\",\n    ZcSO: \"f08080\",\n    Zcyan: \"e0ffff\",\n    ZgTMnPdLw: \"fafad2\",\n    ZWay: \"d3d3d3\",\n    ZgYF: \"90ee90\",\n    ZgYy: \"d3d3d3\",\n    ZpRk: \"ffb6c1\",\n    ZsOmon: \"ffa07a\",\n    ZsHgYF: \"20b2aa\",\n    ZskyXe: \"87cefa\",\n    ZUWay: \"778899\",\n    ZUgYy: \"778899\",\n    ZstAlXe: \"b0c4de\",\n    ZLw: \"ffffe0\",\n    lime: \"ff00\",\n    limegYF: \"32cd32\",\n    lRF: \"faf0e6\",\n    magFta: \"ff00ff\",\n    maPon: \"800000\",\n    VaquamarRe: \"66cdaa\",\n    VXe: \"cd\",\n    VScEd: \"ba55d3\",\n    VpurpN: \"9370db\",\n    VsHgYF: \"3cb371\",\n    VUXe: \"7b68ee\",\n    VsprRggYF: \"fa9a\",\n    VQe: \"48d1cc\",\n    VviTetYd: \"c71585\",\n    midnightXe: \"191970\",\n    mRtcYam: \"f5fffa\",\n    mistyPse: \"ffe4e1\",\n    moccasR: \"ffe4b5\",\n    navajowEte: \"ffdead\",\n    navy: \"80\",\n    Tdlace: \"fdf5e6\",\n    Tive: \"808000\",\n    TivedBb: \"6b8e23\",\n    Sange: \"ffa500\",\n    SangeYd: \"ff4500\",\n    ScEd: \"da70d6\",\n    pOegTMnPd: \"eee8aa\",\n    pOegYF: \"98fb98\",\n    pOeQe: \"afeeee\",\n    pOeviTetYd: \"db7093\",\n    papayawEp: \"ffefd5\",\n    pHKpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pRk: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powMrXe: \"b0e0e6\",\n    purpN: \"800080\",\n    YbeccapurpN: \"663399\",\n    Yd: \"ff0000\",\n    Psybrown: \"bc8f8f\",\n    PyOXe: \"4169e1\",\n    saddNbPwn: \"8b4513\",\n    sOmon: \"fa8072\",\n    sandybPwn: \"f4a460\",\n    sHgYF: \"2e8b57\",\n    sHshell: \"fff5ee\",\n    siFna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyXe: \"87ceeb\",\n    UXe: \"6a5acd\",\n    UWay: \"708090\",\n    UgYy: \"708090\",\n    snow: \"fffafa\",\n    sprRggYF: \"ff7f\",\n    stAlXe: \"4682b4\",\n    tan: \"d2b48c\",\n    teO: \"8080\",\n    tEstN: \"d8bfd8\",\n    tomato: \"ff6347\",\n    Qe: \"40e0d0\",\n    viTet: \"ee82ee\",\n    JHt: \"f5deb3\",\n    wEte: \"ffffff\",\n    wEtesmoke: \"f5f5f5\",\n    Lw: \"ffff00\",\n    LwgYF: \"9acd32\"\n  };\nfunction Jo() {\n  const i = {},\n    t = Object.keys(is),\n    e = Object.keys(es);\n  let s, n, o, r, a;\n  for (s = 0; s < t.length; s++) {\n    for (r = a = t[s], n = 0; n < e.length; n++) o = e[n], a = a.replace(o, es[o]);\n    o = parseInt(is[r], 16), i[a] = [o >> 16 & 255, o >> 8 & 255, o & 255];\n  }\n  return i;\n}\nlet Pe;\nfunction Qo(i) {\n  Pe || (Pe = Jo(), Pe.transparent = [0, 0, 0, 0]);\n  const t = Pe[i.toLowerCase()];\n  return t && {\n    r: t[0],\n    g: t[1],\n    b: t[2],\n    a: t.length === 4 ? t[3] : 255\n  };\n}\nconst tr = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction er(i) {\n  const t = tr.exec(i);\n  let e = 255,\n    s,\n    n,\n    o;\n  if (t) {\n    if (t[7] !== s) {\n      const r = +t[7];\n      e = t[8] ? Gt(r) : mt(r * 255, 0, 255);\n    }\n    return s = +t[1], n = +t[3], o = +t[5], s = 255 & (t[2] ? Gt(s) : mt(s, 0, 255)), n = 255 & (t[4] ? Gt(n) : mt(n, 0, 255)), o = 255 & (t[6] ? Gt(o) : mt(o, 0, 255)), {\n      r: s,\n      g: n,\n      b: o,\n      a: e\n    };\n  }\n}\nfunction ir(i) {\n  return i && (i.a < 255 ? `rgba(${i.r}, ${i.g}, ${i.b}, ${dt(i.a)})` : `rgb(${i.r}, ${i.g}, ${i.b})`);\n}\nconst ni = i => i <= 31308e-7 ? i * 12.92 : Math.pow(i, 1 / 2.4) * 1.055 - 0.055,\n  Ft = i => i <= 0.04045 ? i / 12.92 : Math.pow((i + 0.055) / 1.055, 2.4);\nfunction sr(i, t, e) {\n  const s = Ft(dt(i.r)),\n    n = Ft(dt(i.g)),\n    o = Ft(dt(i.b));\n  return {\n    r: xt(ni(s + e * (Ft(dt(t.r)) - s))),\n    g: xt(ni(n + e * (Ft(dt(t.g)) - n))),\n    b: xt(ni(o + e * (Ft(dt(t.b)) - o))),\n    a: i.a + e * (t.a - i.a)\n  };\n}\nfunction Ce(i, t, e) {\n  if (i) {\n    let s = Ri(i);\n    s[t] = Math.max(0, Math.min(s[t] + s[t] * e, t === 0 ? 360 : 1)), s = Fi(s), i.r = s[0], i.g = s[1], i.b = s[2];\n  }\n}\nfunction _n(i, t) {\n  return i && Object.assign(t || {}, i);\n}\nfunction ss(i) {\n  var t = {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 255\n  };\n  return Array.isArray(i) ? i.length >= 3 && (t = {\n    r: i[0],\n    g: i[1],\n    b: i[2],\n    a: 255\n  }, i.length > 3 && (t.a = xt(i[3]))) : (t = _n(i, {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 1\n  }), t.a = xt(t.a)), t;\n}\nfunction nr(i) {\n  return i.charAt(0) === \"r\" ? er(i) : qo(i);\n}\nclass We {\n  constructor(t) {\n    if (t instanceof We) return t;\n    const e = typeof t;\n    let s;\n    e === \"object\" ? s = ss(t) : e === \"string\" && (s = Wo(t) || Qo(t) || nr(t)), this._rgb = s, this._valid = !!s;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var t = _n(this._rgb);\n    return t && (t.a = dt(t.a)), t;\n  }\n  set rgb(t) {\n    this._rgb = ss(t);\n  }\n  rgbString() {\n    return this._valid ? ir(this._rgb) : void 0;\n  }\n  hexString() {\n    return this._valid ? Ho(this._rgb) : void 0;\n  }\n  hslString() {\n    return this._valid ? Zo(this._rgb) : void 0;\n  }\n  mix(t, e) {\n    if (t) {\n      const s = this.rgb,\n        n = t.rgb;\n      let o;\n      const r = e === o ? 0.5 : e,\n        a = 2 * r - 1,\n        l = s.a - n.a,\n        c = ((a * l === -1 ? a : (a + l) / (1 + a * l)) + 1) / 2;\n      o = 1 - c, s.r = 255 & c * s.r + o * n.r + 0.5, s.g = 255 & c * s.g + o * n.g + 0.5, s.b = 255 & c * s.b + o * n.b + 0.5, s.a = r * s.a + (1 - r) * n.a, this.rgb = s;\n    }\n    return this;\n  }\n  interpolate(t, e) {\n    return t && (this._rgb = sr(this._rgb, t._rgb, e)), this;\n  }\n  clone() {\n    return new We(this.rgb);\n  }\n  alpha(t) {\n    return this._rgb.a = xt(t), this;\n  }\n  clearer(t) {\n    const e = this._rgb;\n    return e.a *= 1 - t, this;\n  }\n  greyscale() {\n    const t = this._rgb,\n      e = he(t.r * 0.3 + t.g * 0.59 + t.b * 0.11);\n    return t.r = t.g = t.b = e, this;\n  }\n  opaquer(t) {\n    const e = this._rgb;\n    return e.a *= 1 + t, this;\n  }\n  negate() {\n    const t = this._rgb;\n    return t.r = 255 - t.r, t.g = 255 - t.g, t.b = 255 - t.b, this;\n  }\n  lighten(t) {\n    return Ce(this._rgb, 2, t), this;\n  }\n  darken(t) {\n    return Ce(this._rgb, 2, -t), this;\n  }\n  saturate(t) {\n    return Ce(this._rgb, 1, t), this;\n  }\n  desaturate(t) {\n    return Ce(this._rgb, 1, -t), this;\n  }\n  rotate(t) {\n    return Go(this._rgb, t), this;\n  }\n}\nfunction yn(i) {\n  return new We(i);\n}\nfunction vn(i) {\n  if (i && typeof i == \"object\") {\n    const t = i.toString();\n    return t === \"[object CanvasPattern]\" || t === \"[object CanvasGradient]\";\n  }\n  return !1;\n}\nfunction ns(i) {\n  return vn(i) ? i : yn(i);\n}\nfunction oi(i) {\n  return vn(i) ? i : yn(i).saturate(0.5).darken(0.1).hexString();\n}\nconst At = /* @__PURE__ */Object.create(null),\n  _i = /* @__PURE__ */Object.create(null);\nfunction ie(i, t) {\n  if (!t) return i;\n  const e = t.split(\".\");\n  for (let s = 0, n = e.length; s < n; ++s) {\n    const o = e[s];\n    i = i[o] || (i[o] = /* @__PURE__ */Object.create(null));\n  }\n  return i;\n}\nfunction ri(i, t, e) {\n  return typeof t == \"string\" ? ne(ie(i, t), e) : ne(ie(i, \"\"), t);\n}\nclass or {\n  constructor(t) {\n    this.animation = void 0, this.backgroundColor = \"rgba(0,0,0,0.1)\", this.borderColor = \"rgba(0,0,0,0.1)\", this.color = \"#666\", this.datasets = {}, this.devicePixelRatio = e => e.chart.platform.getDevicePixelRatio(), this.elements = {}, this.events = [\"mousemove\", \"mouseout\", \"click\", \"touchstart\", \"touchmove\"], this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: \"normal\",\n      lineHeight: 1.2,\n      weight: null\n    }, this.hover = {}, this.hoverBackgroundColor = (e, s) => oi(s.backgroundColor), this.hoverBorderColor = (e, s) => oi(s.borderColor), this.hoverColor = (e, s) => oi(s.color), this.indexAxis = \"x\", this.interaction = {\n      mode: \"nearest\",\n      intersect: !0,\n      includeInvisible: !1\n    }, this.maintainAspectRatio = !0, this.onHover = null, this.onClick = null, this.parsing = !0, this.plugins = {}, this.responsive = !0, this.scale = void 0, this.scales = {}, this.showLine = !0, this.drawActiveElementsOnTop = !0, this.describe(t);\n  }\n  set(t, e) {\n    return ri(this, t, e);\n  }\n  get(t) {\n    return ie(this, t);\n  }\n  describe(t, e) {\n    return ri(_i, t, e);\n  }\n  override(t, e) {\n    return ri(At, t, e);\n  }\n  route(t, e, s, n) {\n    const o = ie(this, t),\n      r = ie(this, s),\n      a = \"_\" + e;\n    Object.defineProperties(o, {\n      [a]: {\n        value: o[e],\n        writable: !0\n      },\n      [e]: {\n        enumerable: !0,\n        get() {\n          const l = this[a],\n            c = r[n];\n          return D(l) ? Object.assign({}, c, l) : C(l, c);\n        },\n        set(l) {\n          this[a] = l;\n        }\n      }\n    });\n  }\n}\nvar O = new or({\n  _scriptable: i => !i.startsWith(\"on\"),\n  _indexable: i => i !== \"events\",\n  hover: {\n    _fallback: \"interaction\"\n  },\n  interaction: {\n    _scriptable: !1,\n    _indexable: !1\n  }\n});\nfunction rr(i) {\n  return !i || T(i.size) || T(i.family) ? null : (i.style ? i.style + \" \" : \"\") + (i.weight ? i.weight + \" \" : \"\") + i.size + \"px \" + i.family;\n}\nfunction Ne(i, t, e, s, n) {\n  let o = t[n];\n  return o || (o = t[n] = i.measureText(n).width, e.push(n)), o > s && (s = o), s;\n}\nfunction ar(i, t, e, s) {\n  s = s || {};\n  let n = s.data = s.data || {},\n    o = s.garbageCollect = s.garbageCollect || [];\n  s.font !== t && (n = s.data = {}, o = s.garbageCollect = [], s.font = t), i.save(), i.font = t;\n  let r = 0;\n  const a = e.length;\n  let l, c, h, d, u;\n  for (l = 0; l < a; l++) if (d = e[l], d != null && z(d) !== !0) r = Ne(i, n, o, r, d);else if (z(d)) for (c = 0, h = d.length; c < h; c++) u = d[c], u != null && !z(u) && (r = Ne(i, n, o, r, u));\n  i.restore();\n  const f = o.length / 2;\n  if (f > e.length) {\n    for (l = 0; l < f; l++) delete n[o[l]];\n    o.splice(0, f);\n  }\n  return r;\n}\nfunction wt(i, t, e) {\n  const s = i.currentDevicePixelRatio,\n    n = e !== 0 ? Math.max(e / 2, 0.5) : 0;\n  return Math.round((t - n) * s) / s + n;\n}\nfunction os(i, t) {\n  t = t || i.getContext(\"2d\"), t.save(), t.resetTransform(), t.clearRect(0, 0, i.width, i.height), t.restore();\n}\nfunction yi(i, t, e, s) {\n  Mn(i, t, e, s, null);\n}\nfunction Mn(i, t, e, s, n) {\n  let o, r, a, l, c, h;\n  const d = t.pointStyle,\n    u = t.rotation,\n    f = t.radius;\n  let g = (u || 0) * Co;\n  if (d && typeof d == \"object\" && (o = d.toString(), o === \"[object HTMLImageElement]\" || o === \"[object HTMLCanvasElement]\")) {\n    i.save(), i.translate(e, s), i.rotate(g), i.drawImage(d, -d.width / 2, -d.height / 2, d.width, d.height), i.restore();\n    return;\n  }\n  if (!(isNaN(f) || f <= 0)) {\n    switch (i.beginPath(), d) {\n      default:\n        n ? i.ellipse(e, s, n / 2, f, 0, 0, F) : i.arc(e, s, f, 0, F), i.closePath();\n        break;\n      case \"triangle\":\n        i.moveTo(e + Math.sin(g) * f, s - Math.cos(g) * f), g += Ki, i.lineTo(e + Math.sin(g) * f, s - Math.cos(g) * f), g += Ki, i.lineTo(e + Math.sin(g) * f, s - Math.cos(g) * f), i.closePath();\n        break;\n      case \"rectRounded\":\n        c = f * 0.516, l = f - c, r = Math.cos(g + $t) * l, a = Math.sin(g + $t) * l, i.arc(e - r, s - a, c, g - B, g - V), i.arc(e + a, s - r, c, g - V, g), i.arc(e + r, s + a, c, g, g + V), i.arc(e - a, s + r, c, g + V, g + B), i.closePath();\n        break;\n      case \"rect\":\n        if (!u) {\n          l = Math.SQRT1_2 * f, h = n ? n / 2 : l, i.rect(e - h, s - l, 2 * h, 2 * l);\n          break;\n        }\n        g += $t;\n      case \"rectRot\":\n        r = Math.cos(g) * f, a = Math.sin(g) * f, i.moveTo(e - r, s - a), i.lineTo(e + a, s - r), i.lineTo(e + r, s + a), i.lineTo(e - a, s + r), i.closePath();\n        break;\n      case \"crossRot\":\n        g += $t;\n      case \"cross\":\n        r = Math.cos(g) * f, a = Math.sin(g) * f, i.moveTo(e - r, s - a), i.lineTo(e + r, s + a), i.moveTo(e + a, s - r), i.lineTo(e - a, s + r);\n        break;\n      case \"star\":\n        r = Math.cos(g) * f, a = Math.sin(g) * f, i.moveTo(e - r, s - a), i.lineTo(e + r, s + a), i.moveTo(e + a, s - r), i.lineTo(e - a, s + r), g += $t, r = Math.cos(g) * f, a = Math.sin(g) * f, i.moveTo(e - r, s - a), i.lineTo(e + r, s + a), i.moveTo(e + a, s - r), i.lineTo(e - a, s + r);\n        break;\n      case \"line\":\n        r = n ? n / 2 : Math.cos(g) * f, a = Math.sin(g) * f, i.moveTo(e - r, s - a), i.lineTo(e + r, s + a);\n        break;\n      case \"dash\":\n        i.moveTo(e, s), i.lineTo(e + Math.cos(g) * f, s + Math.sin(g) * f);\n        break;\n    }\n    i.fill(), t.borderWidth > 0 && i.stroke();\n  }\n}\nfunction re(i, t, e) {\n  return e = e || 0.5, !t || i && i.x > t.left - e && i.x < t.right + e && i.y > t.top - e && i.y < t.bottom + e;\n}\nfunction Xe(i, t) {\n  i.save(), i.beginPath(), i.rect(t.left, t.top, t.right - t.left, t.bottom - t.top), i.clip();\n}\nfunction Ue(i) {\n  i.restore();\n}\nfunction lr(i, t, e, s, n) {\n  if (!t) return i.lineTo(e.x, e.y);\n  if (n === \"middle\") {\n    const o = (t.x + e.x) / 2;\n    i.lineTo(o, t.y), i.lineTo(o, e.y);\n  } else n === \"after\" != !!s ? i.lineTo(t.x, e.y) : i.lineTo(e.x, t.y);\n  i.lineTo(e.x, e.y);\n}\nfunction cr(i, t, e, s) {\n  if (!t) return i.lineTo(e.x, e.y);\n  i.bezierCurveTo(s ? t.cp1x : t.cp2x, s ? t.cp1y : t.cp2y, s ? e.cp2x : e.cp1x, s ? e.cp2y : e.cp1y, e.x, e.y);\n}\nfunction Tt(i, t, e, s, n, o = {}) {\n  const r = z(t) ? t : [t],\n    a = o.strokeWidth > 0 && o.strokeColor !== \"\";\n  let l, c;\n  for (i.save(), i.font = n.string, hr(i, o), l = 0; l < r.length; ++l) c = r[l], a && (o.strokeColor && (i.strokeStyle = o.strokeColor), T(o.strokeWidth) || (i.lineWidth = o.strokeWidth), i.strokeText(c, e, s, o.maxWidth)), i.fillText(c, e, s, o.maxWidth), dr(i, e, s, c, o), s += n.lineHeight;\n  i.restore();\n}\nfunction hr(i, t) {\n  t.translation && i.translate(t.translation[0], t.translation[1]), T(t.rotation) || i.rotate(t.rotation), t.color && (i.fillStyle = t.color), t.textAlign && (i.textAlign = t.textAlign), t.textBaseline && (i.textBaseline = t.textBaseline);\n}\nfunction dr(i, t, e, s, n) {\n  if (n.strikethrough || n.underline) {\n    const o = i.measureText(s),\n      r = t - o.actualBoundingBoxLeft,\n      a = t + o.actualBoundingBoxRight,\n      l = e - o.actualBoundingBoxAscent,\n      c = e + o.actualBoundingBoxDescent,\n      h = n.strikethrough ? (l + c) / 2 : c;\n    i.strokeStyle = i.fillStyle, i.beginPath(), i.lineWidth = n.decorationWidth || 2, i.moveTo(r, h), i.lineTo(a, h), i.stroke();\n  }\n}\nfunction ae(i, t) {\n  const {\n    x: e,\n    y: s,\n    w: n,\n    h: o,\n    radius: r\n  } = t;\n  i.arc(e + r.topLeft, s + r.topLeft, r.topLeft, -V, B, !0), i.lineTo(e, s + o - r.bottomLeft), i.arc(e + r.bottomLeft, s + o - r.bottomLeft, r.bottomLeft, B, V, !0), i.lineTo(e + n - r.bottomRight, s + o), i.arc(e + n - r.bottomRight, s + o - r.bottomRight, r.bottomRight, V, 0, !0), i.lineTo(e + n, s + r.topRight), i.arc(e + n - r.topRight, s + r.topRight, r.topRight, 0, -V, !0), i.lineTo(e + r.topLeft, s);\n}\nconst ur = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/),\n  fr = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction gr(i, t) {\n  const e = (\"\" + i).match(ur);\n  if (!e || e[1] === \"normal\") return t * 1.2;\n  switch (i = +e[2], e[3]) {\n    case \"px\":\n      return i;\n    case \"%\":\n      i /= 100;\n      break;\n  }\n  return t * i;\n}\nconst pr = i => +i || 0;\nfunction Ii(i, t) {\n  const e = {},\n    s = D(t),\n    n = s ? Object.keys(t) : t,\n    o = D(i) ? s ? r => C(i[r], i[t[r]]) : r => i[r] : () => i;\n  for (const r of n) e[r] = pr(o(r));\n  return e;\n}\nfunction kn(i) {\n  return Ii(i, {\n    top: \"y\",\n    right: \"x\",\n    bottom: \"y\",\n    left: \"x\"\n  });\n}\nfunction Dt(i) {\n  return Ii(i, [\"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"]);\n}\nfunction K(i) {\n  const t = kn(i);\n  return t.width = t.left + t.right, t.height = t.top + t.bottom, t;\n}\nfunction $(i, t) {\n  i = i || {}, t = t || O.font;\n  let e = C(i.size, t.size);\n  typeof e == \"string\" && (e = parseInt(e, 10));\n  let s = C(i.style, t.style);\n  s && !(\"\" + s).match(fr) && (console.warn('Invalid font style specified: \"' + s + '\"'), s = \"\");\n  const n = {\n    family: C(i.family, t.family),\n    lineHeight: gr(C(i.lineHeight, t.lineHeight), e),\n    size: e,\n    style: s,\n    weight: C(i.weight, t.weight),\n    string: \"\"\n  };\n  return n.string = rr(n), n;\n}\nfunction Zt(i, t, e, s) {\n  let n = !0,\n    o,\n    r,\n    a;\n  for (o = 0, r = i.length; o < r; ++o) if (a = i[o], a !== void 0 && (t !== void 0 && typeof a == \"function\" && (a = a(t), n = !1), e !== void 0 && z(a) && (a = a[e % a.length], n = !1), a !== void 0)) return s && !n && (s.cacheable = !1), a;\n}\nfunction mr(i, t, e) {\n  const {\n      min: s,\n      max: n\n    } = i,\n    o = an(t, (n - s) / 2),\n    r = (a, l) => e && a === 0 ? 0 : a + l;\n  return {\n    min: r(s, -Math.abs(o)),\n    max: r(n, o)\n  };\n}\nfunction vt(i, t) {\n  return Object.assign(Object.create(i), t);\n}\nfunction zi(i, t = [\"\"], e = i, s, n = () => i[0]) {\n  et(s) || (s = Cn(\"_fallback\", i));\n  const o = {\n    [Symbol.toStringTag]: \"Object\",\n    _cacheable: !0,\n    _scopes: i,\n    _rootScopes: e,\n    _fallback: s,\n    _getTarget: n,\n    override: r => zi([r, ...i], t, e, s)\n  };\n  return new Proxy(o, {\n    deleteProperty(r, a) {\n      return delete r[a], delete r._keys, delete i[0][a], !0;\n    },\n    get(r, a) {\n      return Sn(r, a, () => wr(a, t, i, r));\n    },\n    getOwnPropertyDescriptor(r, a) {\n      return Reflect.getOwnPropertyDescriptor(r._scopes[0], a);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(i[0]);\n    },\n    has(r, a) {\n      return as(r).includes(a);\n    },\n    ownKeys(r) {\n      return as(r);\n    },\n    set(r, a, l) {\n      const c = r._storage || (r._storage = n());\n      return r[a] = c[a] = l, delete r._keys, !0;\n    }\n  });\n}\nfunction Vt(i, t, e, s) {\n  const n = {\n    _cacheable: !1,\n    _proxy: i,\n    _context: t,\n    _subProxy: e,\n    _stack: /* @__PURE__ */new Set(),\n    _descriptors: wn(i, s),\n    setContext: o => Vt(i, o, e, s),\n    override: o => Vt(i.override(o), t, e, s)\n  };\n  return new Proxy(n, {\n    deleteProperty(o, r) {\n      return delete o[r], delete i[r], !0;\n    },\n    get(o, r, a) {\n      return Sn(o, r, () => xr(o, r, a));\n    },\n    getOwnPropertyDescriptor(o, r) {\n      return o._descriptors.allKeys ? Reflect.has(i, r) ? {\n        enumerable: !0,\n        configurable: !0\n      } : void 0 : Reflect.getOwnPropertyDescriptor(i, r);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(i);\n    },\n    has(o, r) {\n      return Reflect.has(i, r);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(i);\n    },\n    set(o, r, a) {\n      return i[r] = a, delete o[r], !0;\n    }\n  });\n}\nfunction wn(i, t = {\n  scriptable: !0,\n  indexable: !0\n}) {\n  const {\n    _scriptable: e = t.scriptable,\n    _indexable: s = t.indexable,\n    _allKeys: n = t.allKeys\n  } = i;\n  return {\n    allKeys: n,\n    scriptable: e,\n    indexable: s,\n    isScriptable: yt(e) ? e : () => e,\n    isIndexable: yt(s) ? s : () => s\n  };\n}\nconst br = (i, t) => i ? i + Oi(t) : t,\n  Bi = (i, t) => D(t) && i !== \"adapters\" && (Object.getPrototypeOf(t) === null || t.constructor === Object);\nfunction Sn(i, t, e) {\n  if (Object.prototype.hasOwnProperty.call(i, t)) return i[t];\n  const s = e();\n  return i[t] = s, s;\n}\nfunction xr(i, t, e) {\n  const {\n    _proxy: s,\n    _context: n,\n    _subProxy: o,\n    _descriptors: r\n  } = i;\n  let a = s[t];\n  return yt(a) && r.isScriptable(t) && (a = _r(t, a, i, e)), z(a) && a.length && (a = yr(t, a, i, r.isIndexable)), Bi(t, a) && (a = Vt(a, n, o && o[t], r)), a;\n}\nfunction _r(i, t, e, s) {\n  const {\n    _proxy: n,\n    _context: o,\n    _subProxy: r,\n    _stack: a\n  } = e;\n  if (a.has(i)) throw new Error(\"Recursion detected: \" + Array.from(a).join(\"->\") + \"->\" + i);\n  return a.add(i), t = t(o, r || s), a.delete(i), Bi(i, t) && (t = Vi(n._scopes, n, i, t)), t;\n}\nfunction yr(i, t, e, s) {\n  const {\n    _proxy: n,\n    _context: o,\n    _subProxy: r,\n    _descriptors: a\n  } = e;\n  if (et(o.index) && s(i)) t = t[o.index % t.length];else if (D(t[0])) {\n    const l = t,\n      c = n._scopes.filter(h => h !== l);\n    t = [];\n    for (const h of l) {\n      const d = Vi(c, n, i, h);\n      t.push(Vt(d, o, r && r[i], a));\n    }\n  }\n  return t;\n}\nfunction Pn(i, t, e) {\n  return yt(i) ? i(t, e) : i;\n}\nconst vr = (i, t) => i === !0 ? t : typeof i == \"string\" ? _t(t, i) : void 0;\nfunction Mr(i, t, e, s, n) {\n  for (const o of t) {\n    const r = vr(e, o);\n    if (r) {\n      i.add(r);\n      const a = Pn(r._fallback, e, n);\n      if (et(a) && a !== e && a !== s) return a;\n    } else if (r === !1 && et(s) && e !== s) return null;\n  }\n  return !1;\n}\nfunction Vi(i, t, e, s) {\n  const n = t._rootScopes,\n    o = Pn(t._fallback, e, s),\n    r = [...i, ...n],\n    a = /* @__PURE__ */new Set();\n  a.add(s);\n  let l = rs(a, r, e, o || e, s);\n  return l === null || et(o) && o !== e && (l = rs(a, r, o, l, s), l === null) ? !1 : zi(Array.from(a), [\"\"], n, o, () => kr(t, e, s));\n}\nfunction rs(i, t, e, s, n) {\n  for (; e;) e = Mr(i, t, e, s, n);\n  return e;\n}\nfunction kr(i, t, e) {\n  const s = i._getTarget();\n  t in s || (s[t] = {});\n  const n = s[t];\n  return z(n) && D(e) ? e : n;\n}\nfunction wr(i, t, e, s) {\n  let n;\n  for (const o of t) if (n = Cn(br(o, i), e), et(n)) return Bi(i, n) ? Vi(e, s, i, n) : n;\n}\nfunction Cn(i, t) {\n  for (const e of t) {\n    if (!e) continue;\n    const s = e[i];\n    if (et(s)) return s;\n  }\n}\nfunction as(i) {\n  let t = i._keys;\n  return t || (t = i._keys = Sr(i._scopes)), t;\n}\nfunction Sr(i) {\n  const t = /* @__PURE__ */new Set();\n  for (const e of i) for (const s of Object.keys(e).filter(n => !n.startsWith(\"_\"))) t.add(s);\n  return Array.from(t);\n}\nfunction Dn(i, t, e, s) {\n  const {\n      iScale: n\n    } = i,\n    {\n      key: o = \"r\"\n    } = this._parsing,\n    r = new Array(s);\n  let a, l, c, h;\n  for (a = 0, l = s; a < l; ++a) c = a + e, h = t[c], r[a] = {\n    r: n.parse(_t(h, o), c)\n  };\n  return r;\n}\nconst Pr = Number.EPSILON || 1e-14,\n  Wt = (i, t) => t < i.length && !i[t].skip && i[t],\n  On = i => i === \"x\" ? \"y\" : \"x\";\nfunction Cr(i, t, e, s) {\n  const n = i.skip ? t : i,\n    o = t,\n    r = e.skip ? t : e,\n    a = bi(o, n),\n    l = bi(r, o);\n  let c = a / (a + l),\n    h = l / (a + l);\n  c = isNaN(c) ? 0 : c, h = isNaN(h) ? 0 : h;\n  const d = s * c,\n    u = s * h;\n  return {\n    previous: {\n      x: o.x - d * (r.x - n.x),\n      y: o.y - d * (r.y - n.y)\n    },\n    next: {\n      x: o.x + u * (r.x - n.x),\n      y: o.y + u * (r.y - n.y)\n    }\n  };\n}\nfunction Dr(i, t, e) {\n  const s = i.length;\n  let n,\n    o,\n    r,\n    a,\n    l,\n    c = Wt(i, 0);\n  for (let h = 0; h < s - 1; ++h) if (l = c, c = Wt(i, h + 1), !(!l || !c)) {\n    if (te(t[h], 0, Pr)) {\n      e[h] = e[h + 1] = 0;\n      continue;\n    }\n    n = e[h] / t[h], o = e[h + 1] / t[h], a = Math.pow(n, 2) + Math.pow(o, 2), !(a <= 9) && (r = 3 / Math.sqrt(a), e[h] = n * r * t[h], e[h + 1] = o * r * t[h]);\n  }\n}\nfunction Or(i, t, e = \"x\") {\n  const s = On(e),\n    n = i.length;\n  let o,\n    r,\n    a,\n    l = Wt(i, 0);\n  for (let c = 0; c < n; ++c) {\n    if (r = a, a = l, l = Wt(i, c + 1), !a) continue;\n    const h = a[e],\n      d = a[s];\n    r && (o = (h - r[e]) / 3, a[`cp1${e}`] = h - o, a[`cp1${s}`] = d - o * t[c]), l && (o = (l[e] - h) / 3, a[`cp2${e}`] = h + o, a[`cp2${s}`] = d + o * t[c]);\n  }\n}\nfunction Ar(i, t = \"x\") {\n  const e = On(t),\n    s = i.length,\n    n = Array(s).fill(0),\n    o = Array(s);\n  let r,\n    a,\n    l,\n    c = Wt(i, 0);\n  for (r = 0; r < s; ++r) if (a = l, l = c, c = Wt(i, r + 1), !!l) {\n    if (c) {\n      const h = c[t] - l[t];\n      n[r] = h !== 0 ? (c[e] - l[e]) / h : 0;\n    }\n    o[r] = a ? c ? lt(n[r - 1]) !== lt(n[r]) ? 0 : (n[r - 1] + n[r]) / 2 : n[r - 1] : n[r];\n  }\n  Dr(i, n, o), Or(i, o, t);\n}\nfunction De(i, t, e) {\n  return Math.max(Math.min(i, e), t);\n}\nfunction Tr(i, t) {\n  let e,\n    s,\n    n,\n    o,\n    r,\n    a = re(i[0], t);\n  for (e = 0, s = i.length; e < s; ++e) r = o, o = a, a = e < s - 1 && re(i[e + 1], t), o && (n = i[e], r && (n.cp1x = De(n.cp1x, t.left, t.right), n.cp1y = De(n.cp1y, t.top, t.bottom)), a && (n.cp2x = De(n.cp2x, t.left, t.right), n.cp2y = De(n.cp2y, t.top, t.bottom)));\n}\nfunction Lr(i, t, e, s, n) {\n  let o, r, a, l;\n  if (t.spanGaps && (i = i.filter(c => !c.skip)), t.cubicInterpolationMode === \"monotone\") Ar(i, n);else {\n    let c = s ? i[i.length - 1] : i[0];\n    for (o = 0, r = i.length; o < r; ++o) a = i[o], l = Cr(c, a, i[Math.min(o + 1, r - (s ? 0 : 1)) % r], t.tension), a.cp1x = l.previous.x, a.cp1y = l.previous.y, a.cp2x = l.next.x, a.cp2y = l.next.y, c = a;\n  }\n  t.capBezierPoints && Tr(i, e);\n}\nfunction An() {\n  return typeof window < \"u\" && typeof document < \"u\";\n}\nfunction Wi(i) {\n  let t = i.parentNode;\n  return t && t.toString() === \"[object ShadowRoot]\" && (t = t.host), t;\n}\nfunction He(i, t, e) {\n  let s;\n  return typeof i == \"string\" ? (s = parseInt(i, 10), i.indexOf(\"%\") !== -1 && (s = s / 100 * t.parentNode[e])) : s = i, s;\n}\nconst Ke = i => window.getComputedStyle(i, null);\nfunction Rr(i, t) {\n  return Ke(i).getPropertyValue(t);\n}\nconst Er = [\"top\", \"right\", \"bottom\", \"left\"];\nfunction Ot(i, t, e) {\n  const s = {};\n  e = e ? \"-\" + e : \"\";\n  for (let n = 0; n < 4; n++) {\n    const o = Er[n];\n    s[o] = parseFloat(i[t + \"-\" + o + e]) || 0;\n  }\n  return s.width = s.left + s.right, s.height = s.top + s.bottom, s;\n}\nconst Fr = (i, t, e) => (i > 0 || t > 0) && (!e || !e.shadowRoot);\nfunction Ir(i, t) {\n  const e = i.touches,\n    s = e && e.length ? e[0] : i,\n    {\n      offsetX: n,\n      offsetY: o\n    } = s;\n  let r = !1,\n    a,\n    l;\n  if (Fr(n, o, i.target)) a = n, l = o;else {\n    const c = t.getBoundingClientRect();\n    a = s.clientX - c.left, l = s.clientY - c.top, r = !0;\n  }\n  return {\n    x: a,\n    y: l,\n    box: r\n  };\n}\nfunction Pt(i, t) {\n  if (\"native\" in i) return i;\n  const {\n      canvas: e,\n      currentDevicePixelRatio: s\n    } = t,\n    n = Ke(e),\n    o = n.boxSizing === \"border-box\",\n    r = Ot(n, \"padding\"),\n    a = Ot(n, \"border\", \"width\"),\n    {\n      x: l,\n      y: c,\n      box: h\n    } = Ir(i, e),\n    d = r.left + (h && a.left),\n    u = r.top + (h && a.top);\n  let {\n    width: f,\n    height: g\n  } = t;\n  return o && (f -= r.width + a.width, g -= r.height + a.height), {\n    x: Math.round((l - d) / f * e.width / s),\n    y: Math.round((c - u) / g * e.height / s)\n  };\n}\nfunction zr(i, t, e) {\n  let s, n;\n  if (t === void 0 || e === void 0) {\n    const o = Wi(i);\n    if (!o) t = i.clientWidth, e = i.clientHeight;else {\n      const r = o.getBoundingClientRect(),\n        a = Ke(o),\n        l = Ot(a, \"border\", \"width\"),\n        c = Ot(a, \"padding\");\n      t = r.width - c.width - l.width, e = r.height - c.height - l.height, s = He(a.maxWidth, o, \"clientWidth\"), n = He(a.maxHeight, o, \"clientHeight\");\n    }\n  }\n  return {\n    width: t,\n    height: e,\n    maxWidth: s || Ve,\n    maxHeight: n || Ve\n  };\n}\nconst ai = i => Math.round(i * 10) / 10;\nfunction Br(i, t, e, s) {\n  const n = Ke(i),\n    o = Ot(n, \"margin\"),\n    r = He(n.maxWidth, i, \"clientWidth\") || Ve,\n    a = He(n.maxHeight, i, \"clientHeight\") || Ve,\n    l = zr(i, t, e);\n  let {\n    width: c,\n    height: h\n  } = l;\n  if (n.boxSizing === \"content-box\") {\n    const d = Ot(n, \"border\", \"width\"),\n      u = Ot(n, \"padding\");\n    c -= u.width + d.width, h -= u.height + d.height;\n  }\n  return c = Math.max(0, c - o.width), h = Math.max(0, s ? Math.floor(c / s) : h - o.height), c = ai(Math.min(c, r, l.maxWidth)), h = ai(Math.min(h, a, l.maxHeight)), c && !h && (h = ai(c / 2)), {\n    width: c,\n    height: h\n  };\n}\nfunction ls(i, t, e) {\n  const s = t || 1,\n    n = Math.floor(i.height * s),\n    o = Math.floor(i.width * s);\n  i.height = n / s, i.width = o / s;\n  const r = i.canvas;\n  return r.style && (e || !r.style.height && !r.style.width) && (r.style.height = `${i.height}px`, r.style.width = `${i.width}px`), i.currentDevicePixelRatio !== s || r.height !== n || r.width !== o ? (i.currentDevicePixelRatio = s, r.height = n, r.width = o, i.ctx.setTransform(s, 0, 0, s, 0, 0), !0) : !1;\n}\nconst Vr = function () {\n  let i = !1;\n  try {\n    const t = {\n      get passive() {\n        return i = !0, !1;\n      }\n    };\n    window.addEventListener(\"test\", null, t), window.removeEventListener(\"test\", null, t);\n  } catch {}\n  return i;\n}();\nfunction cs(i, t) {\n  const e = Rr(i, t),\n    s = e && e.match(/^(\\d+)(\\.\\d+)?px$/);\n  return s ? +s[1] : void 0;\n}\nfunction Ct(i, t, e, s) {\n  return {\n    x: i.x + e * (t.x - i.x),\n    y: i.y + e * (t.y - i.y)\n  };\n}\nfunction Wr(i, t, e, s) {\n  return {\n    x: i.x + e * (t.x - i.x),\n    y: s === \"middle\" ? e < 0.5 ? i.y : t.y : s === \"after\" ? e < 1 ? i.y : t.y : e > 0 ? t.y : i.y\n  };\n}\nfunction Nr(i, t, e, s) {\n  const n = {\n      x: i.cp2x,\n      y: i.cp2y\n    },\n    o = {\n      x: t.cp1x,\n      y: t.cp1y\n    },\n    r = Ct(i, n, e),\n    a = Ct(n, o, e),\n    l = Ct(o, t, e),\n    c = Ct(r, a, e),\n    h = Ct(a, l, e);\n  return Ct(c, h, e);\n}\nconst hs = /* @__PURE__ */new Map();\nfunction Hr(i, t) {\n  t = t || {};\n  const e = i + JSON.stringify(t);\n  let s = hs.get(e);\n  return s || (s = new Intl.NumberFormat(i, t), hs.set(e, s)), s;\n}\nfunction de(i, t, e) {\n  return Hr(t, e).format(i);\n}\nconst jr = function (i, t) {\n    return {\n      x(e) {\n        return i + i + t - e;\n      },\n      setWidth(e) {\n        t = e;\n      },\n      textAlign(e) {\n        return e === \"center\" ? e : e === \"right\" ? \"left\" : \"right\";\n      },\n      xPlus(e, s) {\n        return e - s;\n      },\n      leftForLtr(e, s) {\n        return e - s;\n      }\n    };\n  },\n  $r = function () {\n    return {\n      x(i) {\n        return i;\n      },\n      setWidth(i) {},\n      textAlign(i) {\n        return i;\n      },\n      xPlus(i, t) {\n        return i + t;\n      },\n      leftForLtr(i, t) {\n        return i;\n      }\n    };\n  };\nfunction zt(i, t, e) {\n  return i ? jr(t, e) : $r();\n}\nfunction Tn(i, t) {\n  let e, s;\n  (t === \"ltr\" || t === \"rtl\") && (e = i.canvas.style, s = [e.getPropertyValue(\"direction\"), e.getPropertyPriority(\"direction\")], e.setProperty(\"direction\", t, \"important\"), i.prevTextDirection = s);\n}\nfunction Ln(i, t) {\n  t !== void 0 && (delete i.prevTextDirection, i.canvas.style.setProperty(\"direction\", t[0], t[1]));\n}\nfunction Rn(i) {\n  return i === \"angle\" ? {\n    between: oe,\n    compare: Ao,\n    normalize: Z\n  } : {\n    between: ut,\n    compare: (t, e) => t - e,\n    normalize: t => t\n  };\n}\nfunction ds({\n  start: i,\n  end: t,\n  count: e,\n  loop: s,\n  style: n\n}) {\n  return {\n    start: i % e,\n    end: t % e,\n    loop: s && (t - i + 1) % e === 0,\n    style: n\n  };\n}\nfunction Yr(i, t, e) {\n  const {\n      property: s,\n      start: n,\n      end: o\n    } = e,\n    {\n      between: r,\n      normalize: a\n    } = Rn(s),\n    l = t.length;\n  let {\n      start: c,\n      end: h,\n      loop: d\n    } = i,\n    u,\n    f;\n  if (d) {\n    for (c += l, h += l, u = 0, f = l; u < f && r(a(t[c % l][s]), n, o); ++u) c--, h--;\n    c %= l, h %= l;\n  }\n  return h < c && (h += l), {\n    start: c,\n    end: h,\n    loop: d,\n    style: i.style\n  };\n}\nfunction En(i, t, e) {\n  if (!e) return [i];\n  const {\n      property: s,\n      start: n,\n      end: o\n    } = e,\n    r = t.length,\n    {\n      compare: a,\n      between: l,\n      normalize: c\n    } = Rn(s),\n    {\n      start: h,\n      end: d,\n      loop: u,\n      style: f\n    } = Yr(i, t, e),\n    g = [];\n  let p = !1,\n    m = null,\n    b,\n    x,\n    v;\n  const y = () => l(n, v, b) && a(n, v) !== 0,\n    _ = () => a(o, b) === 0 || l(o, v, b),\n    M = () => p || y(),\n    k = () => !p || _();\n  for (let S = h, w = h; S <= d; ++S) x = t[S % r], !x.skip && (b = c(x[s]), b !== v && (p = l(b, n, o), m === null && M() && (m = a(b, n) === 0 ? S : w), m !== null && k() && (g.push(ds({\n    start: m,\n    end: S,\n    loop: u,\n    count: r,\n    style: f\n  })), m = null), w = S, v = b));\n  return m !== null && g.push(ds({\n    start: m,\n    end: d,\n    loop: u,\n    count: r,\n    style: f\n  })), g;\n}\nfunction Fn(i, t) {\n  const e = [],\n    s = i.segments;\n  for (let n = 0; n < s.length; n++) {\n    const o = En(s[n], i.points, t);\n    o.length && e.push(...o);\n  }\n  return e;\n}\nfunction Xr(i, t, e, s) {\n  let n = 0,\n    o = t - 1;\n  if (e && !s) for (; n < t && !i[n].skip;) n++;\n  for (; n < t && i[n].skip;) n++;\n  for (n %= t, e && (o += n); o > n && i[o % t].skip;) o--;\n  return o %= t, {\n    start: n,\n    end: o\n  };\n}\nfunction Ur(i, t, e, s) {\n  const n = i.length,\n    o = [];\n  let r = t,\n    a = i[t],\n    l;\n  for (l = t + 1; l <= e; ++l) {\n    const c = i[l % n];\n    c.skip || c.stop ? a.skip || (s = !1, o.push({\n      start: t % n,\n      end: (l - 1) % n,\n      loop: s\n    }), t = r = c.stop ? l : null) : (r = l, a.skip && (t = l)), a = c;\n  }\n  return r !== null && o.push({\n    start: t % n,\n    end: r % n,\n    loop: s\n  }), o;\n}\nfunction Kr(i, t) {\n  const e = i.points,\n    s = i.options.spanGaps,\n    n = e.length;\n  if (!n) return [];\n  const o = !!i._loop,\n    {\n      start: r,\n      end: a\n    } = Xr(e, n, o, s);\n  if (s === !0) return us(i, [{\n    start: r,\n    end: a,\n    loop: o\n  }], e, t);\n  const l = a < r ? a + n : a,\n    c = !!i._fullLoop && r === 0 && a === n - 1;\n  return us(i, Ur(e, r, l, c), e, t);\n}\nfunction us(i, t, e, s) {\n  return !s || !s.setContext || !e ? t : qr(i, t, e, s);\n}\nfunction qr(i, t, e, s) {\n  const n = i._chart.getContext(),\n    o = fs(i.options),\n    {\n      _datasetIndex: r,\n      options: {\n        spanGaps: a\n      }\n    } = i,\n    l = e.length,\n    c = [];\n  let h = o,\n    d = t[0].start,\n    u = d;\n  function f(g, p, m, b) {\n    const x = a ? -1 : 1;\n    if (g !== p) {\n      for (g += l; e[g % l].skip;) g -= x;\n      for (; e[p % l].skip;) p += x;\n      g % l !== p % l && (c.push({\n        start: g % l,\n        end: p % l,\n        loop: m,\n        style: b\n      }), h = b, d = p % l);\n    }\n  }\n  for (const g of t) {\n    d = a ? d : g.start;\n    let p = e[d % l],\n      m;\n    for (u = d + 1; u <= g.end; u++) {\n      const b = e[u % l];\n      m = fs(s.setContext(vt(n, {\n        type: \"segment\",\n        p0: p,\n        p1: b,\n        p0DataIndex: (u - 1) % l,\n        p1DataIndex: u % l,\n        datasetIndex: r\n      }))), Gr(m, h) && f(d, u - 1, g.loop, h), p = b, h = m;\n    }\n    d < u - 1 && f(d, u - 1, g.loop, h);\n  }\n  return c;\n}\nfunction fs(i) {\n  return {\n    backgroundColor: i.backgroundColor,\n    borderCapStyle: i.borderCapStyle,\n    borderDash: i.borderDash,\n    borderDashOffset: i.borderDashOffset,\n    borderJoinStyle: i.borderJoinStyle,\n    borderWidth: i.borderWidth,\n    borderColor: i.borderColor\n  };\n}\nfunction Gr(i, t) {\n  return t && JSON.stringify(i) !== JSON.stringify(t);\n}\n/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nclass Zr {\n  constructor() {\n    this._request = null, this._charts = /* @__PURE__ */new Map(), this._running = !1, this._lastDate = void 0;\n  }\n  _notify(t, e, s, n) {\n    const o = e.listeners[n],\n      r = e.duration;\n    o.forEach(a => a({\n      chart: t,\n      initial: e.initial,\n      numSteps: r,\n      currentStep: Math.min(s - e.start, r)\n    }));\n  }\n  _refresh() {\n    this._request || (this._running = !0, this._request = fn.call(window, () => {\n      this._update(), this._request = null, this._running && this._refresh();\n    }));\n  }\n  _update(t = Date.now()) {\n    let e = 0;\n    this._charts.forEach((s, n) => {\n      if (!s.running || !s.items.length) return;\n      const o = s.items;\n      let r = o.length - 1,\n        a = !1,\n        l;\n      for (; r >= 0; --r) l = o[r], l._active ? (l._total > s.duration && (s.duration = l._total), l.tick(t), a = !0) : (o[r] = o[o.length - 1], o.pop());\n      a && (n.draw(), this._notify(n, s, t, \"progress\")), o.length || (s.running = !1, this._notify(n, s, t, \"complete\"), s.initial = !1), e += o.length;\n    }), this._lastDate = t, e === 0 && (this._running = !1);\n  }\n  _getAnims(t) {\n    const e = this._charts;\n    let s = e.get(t);\n    return s || (s = {\n      running: !1,\n      initial: !0,\n      items: [],\n      listeners: {\n        complete: [],\n        progress: []\n      }\n    }, e.set(t, s)), s;\n  }\n  listen(t, e, s) {\n    this._getAnims(t).listeners[e].push(s);\n  }\n  add(t, e) {\n    !e || !e.length || this._getAnims(t).items.push(...e);\n  }\n  has(t) {\n    return this._getAnims(t).items.length > 0;\n  }\n  start(t) {\n    const e = this._charts.get(t);\n    e && (e.running = !0, e.start = Date.now(), e.duration = e.items.reduce((s, n) => Math.max(s, n._duration), 0), this._refresh());\n  }\n  running(t) {\n    if (!this._running) return !1;\n    const e = this._charts.get(t);\n    return !(!e || !e.running || !e.items.length);\n  }\n  stop(t) {\n    const e = this._charts.get(t);\n    if (!e || !e.items.length) return;\n    const s = e.items;\n    let n = s.length - 1;\n    for (; n >= 0; --n) s[n].cancel();\n    e.items = [], this._notify(t, e, Date.now(), \"complete\");\n  }\n  remove(t) {\n    return this._charts.delete(t);\n  }\n}\nvar at = new Zr();\nconst gs = \"transparent\",\n  Jr = {\n    boolean(i, t, e) {\n      return e > 0.5 ? t : i;\n    },\n    color(i, t, e) {\n      const s = ns(i || gs),\n        n = s.valid && ns(t || gs);\n      return n && n.valid ? n.mix(s, e).hexString() : t;\n    },\n    number(i, t, e) {\n      return i + (t - i) * e;\n    }\n  };\nclass In {\n  constructor(t, e, s, n) {\n    const o = e[s];\n    n = Zt([t.to, n, o, t.from]);\n    const r = Zt([t.from, o, n]);\n    this._active = !0, this._fn = t.fn || Jr[t.type || typeof r], this._easing = ee[t.easing] || ee.linear, this._start = Math.floor(Date.now() + (t.delay || 0)), this._duration = this._total = Math.floor(t.duration), this._loop = !!t.loop, this._target = e, this._prop = s, this._from = r, this._to = n, this._promises = void 0;\n  }\n  active() {\n    return this._active;\n  }\n  update(t, e, s) {\n    if (this._active) {\n      this._notify(!1);\n      const n = this._target[this._prop],\n        o = s - this._start,\n        r = this._duration - o;\n      this._start = s, this._duration = Math.floor(Math.max(r, t.duration)), this._total += o, this._loop = !!t.loop, this._to = Zt([t.to, e, n, t.from]), this._from = Zt([t.from, n, e]);\n    }\n  }\n  cancel() {\n    this._active && (this.tick(Date.now()), this._active = !1, this._notify(!1));\n  }\n  tick(t) {\n    const e = t - this._start,\n      s = this._duration,\n      n = this._prop,\n      o = this._from,\n      r = this._loop,\n      a = this._to;\n    let l;\n    if (this._active = o !== a && (r || e < s), !this._active) {\n      this._target[n] = a, this._notify(!0);\n      return;\n    }\n    if (e < 0) {\n      this._target[n] = o;\n      return;\n    }\n    l = e / s % 2, l = r && l > 1 ? 2 - l : l, l = this._easing(Math.min(1, Math.max(0, l))), this._target[n] = this._fn(o, a, l);\n  }\n  wait() {\n    const t = this._promises || (this._promises = []);\n    return new Promise((e, s) => {\n      t.push({\n        res: e,\n        rej: s\n      });\n    });\n  }\n  _notify(t) {\n    const e = t ? \"res\" : \"rej\",\n      s = this._promises || [];\n    for (let n = 0; n < s.length; n++) s[n][e]();\n  }\n}\nconst Qr = [\"x\", \"y\", \"borderWidth\", \"radius\", \"tension\"],\n  ta = [\"color\", \"borderColor\", \"backgroundColor\"];\nO.set(\"animation\", {\n  delay: void 0,\n  duration: 1e3,\n  easing: \"easeOutQuart\",\n  fn: void 0,\n  from: void 0,\n  loop: void 0,\n  to: void 0,\n  type: void 0\n});\nconst ea = Object.keys(O.animation);\nO.describe(\"animation\", {\n  _fallback: !1,\n  _indexable: !1,\n  _scriptable: i => i !== \"onProgress\" && i !== \"onComplete\" && i !== \"fn\"\n});\nO.set(\"animations\", {\n  colors: {\n    type: \"color\",\n    properties: ta\n  },\n  numbers: {\n    type: \"number\",\n    properties: Qr\n  }\n});\nO.describe(\"animations\", {\n  _fallback: \"animation\"\n});\nO.set(\"transitions\", {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: \"transparent\"\n      },\n      visible: {\n        type: \"boolean\",\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: \"transparent\"\n      },\n      visible: {\n        type: \"boolean\",\n        easing: \"linear\",\n        fn: i => i | 0\n      }\n    }\n  }\n});\nclass Ni {\n  constructor(t, e) {\n    this._chart = t, this._properties = /* @__PURE__ */new Map(), this.configure(e);\n  }\n  configure(t) {\n    if (!D(t)) return;\n    const e = this._properties;\n    Object.getOwnPropertyNames(t).forEach(s => {\n      const n = t[s];\n      if (!D(n)) return;\n      const o = {};\n      for (const r of ea) o[r] = n[r];\n      (z(n.properties) && n.properties || [s]).forEach(r => {\n        (r === s || !e.has(r)) && e.set(r, o);\n      });\n    });\n  }\n  _animateOptions(t, e) {\n    const s = e.options,\n      n = sa(t, s);\n    if (!n) return [];\n    const o = this._createAnimations(n, s);\n    return s.$shared && ia(t.options.$animations, s).then(() => {\n      t.options = s;\n    }, () => {}), o;\n  }\n  _createAnimations(t, e) {\n    const s = this._properties,\n      n = [],\n      o = t.$animations || (t.$animations = {}),\n      r = Object.keys(e),\n      a = Date.now();\n    let l;\n    for (l = r.length - 1; l >= 0; --l) {\n      const c = r[l];\n      if (c.charAt(0) === \"$\") continue;\n      if (c === \"options\") {\n        n.push(...this._animateOptions(t, e));\n        continue;\n      }\n      const h = e[c];\n      let d = o[c];\n      const u = s.get(c);\n      if (d) if (u && d.active()) {\n        d.update(u, h, a);\n        continue;\n      } else d.cancel();\n      if (!u || !u.duration) {\n        t[c] = h;\n        continue;\n      }\n      o[c] = d = new In(u, t, c, h), n.push(d);\n    }\n    return n;\n  }\n  update(t, e) {\n    if (this._properties.size === 0) {\n      Object.assign(t, e);\n      return;\n    }\n    const s = this._createAnimations(t, e);\n    if (s.length) return at.add(this._chart, s), !0;\n  }\n}\nfunction ia(i, t) {\n  const e = [],\n    s = Object.keys(t);\n  for (let n = 0; n < s.length; n++) {\n    const o = i[s[n]];\n    o && o.active() && e.push(o.wait());\n  }\n  return Promise.all(e);\n}\nfunction sa(i, t) {\n  if (!t) return;\n  let e = i.options;\n  if (!e) {\n    i.options = t;\n    return;\n  }\n  return e.$shared && (i.options = e = Object.assign({}, e, {\n    $shared: !1,\n    $animations: {}\n  })), e;\n}\nfunction ps(i, t) {\n  const e = i && i.options || {},\n    s = e.reverse,\n    n = e.min === void 0 ? t : 0,\n    o = e.max === void 0 ? t : 0;\n  return {\n    start: s ? o : n,\n    end: s ? n : o\n  };\n}\nfunction na(i, t, e) {\n  if (e === !1) return !1;\n  const s = ps(i, e),\n    n = ps(t, e);\n  return {\n    top: n.end,\n    right: s.end,\n    bottom: n.start,\n    left: s.start\n  };\n}\nfunction oa(i) {\n  let t, e, s, n;\n  return D(i) ? (t = i.top, e = i.right, s = i.bottom, n = i.left) : t = e = s = n = i, {\n    top: t,\n    right: e,\n    bottom: s,\n    left: n,\n    disabled: i === !1\n  };\n}\nfunction zn(i, t) {\n  const e = [],\n    s = i._getSortedDatasetMetas(t);\n  let n, o;\n  for (n = 0, o = s.length; n < o; ++n) e.push(s[n].index);\n  return e;\n}\nfunction ms(i, t, e, s = {}) {\n  const n = i.keys,\n    o = s.mode === \"single\";\n  let r, a, l, c;\n  if (t !== null) {\n    for (r = 0, a = n.length; r < a; ++r) {\n      if (l = +n[r], l === e) {\n        if (s.all) continue;\n        break;\n      }\n      c = i.values[l], N(c) && (o || t === 0 || lt(t) === lt(c)) && (t += c);\n    }\n    return t;\n  }\n}\nfunction ra(i) {\n  const t = Object.keys(i),\n    e = new Array(t.length);\n  let s, n, o;\n  for (s = 0, n = t.length; s < n; ++s) o = t[s], e[s] = {\n    x: o,\n    y: i[o]\n  };\n  return e;\n}\nfunction bs(i, t) {\n  const e = i && i.options.stacked;\n  return e || e === void 0 && t.stack !== void 0;\n}\nfunction aa(i, t, e) {\n  return `${i.id}.${t.id}.${e.stack || e.type}`;\n}\nfunction la(i) {\n  const {\n    min: t,\n    max: e,\n    minDefined: s,\n    maxDefined: n\n  } = i.getUserBounds();\n  return {\n    min: s ? t : Number.NEGATIVE_INFINITY,\n    max: n ? e : Number.POSITIVE_INFINITY\n  };\n}\nfunction ca(i, t, e) {\n  const s = i[t] || (i[t] = {});\n  return s[e] || (s[e] = {});\n}\nfunction xs(i, t, e, s) {\n  for (const n of t.getMatchingVisibleMetas(s).reverse()) {\n    const o = i[n.index];\n    if (e && o > 0 || !e && o < 0) return n.index;\n  }\n  return null;\n}\nfunction _s(i, t) {\n  const {\n      chart: e,\n      _cachedMeta: s\n    } = i,\n    n = e._stacks || (e._stacks = {}),\n    {\n      iScale: o,\n      vScale: r,\n      index: a\n    } = s,\n    l = o.axis,\n    c = r.axis,\n    h = aa(o, r, s),\n    d = t.length;\n  let u;\n  for (let f = 0; f < d; ++f) {\n    const g = t[f],\n      {\n        [l]: p,\n        [c]: m\n      } = g,\n      b = g._stacks || (g._stacks = {});\n    u = b[c] = ca(n, h, p), u[a] = m, u._top = xs(u, r, !0, s.type), u._bottom = xs(u, r, !1, s.type);\n  }\n}\nfunction li(i, t) {\n  const e = i.scales;\n  return Object.keys(e).filter(s => e[s].axis === t).shift();\n}\nfunction ha(i, t) {\n  return vt(i, {\n    active: !1,\n    dataset: void 0,\n    datasetIndex: t,\n    index: t,\n    mode: \"default\",\n    type: \"dataset\"\n  });\n}\nfunction da(i, t, e) {\n  return vt(i, {\n    active: !1,\n    dataIndex: t,\n    parsed: void 0,\n    raw: void 0,\n    element: e,\n    index: t,\n    mode: \"default\",\n    type: \"data\"\n  });\n}\nfunction Yt(i, t) {\n  const e = i.controller.index,\n    s = i.vScale && i.vScale.axis;\n  if (s) {\n    t = t || i._parsed;\n    for (const n of t) {\n      const o = n._stacks;\n      if (!o || o[s] === void 0 || o[s][e] === void 0) return;\n      delete o[s][e];\n    }\n  }\n}\nconst ci = i => i === \"reset\" || i === \"none\",\n  ys = (i, t) => t ? i : Object.assign({}, i),\n  ua = (i, t, e) => i && !t.hidden && t._stacked && {\n    keys: zn(e, !0),\n    values: null\n  };\nclass it {\n  constructor(t, e) {\n    this.chart = t, this._ctx = t.ctx, this.index = e, this._cachedDataOpts = {}, this._cachedMeta = this.getMeta(), this._type = this._cachedMeta.type, this.options = void 0, this._parsing = !1, this._data = void 0, this._objectData = void 0, this._sharedOptions = void 0, this._drawStart = void 0, this._drawCount = void 0, this.enableOptionSharing = !1, this.supportsDecimation = !1, this.$context = void 0, this._syncList = [], this.initialize();\n  }\n  initialize() {\n    const t = this._cachedMeta;\n    this.configure(), this.linkScales(), t._stacked = bs(t.vScale, t), this.addElements();\n  }\n  updateIndex(t) {\n    this.index !== t && Yt(this._cachedMeta), this.index = t;\n  }\n  linkScales() {\n    const t = this.chart,\n      e = this._cachedMeta,\n      s = this.getDataset(),\n      n = (d, u, f, g) => d === \"x\" ? u : d === \"r\" ? g : f,\n      o = e.xAxisID = C(s.xAxisID, li(t, \"x\")),\n      r = e.yAxisID = C(s.yAxisID, li(t, \"y\")),\n      a = e.rAxisID = C(s.rAxisID, li(t, \"r\")),\n      l = e.indexAxis,\n      c = e.iAxisID = n(l, o, r, a),\n      h = e.vAxisID = n(l, r, o, a);\n    e.xScale = this.getScaleForId(o), e.yScale = this.getScaleForId(r), e.rScale = this.getScaleForId(a), e.iScale = this.getScaleForId(c), e.vScale = this.getScaleForId(h);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(t) {\n    return this.chart.scales[t];\n  }\n  _getOtherScale(t) {\n    const e = this._cachedMeta;\n    return t === e.iScale ? e.vScale : e.iScale;\n  }\n  reset() {\n    this._update(\"reset\");\n  }\n  _destroy() {\n    const t = this._cachedMeta;\n    this._data && Zi(this._data, this), t._stacked && Yt(t);\n  }\n  _dataCheck() {\n    const t = this.getDataset(),\n      e = t.data || (t.data = []),\n      s = this._data;\n    if (D(e)) this._data = ra(e);else if (s !== e) {\n      if (s) {\n        Zi(s, this);\n        const n = this._cachedMeta;\n        Yt(n), n._parsed = [];\n      }\n      e && Object.isExtensible(e) && Eo(e, this), this._syncList = [], this._data = e;\n    }\n  }\n  addElements() {\n    const t = this._cachedMeta;\n    this._dataCheck(), this.datasetElementType && (t.dataset = new this.datasetElementType());\n  }\n  buildOrUpdateElements(t) {\n    const e = this._cachedMeta,\n      s = this.getDataset();\n    let n = !1;\n    this._dataCheck();\n    const o = e._stacked;\n    e._stacked = bs(e.vScale, e), e.stack !== s.stack && (n = !0, Yt(e), e.stack = s.stack), this._resyncElements(t), (n || o !== e._stacked) && _s(this, e._parsed);\n  }\n  configure() {\n    const t = this.chart.config,\n      e = t.datasetScopeKeys(this._type),\n      s = t.getOptionScopes(this.getDataset(), e, !0);\n    this.options = t.createResolver(s, this.getContext()), this._parsing = this.options.parsing, this._cachedDataOpts = {};\n  }\n  parse(t, e) {\n    const {\n        _cachedMeta: s,\n        _data: n\n      } = this,\n      {\n        iScale: o,\n        _stacked: r\n      } = s,\n      a = o.axis;\n    let l = t === 0 && e === n.length ? !0 : s._sorted,\n      c = t > 0 && s._parsed[t - 1],\n      h,\n      d,\n      u;\n    if (this._parsing === !1) s._parsed = n, s._sorted = !0, u = n;else {\n      z(n[t]) ? u = this.parseArrayData(s, n, t, e) : D(n[t]) ? u = this.parseObjectData(s, n, t, e) : u = this.parsePrimitiveData(s, n, t, e);\n      const f = () => d[a] === null || c && d[a] < c[a];\n      for (h = 0; h < e; ++h) s._parsed[h + t] = d = u[h], l && (f() && (l = !1), c = d);\n      s._sorted = l;\n    }\n    r && _s(this, u);\n  }\n  parsePrimitiveData(t, e, s, n) {\n    const {\n        iScale: o,\n        vScale: r\n      } = t,\n      a = o.axis,\n      l = r.axis,\n      c = o.getLabels(),\n      h = o === r,\n      d = new Array(n);\n    let u, f, g;\n    for (u = 0, f = n; u < f; ++u) g = u + s, d[u] = {\n      [a]: h || o.parse(c[g], g),\n      [l]: r.parse(e[g], g)\n    };\n    return d;\n  }\n  parseArrayData(t, e, s, n) {\n    const {\n        xScale: o,\n        yScale: r\n      } = t,\n      a = new Array(n);\n    let l, c, h, d;\n    for (l = 0, c = n; l < c; ++l) h = l + s, d = e[h], a[l] = {\n      x: o.parse(d[0], h),\n      y: r.parse(d[1], h)\n    };\n    return a;\n  }\n  parseObjectData(t, e, s, n) {\n    const {\n        xScale: o,\n        yScale: r\n      } = t,\n      {\n        xAxisKey: a = \"x\",\n        yAxisKey: l = \"y\"\n      } = this._parsing,\n      c = new Array(n);\n    let h, d, u, f;\n    for (h = 0, d = n; h < d; ++h) u = h + s, f = e[u], c[h] = {\n      x: o.parse(_t(f, a), u),\n      y: r.parse(_t(f, l), u)\n    };\n    return c;\n  }\n  getParsed(t) {\n    return this._cachedMeta._parsed[t];\n  }\n  getDataElement(t) {\n    return this._cachedMeta.data[t];\n  }\n  applyStack(t, e, s) {\n    const n = this.chart,\n      o = this._cachedMeta,\n      r = e[t.axis],\n      a = {\n        keys: zn(n, !0),\n        values: e._stacks[t.axis]\n      };\n    return ms(a, r, o.index, {\n      mode: s\n    });\n  }\n  updateRangeFromParsed(t, e, s, n) {\n    const o = s[e.axis];\n    let r = o === null ? NaN : o;\n    const a = n && s._stacks[e.axis];\n    n && a && (n.values = a, r = ms(n, o, this._cachedMeta.index)), t.min = Math.min(t.min, r), t.max = Math.max(t.max, r);\n  }\n  getMinMax(t, e) {\n    const s = this._cachedMeta,\n      n = s._parsed,\n      o = s._sorted && t === s.iScale,\n      r = n.length,\n      a = this._getOtherScale(t),\n      l = ua(e, s, this.chart),\n      c = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      },\n      {\n        min: h,\n        max: d\n      } = la(a);\n    let u, f;\n    function g() {\n      f = n[u];\n      const p = f[a.axis];\n      return !N(f[t.axis]) || h > p || d < p;\n    }\n    for (u = 0; u < r && !(!g() && (this.updateRangeFromParsed(c, t, f, l), o)); ++u);\n    if (o) {\n      for (u = r - 1; u >= 0; --u) if (!g()) {\n        this.updateRangeFromParsed(c, t, f, l);\n        break;\n      }\n    }\n    return c;\n  }\n  getAllParsedValues(t) {\n    const e = this._cachedMeta._parsed,\n      s = [];\n    let n, o, r;\n    for (n = 0, o = e.length; n < o; ++n) r = e[n][t.axis], N(r) && s.push(r);\n    return s;\n  }\n  getMaxOverflow() {\n    return !1;\n  }\n  getLabelAndValue(t) {\n    const e = this._cachedMeta,\n      s = e.iScale,\n      n = e.vScale,\n      o = this.getParsed(t);\n    return {\n      label: s ? \"\" + s.getLabelForValue(o[s.axis]) : \"\",\n      value: n ? \"\" + n.getLabelForValue(o[n.axis]) : \"\"\n    };\n  }\n  _update(t) {\n    const e = this._cachedMeta;\n    this.update(t || \"default\"), e._clip = oa(C(this.options.clip, na(e.xScale, e.yScale, this.getMaxOverflow())));\n  }\n  update(t) {}\n  draw() {\n    const t = this._ctx,\n      e = this.chart,\n      s = this._cachedMeta,\n      n = s.data || [],\n      o = e.chartArea,\n      r = [],\n      a = this._drawStart || 0,\n      l = this._drawCount || n.length - a,\n      c = this.options.drawActiveElementsOnTop;\n    let h;\n    for (s.dataset && s.dataset.draw(t, o, a, l), h = a; h < a + l; ++h) {\n      const d = n[h];\n      d.hidden || (d.active && c ? r.push(d) : d.draw(t, o));\n    }\n    for (h = 0; h < r.length; ++h) r[h].draw(t, o);\n  }\n  getStyle(t, e) {\n    const s = e ? \"active\" : \"default\";\n    return t === void 0 && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(s) : this.resolveDataElementOptions(t || 0, s);\n  }\n  getContext(t, e, s) {\n    const n = this.getDataset();\n    let o;\n    if (t >= 0 && t < this._cachedMeta.data.length) {\n      const r = this._cachedMeta.data[t];\n      o = r.$context || (r.$context = da(this.getContext(), t, r)), o.parsed = this.getParsed(t), o.raw = n.data[t], o.index = o.dataIndex = t;\n    } else o = this.$context || (this.$context = ha(this.chart.getContext(), this.index)), o.dataset = n, o.index = o.datasetIndex = this.index;\n    return o.active = !!e, o.mode = s, o;\n  }\n  resolveDatasetElementOptions(t) {\n    return this._resolveElementOptions(this.datasetElementType.id, t);\n  }\n  resolveDataElementOptions(t, e) {\n    return this._resolveElementOptions(this.dataElementType.id, e, t);\n  }\n  _resolveElementOptions(t, e = \"default\", s) {\n    const n = e === \"active\",\n      o = this._cachedDataOpts,\n      r = t + \"-\" + e,\n      a = o[r],\n      l = this.enableOptionSharing && et(s);\n    if (a) return ys(a, l);\n    const c = this.chart.config,\n      h = c.datasetElementScopeKeys(this._type, t),\n      d = n ? [`${t}Hover`, \"hover\", t, \"\"] : [t, \"\"],\n      u = c.getOptionScopes(this.getDataset(), h),\n      f = Object.keys(O.elements[t]),\n      g = () => this.getContext(s, n),\n      p = c.resolveNamedOptions(u, f, g, d);\n    return p.$shared && (p.$shared = l, o[r] = Object.freeze(ys(p, l))), p;\n  }\n  _resolveAnimations(t, e, s) {\n    const n = this.chart,\n      o = this._cachedDataOpts,\n      r = `animation-${e}`,\n      a = o[r];\n    if (a) return a;\n    let l;\n    if (n.options.animation !== !1) {\n      const h = this.chart.config,\n        d = h.datasetAnimationScopeKeys(this._type, e),\n        u = h.getOptionScopes(this.getDataset(), d);\n      l = h.createResolver(u, this.getContext(t, s, e));\n    }\n    const c = new Ni(n, l && l.animations);\n    return l && l._cacheable && (o[r] = Object.freeze(c)), c;\n  }\n  getSharedOptions(t) {\n    if (t.$shared) return this._sharedOptions || (this._sharedOptions = Object.assign({}, t));\n  }\n  includeOptions(t, e) {\n    return !e || ci(t) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(t, e) {\n    const s = this.resolveDataElementOptions(t, e),\n      n = this._sharedOptions,\n      o = this.getSharedOptions(s),\n      r = this.includeOptions(e, o) || o !== n;\n    return this.updateSharedOptions(o, e, s), {\n      sharedOptions: o,\n      includeOptions: r\n    };\n  }\n  updateElement(t, e, s, n) {\n    ci(n) ? Object.assign(t, s) : this._resolveAnimations(e, n).update(t, s);\n  }\n  updateSharedOptions(t, e, s) {\n    t && !ci(e) && this._resolveAnimations(void 0, e).update(t, s);\n  }\n  _setStyle(t, e, s, n) {\n    t.active = n;\n    const o = this.getStyle(e, n);\n    this._resolveAnimations(e, s, n).update(t, {\n      options: !n && this.getSharedOptions(o) || o\n    });\n  }\n  removeHoverStyle(t, e, s) {\n    this._setStyle(t, s, \"active\", !1);\n  }\n  setHoverStyle(t, e, s) {\n    this._setStyle(t, s, \"active\", !0);\n  }\n  _removeDatasetHoverStyle() {\n    const t = this._cachedMeta.dataset;\n    t && this._setStyle(t, void 0, \"active\", !1);\n  }\n  _setDatasetHoverStyle() {\n    const t = this._cachedMeta.dataset;\n    t && this._setStyle(t, void 0, \"active\", !0);\n  }\n  _resyncElements(t) {\n    const e = this._data,\n      s = this._cachedMeta.data;\n    for (const [a, l, c] of this._syncList) this[a](l, c);\n    this._syncList = [];\n    const n = s.length,\n      o = e.length,\n      r = Math.min(o, n);\n    r && this.parse(0, r), o > n ? this._insertElements(n, o - n, t) : o < n && this._removeElements(o, n - o);\n  }\n  _insertElements(t, e, s = !0) {\n    const n = this._cachedMeta,\n      o = n.data,\n      r = t + e;\n    let a;\n    const l = c => {\n      for (c.length += e, a = c.length - 1; a >= r; a--) c[a] = c[a - e];\n    };\n    for (l(o), a = t; a < r; ++a) o[a] = new this.dataElementType();\n    this._parsing && l(n._parsed), this.parse(t, e), s && this.updateElements(o, t, e, \"reset\");\n  }\n  updateElements(t, e, s, n) {}\n  _removeElements(t, e) {\n    const s = this._cachedMeta;\n    if (this._parsing) {\n      const n = s._parsed.splice(t, e);\n      s._stacked && Yt(s, n);\n    }\n    s.data.splice(t, e);\n  }\n  _sync(t) {\n    if (this._parsing) this._syncList.push(t);else {\n      const [e, s, n] = t;\n      this[e](s, n);\n    }\n    this.chart._dataChanges.push([this.index, ...t]);\n  }\n  _onDataPush() {\n    const t = arguments.length;\n    this._sync([\"_insertElements\", this.getDataset().data.length - t, t]);\n  }\n  _onDataPop() {\n    this._sync([\"_removeElements\", this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync([\"_removeElements\", 0, 1]);\n  }\n  _onDataSplice(t, e) {\n    e && this._sync([\"_removeElements\", t, e]);\n    const s = arguments.length - 2;\n    s && this._sync([\"_insertElements\", t, s]);\n  }\n  _onDataUnshift() {\n    this._sync([\"_insertElements\", 0, arguments.length]);\n  }\n}\nit.defaults = {};\nit.prototype.datasetElementType = null;\nit.prototype.dataElementType = null;\nfunction fa(i, t) {\n  if (!i._cache.$bar) {\n    const e = i.getMatchingVisibleMetas(t);\n    let s = [];\n    for (let n = 0, o = e.length; n < o; n++) s = s.concat(e[n].controller.getAllParsedValues(i));\n    i._cache.$bar = un(s.sort((n, o) => n - o));\n  }\n  return i._cache.$bar;\n}\nfunction ga(i) {\n  const t = i.iScale,\n    e = fa(t, i.type);\n  let s = t._length,\n    n,\n    o,\n    r,\n    a;\n  const l = () => {\n    r === 32767 || r === -32768 || (et(a) && (s = Math.min(s, Math.abs(r - a) || s)), a = r);\n  };\n  for (n = 0, o = e.length; n < o; ++n) r = t.getPixelForValue(e[n]), l();\n  for (a = void 0, n = 0, o = t.ticks.length; n < o; ++n) r = t.getPixelForTick(n), l();\n  return s;\n}\nfunction pa(i, t, e, s) {\n  const n = e.barThickness;\n  let o, r;\n  return T(n) ? (o = t.min * e.categoryPercentage, r = e.barPercentage) : (o = n * s, r = 1), {\n    chunk: o / s,\n    ratio: r,\n    start: t.pixels[i] - o / 2\n  };\n}\nfunction ma(i, t, e, s) {\n  const n = t.pixels,\n    o = n[i];\n  let r = i > 0 ? n[i - 1] : null,\n    a = i < n.length - 1 ? n[i + 1] : null;\n  const l = e.categoryPercentage;\n  r === null && (r = o - (a === null ? t.end - t.start : a - o)), a === null && (a = o + o - r);\n  const c = o - (o - Math.min(r, a)) / 2 * l;\n  return {\n    chunk: Math.abs(a - r) / 2 * l / s,\n    ratio: e.barPercentage,\n    start: c\n  };\n}\nfunction ba(i, t, e, s) {\n  const n = e.parse(i[0], s),\n    o = e.parse(i[1], s),\n    r = Math.min(n, o),\n    a = Math.max(n, o);\n  let l = r,\n    c = a;\n  Math.abs(r) > Math.abs(a) && (l = a, c = r), t[e.axis] = c, t._custom = {\n    barStart: l,\n    barEnd: c,\n    start: n,\n    end: o,\n    min: r,\n    max: a\n  };\n}\nfunction Bn(i, t, e, s) {\n  return z(i) ? ba(i, t, e, s) : t[e.axis] = e.parse(i, s), t;\n}\nfunction vs(i, t, e, s) {\n  const n = i.iScale,\n    o = i.vScale,\n    r = n.getLabels(),\n    a = n === o,\n    l = [];\n  let c, h, d, u;\n  for (c = e, h = e + s; c < h; ++c) u = t[c], d = {}, d[n.axis] = a || n.parse(r[c], c), l.push(Bn(u, d, o, c));\n  return l;\n}\nfunction hi(i) {\n  return i && i.barStart !== void 0 && i.barEnd !== void 0;\n}\nfunction xa(i, t, e) {\n  return i !== 0 ? lt(i) : (t.isHorizontal() ? 1 : -1) * (t.min >= e ? 1 : -1);\n}\nfunction _a(i) {\n  let t, e, s, n, o;\n  return i.horizontal ? (t = i.base > i.x, e = \"left\", s = \"right\") : (t = i.base < i.y, e = \"bottom\", s = \"top\"), t ? (n = \"end\", o = \"start\") : (n = \"start\", o = \"end\"), {\n    start: e,\n    end: s,\n    reverse: t,\n    top: n,\n    bottom: o\n  };\n}\nfunction ya(i, t, e, s) {\n  let n = t.borderSkipped;\n  const o = {};\n  if (!n) {\n    i.borderSkipped = o;\n    return;\n  }\n  if (n === !0) {\n    i.borderSkipped = {\n      top: !0,\n      right: !0,\n      bottom: !0,\n      left: !0\n    };\n    return;\n  }\n  const {\n    start: r,\n    end: a,\n    reverse: l,\n    top: c,\n    bottom: h\n  } = _a(i);\n  n === \"middle\" && e && (i.enableBorderRadius = !0, (e._top || 0) === s ? n = c : (e._bottom || 0) === s ? n = h : (o[Ms(h, r, a, l)] = !0, n = c)), o[Ms(n, r, a, l)] = !0, i.borderSkipped = o;\n}\nfunction Ms(i, t, e, s) {\n  return s ? (i = va(i, t, e), i = ks(i, e, t)) : i = ks(i, t, e), i;\n}\nfunction va(i, t, e) {\n  return i === t ? e : i === e ? t : i;\n}\nfunction ks(i, t, e) {\n  return i === \"start\" ? t : i === \"end\" ? e : i;\n}\nfunction Ma(i, {\n  inflateAmount: t\n}, e) {\n  i.inflateAmount = t === \"auto\" ? e === 1 ? 0.33 : 0 : t;\n}\nclass ue extends it {\n  parsePrimitiveData(t, e, s, n) {\n    return vs(t, e, s, n);\n  }\n  parseArrayData(t, e, s, n) {\n    return vs(t, e, s, n);\n  }\n  parseObjectData(t, e, s, n) {\n    const {\n        iScale: o,\n        vScale: r\n      } = t,\n      {\n        xAxisKey: a = \"x\",\n        yAxisKey: l = \"y\"\n      } = this._parsing,\n      c = o.axis === \"x\" ? a : l,\n      h = r.axis === \"x\" ? a : l,\n      d = [];\n    let u, f, g, p;\n    for (u = s, f = s + n; u < f; ++u) p = e[u], g = {}, g[o.axis] = o.parse(_t(p, c), u), d.push(Bn(_t(p, h), g, r, u));\n    return d;\n  }\n  updateRangeFromParsed(t, e, s, n) {\n    super.updateRangeFromParsed(t, e, s, n);\n    const o = s._custom;\n    o && e === this._cachedMeta.vScale && (t.min = Math.min(t.min, o.min), t.max = Math.max(t.max, o.max));\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(t) {\n    const e = this._cachedMeta,\n      {\n        iScale: s,\n        vScale: n\n      } = e,\n      o = this.getParsed(t),\n      r = o._custom,\n      a = hi(r) ? \"[\" + r.start + \", \" + r.end + \"]\" : \"\" + n.getLabelForValue(o[n.axis]);\n    return {\n      label: \"\" + s.getLabelForValue(o[s.axis]),\n      value: a\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = !0, super.initialize();\n    const t = this._cachedMeta;\n    t.stack = this.getDataset().stack;\n  }\n  update(t) {\n    const e = this._cachedMeta;\n    this.updateElements(e.data, 0, e.data.length, t);\n  }\n  updateElements(t, e, s, n) {\n    const o = n === \"reset\",\n      {\n        index: r,\n        _cachedMeta: {\n          vScale: a\n        }\n      } = this,\n      l = a.getBasePixel(),\n      c = a.isHorizontal(),\n      h = this._getRuler(),\n      {\n        sharedOptions: d,\n        includeOptions: u\n      } = this._getSharedOptions(e, n);\n    for (let f = e; f < e + s; f++) {\n      const g = this.getParsed(f),\n        p = o || T(g[a.axis]) ? {\n          base: l,\n          head: l\n        } : this._calculateBarValuePixels(f),\n        m = this._calculateBarIndexPixels(f, h),\n        b = (g._stacks || {})[a.axis],\n        x = {\n          horizontal: c,\n          base: p.base,\n          enableBorderRadius: !b || hi(g._custom) || r === b._top || r === b._bottom,\n          x: c ? p.head : m.center,\n          y: c ? m.center : p.head,\n          height: c ? m.size : Math.abs(p.size),\n          width: c ? Math.abs(p.size) : m.size\n        };\n      u && (x.options = d || this.resolveDataElementOptions(f, t[f].active ? \"active\" : n));\n      const v = x.options || t[f].options;\n      ya(x, v, b, r), Ma(x, v, h.ratio), this.updateElement(t[f], f, x, n);\n    }\n  }\n  _getStacks(t, e) {\n    const {\n        iScale: s\n      } = this._cachedMeta,\n      n = s.getMatchingVisibleMetas(this._type).filter(l => l.controller.options.grouped),\n      o = s.options.stacked,\n      r = [],\n      a = l => {\n        const c = l.controller.getParsed(e),\n          h = c && c[l.vScale.axis];\n        if (T(h) || isNaN(h)) return !0;\n      };\n    for (const l of n) if (!(e !== void 0 && a(l)) && ((o === !1 || r.indexOf(l.stack) === -1 || o === void 0 && l.stack === void 0) && r.push(l.stack), l.index === t)) break;\n    return r.length || r.push(void 0), r;\n  }\n  _getStackCount(t) {\n    return this._getStacks(void 0, t).length;\n  }\n  _getStackIndex(t, e, s) {\n    const n = this._getStacks(t, s),\n      o = e !== void 0 ? n.indexOf(e) : -1;\n    return o === -1 ? n.length - 1 : o;\n  }\n  _getRuler() {\n    const t = this.options,\n      e = this._cachedMeta,\n      s = e.iScale,\n      n = [];\n    let o, r;\n    for (o = 0, r = e.data.length; o < r; ++o) n.push(s.getPixelForValue(this.getParsed(o)[s.axis], o));\n    const a = t.barThickness;\n    return {\n      min: a || ga(e),\n      pixels: n,\n      start: s._startPixel,\n      end: s._endPixel,\n      stackCount: this._getStackCount(),\n      scale: s,\n      grouped: t.grouped,\n      ratio: a ? 1 : t.categoryPercentage * t.barPercentage\n    };\n  }\n  _calculateBarValuePixels(t) {\n    const {\n        _cachedMeta: {\n          vScale: e,\n          _stacked: s\n        },\n        options: {\n          base: n,\n          minBarLength: o\n        }\n      } = this,\n      r = n || 0,\n      a = this.getParsed(t),\n      l = a._custom,\n      c = hi(l);\n    let h = a[e.axis],\n      d = 0,\n      u = s ? this.applyStack(e, a, s) : h,\n      f,\n      g;\n    u !== h && (d = u - h, u = h), c && (h = l.barStart, u = l.barEnd - l.barStart, h !== 0 && lt(h) !== lt(l.barEnd) && (d = 0), d += h);\n    const p = !T(n) && !c ? n : d;\n    let m = e.getPixelForValue(p);\n    if (this.chart.getDataVisibility(t) ? f = e.getPixelForValue(d + u) : f = m, g = f - m, Math.abs(g) < o) {\n      g = xa(g, e, r) * o, h === r && (m -= g / 2);\n      const b = e.getPixelForDecimal(0),\n        x = e.getPixelForDecimal(1),\n        v = Math.min(b, x),\n        y = Math.max(b, x);\n      m = Math.max(Math.min(m, y), v), f = m + g;\n    }\n    if (m === e.getPixelForValue(r)) {\n      const b = lt(g) * e.getLineWidthForValue(r) / 2;\n      m += b, g -= b;\n    }\n    return {\n      size: g,\n      base: m,\n      head: f,\n      center: f + g / 2\n    };\n  }\n  _calculateBarIndexPixels(t, e) {\n    const s = e.scale,\n      n = this.options,\n      o = n.skipNull,\n      r = C(n.maxBarThickness, 1 / 0);\n    let a, l;\n    if (e.grouped) {\n      const c = o ? this._getStackCount(t) : e.stackCount,\n        h = n.barThickness === \"flex\" ? ma(t, e, n, c) : pa(t, e, n, c),\n        d = this._getStackIndex(this.index, this._cachedMeta.stack, o ? t : void 0);\n      a = h.start + h.chunk * d + h.chunk / 2, l = Math.min(r, h.chunk * h.ratio);\n    } else a = s.getPixelForValue(this.getParsed(t)[s.axis], t), l = Math.min(r, e.min * e.ratio);\n    return {\n      base: a - l / 2,\n      head: a + l / 2,\n      center: a,\n      size: l\n    };\n  }\n  draw() {\n    const t = this._cachedMeta,\n      e = t.vScale,\n      s = t.data,\n      n = s.length;\n    let o = 0;\n    for (; o < n; ++o) this.getParsed(o)[e.axis] !== null && s[o].draw(this._ctx);\n  }\n}\nue.id = \"bar\";\nue.defaults = {\n  datasetElementType: !1,\n  dataElementType: \"bar\",\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: !0,\n  animations: {\n    numbers: {\n      type: \"number\",\n      properties: [\"x\", \"y\", \"base\", \"width\", \"height\"]\n    }\n  }\n};\nue.overrides = {\n  scales: {\n    _index_: {\n      type: \"category\",\n      offset: !0,\n      grid: {\n        offset: !0\n      }\n    },\n    _value_: {\n      type: \"linear\",\n      beginAtZero: !0\n    }\n  }\n};\nclass fe extends it {\n  initialize() {\n    this.enableOptionSharing = !0, super.initialize();\n  }\n  parsePrimitiveData(t, e, s, n) {\n    const o = super.parsePrimitiveData(t, e, s, n);\n    for (let r = 0; r < o.length; r++) o[r]._custom = this.resolveDataElementOptions(r + s).radius;\n    return o;\n  }\n  parseArrayData(t, e, s, n) {\n    const o = super.parseArrayData(t, e, s, n);\n    for (let r = 0; r < o.length; r++) {\n      const a = e[s + r];\n      o[r]._custom = C(a[2], this.resolveDataElementOptions(r + s).radius);\n    }\n    return o;\n  }\n  parseObjectData(t, e, s, n) {\n    const o = super.parseObjectData(t, e, s, n);\n    for (let r = 0; r < o.length; r++) {\n      const a = e[s + r];\n      o[r]._custom = C(a && a.r && +a.r, this.resolveDataElementOptions(r + s).radius);\n    }\n    return o;\n  }\n  getMaxOverflow() {\n    const t = this._cachedMeta.data;\n    let e = 0;\n    for (let s = t.length - 1; s >= 0; --s) e = Math.max(e, t[s].size(this.resolveDataElementOptions(s)) / 2);\n    return e > 0 && e;\n  }\n  getLabelAndValue(t) {\n    const e = this._cachedMeta,\n      {\n        xScale: s,\n        yScale: n\n      } = e,\n      o = this.getParsed(t),\n      r = s.getLabelForValue(o.x),\n      a = n.getLabelForValue(o.y),\n      l = o._custom;\n    return {\n      label: e.label,\n      value: \"(\" + r + \", \" + a + (l ? \", \" + l : \"\") + \")\"\n    };\n  }\n  update(t) {\n    const e = this._cachedMeta.data;\n    this.updateElements(e, 0, e.length, t);\n  }\n  updateElements(t, e, s, n) {\n    const o = n === \"reset\",\n      {\n        iScale: r,\n        vScale: a\n      } = this._cachedMeta,\n      {\n        sharedOptions: l,\n        includeOptions: c\n      } = this._getSharedOptions(e, n),\n      h = r.axis,\n      d = a.axis;\n    for (let u = e; u < e + s; u++) {\n      const f = t[u],\n        g = !o && this.getParsed(u),\n        p = {},\n        m = p[h] = o ? r.getPixelForDecimal(0.5) : r.getPixelForValue(g[h]),\n        b = p[d] = o ? a.getBasePixel() : a.getPixelForValue(g[d]);\n      p.skip = isNaN(m) || isNaN(b), c && (p.options = l || this.resolveDataElementOptions(u, f.active ? \"active\" : n), o && (p.options.radius = 0)), this.updateElement(f, u, p, n);\n    }\n  }\n  resolveDataElementOptions(t, e) {\n    const s = this.getParsed(t);\n    let n = super.resolveDataElementOptions(t, e);\n    n.$shared && (n = Object.assign({}, n, {\n      $shared: !1\n    }));\n    const o = n.radius;\n    return e !== \"active\" && (n.radius = 0), n.radius += C(s && s._custom, o), n;\n  }\n}\nfe.id = \"bubble\";\nfe.defaults = {\n  datasetElementType: !1,\n  dataElementType: \"point\",\n  animations: {\n    numbers: {\n      type: \"number\",\n      properties: [\"x\", \"y\", \"borderWidth\", \"radius\"]\n    }\n  }\n};\nfe.overrides = {\n  scales: {\n    x: {\n      type: \"linear\"\n    },\n    y: {\n      type: \"linear\"\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return \"\";\n        }\n      }\n    }\n  }\n};\nfunction ka(i, t, e) {\n  let s = 1,\n    n = 1,\n    o = 0,\n    r = 0;\n  if (t < F) {\n    const a = i,\n      l = a + t,\n      c = Math.cos(a),\n      h = Math.sin(a),\n      d = Math.cos(l),\n      u = Math.sin(l),\n      f = (v, y, _) => oe(v, a, l, !0) ? 1 : Math.max(y, y * e, _, _ * e),\n      g = (v, y, _) => oe(v, a, l, !0) ? -1 : Math.min(y, y * e, _, _ * e),\n      p = f(0, c, d),\n      m = f(V, h, u),\n      b = g(B, c, d),\n      x = g(B + V, h, u);\n    s = (p - b) / 2, n = (m - x) / 2, o = -(p + b) / 2, r = -(m + x) / 2;\n  }\n  return {\n    ratioX: s,\n    ratioY: n,\n    offsetX: o,\n    offsetY: r\n  };\n}\nclass Lt extends it {\n  constructor(t, e) {\n    super(t, e), this.enableOptionSharing = !0, this.innerRadius = void 0, this.outerRadius = void 0, this.offsetX = void 0, this.offsetY = void 0;\n  }\n  linkScales() {}\n  parse(t, e) {\n    const s = this.getDataset().data,\n      n = this._cachedMeta;\n    if (this._parsing === !1) n._parsed = s;else {\n      let o = l => +s[l];\n      if (D(s[t])) {\n        const {\n          key: l = \"value\"\n        } = this._parsing;\n        o = c => +_t(s[c], l);\n      }\n      let r, a;\n      for (r = t, a = t + e; r < a; ++r) n._parsed[r] = o(r);\n    }\n  }\n  _getRotation() {\n    return nt(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return nt(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let t = F,\n      e = -F;\n    for (let s = 0; s < this.chart.data.datasets.length; ++s) if (this.chart.isDatasetVisible(s)) {\n      const n = this.chart.getDatasetMeta(s).controller,\n        o = n._getRotation(),\n        r = n._getCircumference();\n      t = Math.min(t, o), e = Math.max(e, o + r);\n    }\n    return {\n      rotation: t,\n      circumference: e - t\n    };\n  }\n  update(t) {\n    const e = this.chart,\n      {\n        chartArea: s\n      } = e,\n      n = this._cachedMeta,\n      o = n.data,\n      r = this.getMaxBorderWidth() + this.getMaxOffset(o) + this.options.spacing,\n      a = Math.max((Math.min(s.width, s.height) - r) / 2, 0),\n      l = Math.min(yo(this.options.cutout, a), 1),\n      c = this._getRingWeight(this.index),\n      {\n        circumference: h,\n        rotation: d\n      } = this._getRotationExtents(),\n      {\n        ratioX: u,\n        ratioY: f,\n        offsetX: g,\n        offsetY: p\n      } = ka(d, h, l),\n      m = (s.width - r) / u,\n      b = (s.height - r) / f,\n      x = Math.max(Math.min(m, b) / 2, 0),\n      v = an(this.options.radius, x),\n      y = Math.max(v * l, 0),\n      _ = (v - y) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = g * v, this.offsetY = p * v, n.total = this.calculateTotal(), this.outerRadius = v - _ * this._getRingWeightOffset(this.index), this.innerRadius = Math.max(this.outerRadius - _ * c, 0), this.updateElements(o, 0, o.length, t);\n  }\n  _circumference(t, e) {\n    const s = this.options,\n      n = this._cachedMeta,\n      o = this._getCircumference();\n    return e && s.animation.animateRotate || !this.chart.getDataVisibility(t) || n._parsed[t] === null || n.data[t].hidden ? 0 : this.calculateCircumference(n._parsed[t] * o / F);\n  }\n  updateElements(t, e, s, n) {\n    const o = n === \"reset\",\n      r = this.chart,\n      a = r.chartArea,\n      c = r.options.animation,\n      h = (a.left + a.right) / 2,\n      d = (a.top + a.bottom) / 2,\n      u = o && c.animateScale,\n      f = u ? 0 : this.innerRadius,\n      g = u ? 0 : this.outerRadius,\n      {\n        sharedOptions: p,\n        includeOptions: m\n      } = this._getSharedOptions(e, n);\n    let b = this._getRotation(),\n      x;\n    for (x = 0; x < e; ++x) b += this._circumference(x, o);\n    for (x = e; x < e + s; ++x) {\n      const v = this._circumference(x, o),\n        y = t[x],\n        _ = {\n          x: h + this.offsetX,\n          y: d + this.offsetY,\n          startAngle: b,\n          endAngle: b + v,\n          circumference: v,\n          outerRadius: g,\n          innerRadius: f\n        };\n      m && (_.options = p || this.resolveDataElementOptions(x, y.active ? \"active\" : n)), b += v, this.updateElement(y, x, _, n);\n    }\n  }\n  calculateTotal() {\n    const t = this._cachedMeta,\n      e = t.data;\n    let s = 0,\n      n;\n    for (n = 0; n < e.length; n++) {\n      const o = t._parsed[n];\n      o !== null && !isNaN(o) && this.chart.getDataVisibility(n) && !e[n].hidden && (s += Math.abs(o));\n    }\n    return s;\n  }\n  calculateCircumference(t) {\n    const e = this._cachedMeta.total;\n    return e > 0 && !isNaN(t) ? F * (Math.abs(t) / e) : 0;\n  }\n  getLabelAndValue(t) {\n    const e = this._cachedMeta,\n      s = this.chart,\n      n = s.data.labels || [],\n      o = de(e._parsed[t], s.options.locale);\n    return {\n      label: n[t] || \"\",\n      value: o\n    };\n  }\n  getMaxBorderWidth(t) {\n    let e = 0;\n    const s = this.chart;\n    let n, o, r, a, l;\n    if (!t) {\n      for (n = 0, o = s.data.datasets.length; n < o; ++n) if (s.isDatasetVisible(n)) {\n        r = s.getDatasetMeta(n), t = r.data, a = r.controller;\n        break;\n      }\n    }\n    if (!t) return 0;\n    for (n = 0, o = t.length; n < o; ++n) l = a.resolveDataElementOptions(n), l.borderAlign !== \"inner\" && (e = Math.max(e, l.borderWidth || 0, l.hoverBorderWidth || 0));\n    return e;\n  }\n  getMaxOffset(t) {\n    let e = 0;\n    for (let s = 0, n = t.length; s < n; ++s) {\n      const o = this.resolveDataElementOptions(s);\n      e = Math.max(e, o.offset || 0, o.hoverOffset || 0);\n    }\n    return e;\n  }\n  _getRingWeightOffset(t) {\n    let e = 0;\n    for (let s = 0; s < t; ++s) this.chart.isDatasetVisible(s) && (e += this._getRingWeight(s));\n    return e;\n  }\n  _getRingWeight(t) {\n    return Math.max(C(this.chart.data.datasets[t].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nLt.id = \"doughnut\";\nLt.defaults = {\n  datasetElementType: !1,\n  dataElementType: \"arc\",\n  animation: {\n    animateRotate: !0,\n    animateScale: !1\n  },\n  animations: {\n    numbers: {\n      type: \"number\",\n      properties: [\"circumference\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"startAngle\", \"x\", \"y\", \"offset\", \"borderWidth\", \"spacing\"]\n    }\n  },\n  cutout: \"50%\",\n  rotation: 0,\n  circumference: 360,\n  radius: \"100%\",\n  spacing: 0,\n  indexAxis: \"r\"\n};\nLt.descriptors = {\n  _scriptable: i => i !== \"spacing\",\n  _indexable: i => i !== \"spacing\"\n};\nLt.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(i) {\n          const t = i.data;\n          if (t.labels.length && t.datasets.length) {\n            const {\n              labels: {\n                pointStyle: e\n              }\n            } = i.legend.options;\n            return t.labels.map((s, n) => {\n              const r = i.getDatasetMeta(0).controller.getStyle(n);\n              return {\n                text: s,\n                fillStyle: r.backgroundColor,\n                strokeStyle: r.borderColor,\n                lineWidth: r.borderWidth,\n                pointStyle: e,\n                hidden: !i.getDataVisibility(n),\n                index: n\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(i, t, e) {\n        e.chart.toggleDataVisibility(t.index), e.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return \"\";\n        },\n        label(i) {\n          let t = i.label;\n          const e = \": \" + i.formattedValue;\n          return z(t) ? (t = t.slice(), t[0] += e) : t += e, t;\n        }\n      }\n    }\n  }\n};\nclass ge extends it {\n  initialize() {\n    this.enableOptionSharing = !0, this.supportsDecimation = !0, super.initialize();\n  }\n  update(t) {\n    const e = this._cachedMeta,\n      {\n        dataset: s,\n        data: n = [],\n        _dataset: o\n      } = e,\n      r = this.chart._animationsDisabled;\n    let {\n      start: a,\n      count: l\n    } = pn(e, n, r);\n    this._drawStart = a, this._drawCount = l, mn(e) && (a = 0, l = n.length), s._chart = this.chart, s._datasetIndex = this.index, s._decimated = !!o._decimated, s.points = n;\n    const c = this.resolveDatasetElementOptions(t);\n    this.options.showLine || (c.borderWidth = 0), c.segment = this.options.segment, this.updateElement(s, void 0, {\n      animated: !r,\n      options: c\n    }, t), this.updateElements(n, a, l, t);\n  }\n  updateElements(t, e, s, n) {\n    const o = n === \"reset\",\n      {\n        iScale: r,\n        vScale: a,\n        _stacked: l,\n        _dataset: c\n      } = this._cachedMeta,\n      {\n        sharedOptions: h,\n        includeOptions: d\n      } = this._getSharedOptions(e, n),\n      u = r.axis,\n      f = a.axis,\n      {\n        spanGaps: g,\n        segment: p\n      } = this.options,\n      m = Bt(g) ? g : Number.POSITIVE_INFINITY,\n      b = this.chart._animationsDisabled || o || n === \"none\";\n    let x = e > 0 && this.getParsed(e - 1);\n    for (let v = e; v < e + s; ++v) {\n      const y = t[v],\n        _ = this.getParsed(v),\n        M = b ? y : {},\n        k = T(_[f]),\n        S = M[u] = r.getPixelForValue(_[u], v),\n        w = M[f] = o || k ? a.getBasePixel() : a.getPixelForValue(l ? this.applyStack(a, _, l) : _[f], v);\n      M.skip = isNaN(S) || isNaN(w) || k, M.stop = v > 0 && Math.abs(_[u] - x[u]) > m, p && (M.parsed = _, M.raw = c.data[v]), d && (M.options = h || this.resolveDataElementOptions(v, y.active ? \"active\" : n)), b || this.updateElement(y, v, M, n), x = _;\n    }\n  }\n  getMaxOverflow() {\n    const t = this._cachedMeta,\n      e = t.dataset,\n      s = e.options && e.options.borderWidth || 0,\n      n = t.data || [];\n    if (!n.length) return s;\n    const o = n[0].size(this.resolveDataElementOptions(0)),\n      r = n[n.length - 1].size(this.resolveDataElementOptions(n.length - 1));\n    return Math.max(s, o, r) / 2;\n  }\n  draw() {\n    const t = this._cachedMeta;\n    t.dataset.updateControlPoints(this.chart.chartArea, t.iScale.axis), super.draw();\n  }\n}\nge.id = \"line\";\nge.defaults = {\n  datasetElementType: \"line\",\n  dataElementType: \"point\",\n  showLine: !0,\n  spanGaps: !1\n};\nge.overrides = {\n  scales: {\n    _index_: {\n      type: \"category\"\n    },\n    _value_: {\n      type: \"linear\"\n    }\n  }\n};\nclass pe extends it {\n  constructor(t, e) {\n    super(t, e), this.innerRadius = void 0, this.outerRadius = void 0;\n  }\n  getLabelAndValue(t) {\n    const e = this._cachedMeta,\n      s = this.chart,\n      n = s.data.labels || [],\n      o = de(e._parsed[t].r, s.options.locale);\n    return {\n      label: n[t] || \"\",\n      value: o\n    };\n  }\n  parseObjectData(t, e, s, n) {\n    return Dn.bind(this)(t, e, s, n);\n  }\n  update(t) {\n    const e = this._cachedMeta.data;\n    this._updateRadius(), this.updateElements(e, 0, e.length, t);\n  }\n  getMinMax() {\n    const t = this._cachedMeta,\n      e = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n    return t.data.forEach((s, n) => {\n      const o = this.getParsed(n).r;\n      !isNaN(o) && this.chart.getDataVisibility(n) && (o < e.min && (e.min = o), o > e.max && (e.max = o));\n    }), e;\n  }\n  _updateRadius() {\n    const t = this.chart,\n      e = t.chartArea,\n      s = t.options,\n      n = Math.min(e.right - e.left, e.bottom - e.top),\n      o = Math.max(n / 2, 0),\n      r = Math.max(s.cutoutPercentage ? o / 100 * s.cutoutPercentage : 1, 0),\n      a = (o - r) / t.getVisibleDatasetCount();\n    this.outerRadius = o - a * this.index, this.innerRadius = this.outerRadius - a;\n  }\n  updateElements(t, e, s, n) {\n    const o = n === \"reset\",\n      r = this.chart,\n      l = r.options.animation,\n      c = this._cachedMeta.rScale,\n      h = c.xCenter,\n      d = c.yCenter,\n      u = c.getIndexAngle(0) - 0.5 * B;\n    let f = u,\n      g;\n    const p = 360 / this.countVisibleElements();\n    for (g = 0; g < e; ++g) f += this._computeAngle(g, n, p);\n    for (g = e; g < e + s; g++) {\n      const m = t[g];\n      let b = f,\n        x = f + this._computeAngle(g, n, p),\n        v = r.getDataVisibility(g) ? c.getDistanceFromCenterForValue(this.getParsed(g).r) : 0;\n      f = x, o && (l.animateScale && (v = 0), l.animateRotate && (b = x = u));\n      const y = {\n        x: h,\n        y: d,\n        innerRadius: 0,\n        outerRadius: v,\n        startAngle: b,\n        endAngle: x,\n        options: this.resolveDataElementOptions(g, m.active ? \"active\" : n)\n      };\n      this.updateElement(m, g, y, n);\n    }\n  }\n  countVisibleElements() {\n    const t = this._cachedMeta;\n    let e = 0;\n    return t.data.forEach((s, n) => {\n      !isNaN(this.getParsed(n).r) && this.chart.getDataVisibility(n) && e++;\n    }), e;\n  }\n  _computeAngle(t, e, s) {\n    return this.chart.getDataVisibility(t) ? nt(this.resolveDataElementOptions(t, e).angle || s) : 0;\n  }\n}\npe.id = \"polarArea\";\npe.defaults = {\n  dataElementType: \"arc\",\n  animation: {\n    animateRotate: !0,\n    animateScale: !0\n  },\n  animations: {\n    numbers: {\n      type: \"number\",\n      properties: [\"x\", \"y\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\"]\n    }\n  },\n  indexAxis: \"r\",\n  startAngle: 0\n};\npe.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(i) {\n          const t = i.data;\n          if (t.labels.length && t.datasets.length) {\n            const {\n              labels: {\n                pointStyle: e\n              }\n            } = i.legend.options;\n            return t.labels.map((s, n) => {\n              const r = i.getDatasetMeta(0).controller.getStyle(n);\n              return {\n                text: s,\n                fillStyle: r.backgroundColor,\n                strokeStyle: r.borderColor,\n                lineWidth: r.borderWidth,\n                pointStyle: e,\n                hidden: !i.getDataVisibility(n),\n                index: n\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(i, t, e) {\n        e.chart.toggleDataVisibility(t.index), e.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return \"\";\n        },\n        label(i) {\n          return i.chart.data.labels[i.dataIndex] + \": \" + i.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: \"radialLinear\",\n      angleLines: {\n        display: !1\n      },\n      beginAtZero: !0,\n      grid: {\n        circular: !0\n      },\n      pointLabels: {\n        display: !1\n      },\n      startAngle: 0\n    }\n  }\n};\nclass qe extends Lt {}\nqe.id = \"pie\";\nqe.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: \"100%\"\n};\nclass me extends it {\n  getLabelAndValue(t) {\n    const e = this._cachedMeta.vScale,\n      s = this.getParsed(t);\n    return {\n      label: e.getLabels()[t],\n      value: \"\" + e.getLabelForValue(s[e.axis])\n    };\n  }\n  parseObjectData(t, e, s, n) {\n    return Dn.bind(this)(t, e, s, n);\n  }\n  update(t) {\n    const e = this._cachedMeta,\n      s = e.dataset,\n      n = e.data || [],\n      o = e.iScale.getLabels();\n    if (s.points = n, t !== \"resize\") {\n      const r = this.resolveDatasetElementOptions(t);\n      this.options.showLine || (r.borderWidth = 0);\n      const a = {\n        _loop: !0,\n        _fullLoop: o.length === n.length,\n        options: r\n      };\n      this.updateElement(s, void 0, a, t);\n    }\n    this.updateElements(n, 0, n.length, t);\n  }\n  updateElements(t, e, s, n) {\n    const o = this._cachedMeta.rScale,\n      r = n === \"reset\";\n    for (let a = e; a < e + s; a++) {\n      const l = t[a],\n        c = this.resolveDataElementOptions(a, l.active ? \"active\" : n),\n        h = o.getPointPositionForValue(a, this.getParsed(a).r),\n        d = r ? o.xCenter : h.x,\n        u = r ? o.yCenter : h.y,\n        f = {\n          x: d,\n          y: u,\n          angle: h.angle,\n          skip: isNaN(d) || isNaN(u),\n          options: c\n        };\n      this.updateElement(l, a, f, n);\n    }\n  }\n}\nme.id = \"radar\";\nme.defaults = {\n  datasetElementType: \"line\",\n  dataElementType: \"point\",\n  indexAxis: \"r\",\n  showLine: !0,\n  elements: {\n    line: {\n      fill: \"start\"\n    }\n  }\n};\nme.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: \"radialLinear\"\n    }\n  }\n};\nclass st {\n  constructor() {\n    this.x = void 0, this.y = void 0, this.active = !1, this.options = void 0, this.$animations = void 0;\n  }\n  tooltipPosition(t) {\n    const {\n      x: e,\n      y: s\n    } = this.getProps([\"x\", \"y\"], t);\n    return {\n      x: e,\n      y: s\n    };\n  }\n  hasValue() {\n    return Bt(this.x) && Bt(this.y);\n  }\n  getProps(t, e) {\n    const s = this.$animations;\n    if (!e || !s) return this;\n    const n = {};\n    return t.forEach(o => {\n      n[o] = s[o] && s[o].active() ? s[o]._to : this[o];\n    }), n;\n  }\n}\nst.defaults = {};\nst.defaultRoutes = void 0;\nconst Vn = {\n  values(i) {\n    return z(i) ? i : \"\" + i;\n  },\n  numeric(i, t, e) {\n    if (i === 0) return \"0\";\n    const s = this.chart.options.locale;\n    let n,\n      o = i;\n    if (e.length > 1) {\n      const c = Math.max(Math.abs(e[0].value), Math.abs(e[e.length - 1].value));\n      (c < 1e-4 || c > 1e15) && (n = \"scientific\"), o = wa(i, e);\n    }\n    const r = tt(Math.abs(o)),\n      a = Math.max(Math.min(-1 * Math.floor(r), 20), 0),\n      l = {\n        notation: n,\n        minimumFractionDigits: a,\n        maximumFractionDigits: a\n      };\n    return Object.assign(l, this.options.ticks.format), de(i, s, l);\n  },\n  logarithmic(i, t, e) {\n    if (i === 0) return \"0\";\n    const s = i / Math.pow(10, Math.floor(tt(i)));\n    return s === 1 || s === 2 || s === 5 ? Vn.numeric.call(this, i, t, e) : \"\";\n  }\n};\nfunction wa(i, t) {\n  let e = t.length > 3 ? t[2].value - t[1].value : t[1].value - t[0].value;\n  return Math.abs(e) >= 1 && i !== Math.floor(i) && (e = i - Math.floor(i)), e;\n}\nvar be = {\n  formatters: Vn\n};\nO.set(\"scale\", {\n  display: !0,\n  offset: !1,\n  reverse: !1,\n  beginAtZero: !1,\n  bounds: \"ticks\",\n  grace: 0,\n  grid: {\n    display: !0,\n    lineWidth: 1,\n    drawBorder: !0,\n    drawOnChartArea: !0,\n    drawTicks: !0,\n    tickLength: 8,\n    tickWidth: (i, t) => t.lineWidth,\n    tickColor: (i, t) => t.color,\n    offset: !1,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderWidth: 1\n  },\n  title: {\n    display: !1,\n    text: \"\",\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: !1,\n    textStrokeWidth: 0,\n    textStrokeColor: \"\",\n    padding: 3,\n    display: !0,\n    autoSkip: !0,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: be.formatters.values,\n    minor: {},\n    major: {},\n    align: \"center\",\n    crossAlign: \"near\",\n    showLabelBackdrop: !1,\n    backdropColor: \"rgba(255, 255, 255, 0.75)\",\n    backdropPadding: 2\n  }\n});\nO.route(\"scale.ticks\", \"color\", \"\", \"color\");\nO.route(\"scale.grid\", \"color\", \"\", \"borderColor\");\nO.route(\"scale.grid\", \"borderColor\", \"\", \"borderColor\");\nO.route(\"scale.title\", \"color\", \"\", \"color\");\nO.describe(\"scale\", {\n  _fallback: !1,\n  _scriptable: i => !i.startsWith(\"before\") && !i.startsWith(\"after\") && i !== \"callback\" && i !== \"parser\",\n  _indexable: i => i !== \"borderDash\" && i !== \"tickBorderDash\"\n});\nO.describe(\"scales\", {\n  _fallback: \"scale\"\n});\nO.describe(\"scale.ticks\", {\n  _scriptable: i => i !== \"backdropPadding\" && i !== \"callback\",\n  _indexable: i => i !== \"backdropPadding\"\n});\nfunction Sa(i, t) {\n  const e = i.options.ticks,\n    s = e.maxTicksLimit || Pa(i),\n    n = e.major.enabled ? Da(t) : [],\n    o = n.length,\n    r = n[0],\n    a = n[o - 1],\n    l = [];\n  if (o > s) return Oa(t, l, n, o / s), l;\n  const c = Ca(n, t, s);\n  if (o > 0) {\n    let h, d;\n    const u = o > 1 ? Math.round((a - r) / (o - 1)) : null;\n    for (Oe(t, l, c, T(u) ? 0 : r - u, r), h = 0, d = o - 1; h < d; h++) Oe(t, l, c, n[h], n[h + 1]);\n    return Oe(t, l, c, a, T(u) ? t.length : a + u), l;\n  }\n  return Oe(t, l, c), l;\n}\nfunction Pa(i) {\n  const t = i.options.offset,\n    e = i._tickSize(),\n    s = i._length / e + (t ? 0 : 1),\n    n = i._maxLength / e;\n  return Math.floor(Math.min(s, n));\n}\nfunction Ca(i, t, e) {\n  const s = Aa(i),\n    n = t.length / e;\n  if (!s) return Math.max(n, 1);\n  const o = Do(s);\n  for (let r = 0, a = o.length - 1; r < a; r++) {\n    const l = o[r];\n    if (l > n) return l;\n  }\n  return Math.max(n, 1);\n}\nfunction Da(i) {\n  const t = [];\n  let e, s;\n  for (e = 0, s = i.length; e < s; e++) i[e].major && t.push(e);\n  return t;\n}\nfunction Oa(i, t, e, s) {\n  let n = 0,\n    o = e[0],\n    r;\n  for (s = Math.ceil(s), r = 0; r < i.length; r++) r === o && (t.push(i[r]), n++, o = e[n * s]);\n}\nfunction Oe(i, t, e, s, n) {\n  const o = C(s, 0),\n    r = Math.min(C(n, i.length), i.length);\n  let a = 0,\n    l,\n    c,\n    h;\n  for (e = Math.ceil(e), n && (l = n - s, e = l / Math.floor(l / e)), h = o; h < 0;) a++, h = Math.round(o + a * e);\n  for (c = Math.max(o, 0); c < r; c++) c === h && (t.push(i[c]), a++, h = Math.round(o + a * e));\n}\nfunction Aa(i) {\n  const t = i.length;\n  let e, s;\n  if (t < 2) return !1;\n  for (s = i[0], e = 1; e < t; ++e) if (i[e] - i[e - 1] !== s) return !1;\n  return s;\n}\nconst Ta = i => i === \"left\" ? \"right\" : i === \"right\" ? \"left\" : i,\n  ws = (i, t, e) => t === \"top\" || t === \"left\" ? i[t] + e : i[t] - e;\nfunction Ss(i, t) {\n  const e = [],\n    s = i.length / t,\n    n = i.length;\n  let o = 0;\n  for (; o < n; o += s) e.push(i[Math.floor(o)]);\n  return e;\n}\nfunction La(i, t, e) {\n  const s = i.ticks.length,\n    n = Math.min(t, s - 1),\n    o = i._startPixel,\n    r = i._endPixel,\n    a = 1e-6;\n  let l = i.getPixelForTick(n),\n    c;\n  if (!(e && (s === 1 ? c = Math.max(l - o, r - l) : t === 0 ? c = (i.getPixelForTick(1) - l) / 2 : c = (l - i.getPixelForTick(n - 1)) / 2, l += n < t ? c : -c, l < o - a || l > r + a))) return l;\n}\nfunction Ra(i, t) {\n  E(i, e => {\n    const s = e.gc,\n      n = s.length / 2;\n    let o;\n    if (n > t) {\n      for (o = 0; o < n; ++o) delete e.data[s[o]];\n      s.splice(0, n);\n    }\n  });\n}\nfunction Xt(i) {\n  return i.drawTicks ? i.tickLength : 0;\n}\nfunction Ps(i, t) {\n  if (!i.display) return 0;\n  const e = $(i.font, t),\n    s = K(i.padding);\n  return (z(i.text) ? i.text.length : 1) * e.lineHeight + s.height;\n}\nfunction Ea(i, t) {\n  return vt(i, {\n    scale: t,\n    type: \"scale\"\n  });\n}\nfunction Fa(i, t, e) {\n  return vt(i, {\n    tick: e,\n    index: t,\n    type: \"tick\"\n  });\n}\nfunction Ia(i, t, e) {\n  let s = Li(i);\n  return (e && t !== \"right\" || !e && t === \"right\") && (s = Ta(s)), s;\n}\nfunction za(i, t, e, s) {\n  const {\n      top: n,\n      left: o,\n      bottom: r,\n      right: a,\n      chart: l\n    } = i,\n    {\n      chartArea: c,\n      scales: h\n    } = l;\n  let d = 0,\n    u,\n    f,\n    g;\n  const p = r - n,\n    m = a - o;\n  if (i.isHorizontal()) {\n    if (f = U(s, o, a), D(e)) {\n      const b = Object.keys(e)[0],\n        x = e[b];\n      g = h[b].getPixelForValue(x) + p - t;\n    } else e === \"center\" ? g = (c.bottom + c.top) / 2 + p - t : g = ws(i, e, t);\n    u = a - o;\n  } else {\n    if (D(e)) {\n      const b = Object.keys(e)[0],\n        x = e[b];\n      f = h[b].getPixelForValue(x) - m + t;\n    } else e === \"center\" ? f = (c.left + c.right) / 2 - m + t : f = ws(i, e, t);\n    g = U(s, r, n), d = e === \"left\" ? -V : V;\n  }\n  return {\n    titleX: f,\n    titleY: g,\n    maxWidth: u,\n    rotation: d\n  };\n}\nclass Mt extends st {\n  constructor(t) {\n    super(), this.id = t.id, this.type = t.type, this.options = void 0, this.ctx = t.ctx, this.chart = t.chart, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.width = void 0, this.height = void 0, this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, this.maxWidth = void 0, this.maxHeight = void 0, this.paddingTop = void 0, this.paddingBottom = void 0, this.paddingLeft = void 0, this.paddingRight = void 0, this.axis = void 0, this.labelRotation = void 0, this.min = void 0, this.max = void 0, this._range = void 0, this.ticks = [], this._gridLineItems = null, this._labelItems = null, this._labelSizes = null, this._length = 0, this._maxLength = 0, this._longestTextCache = {}, this._startPixel = void 0, this._endPixel = void 0, this._reversePixels = !1, this._userMax = void 0, this._userMin = void 0, this._suggestedMax = void 0, this._suggestedMin = void 0, this._ticksLength = 0, this._borderValue = 0, this._cache = {}, this._dataLimitsCached = !1, this.$context = void 0;\n  }\n  init(t) {\n    this.options = t.setContext(this.getContext()), this.axis = t.axis, this._userMin = this.parse(t.min), this._userMax = this.parse(t.max), this._suggestedMin = this.parse(t.suggestedMin), this._suggestedMax = this.parse(t.suggestedMax);\n  }\n  parse(t, e) {\n    return t;\n  }\n  getUserBounds() {\n    let {\n      _userMin: t,\n      _userMax: e,\n      _suggestedMin: s,\n      _suggestedMax: n\n    } = this;\n    return t = Q(t, Number.POSITIVE_INFINITY), e = Q(e, Number.NEGATIVE_INFINITY), s = Q(s, Number.POSITIVE_INFINITY), n = Q(n, Number.NEGATIVE_INFINITY), {\n      min: Q(t, s),\n      max: Q(e, n),\n      minDefined: N(t),\n      maxDefined: N(e)\n    };\n  }\n  getMinMax(t) {\n    let {\n        min: e,\n        max: s,\n        minDefined: n,\n        maxDefined: o\n      } = this.getUserBounds(),\n      r;\n    if (n && o) return {\n      min: e,\n      max: s\n    };\n    const a = this.getMatchingVisibleMetas();\n    for (let l = 0, c = a.length; l < c; ++l) r = a[l].controller.getMinMax(this, t), n || (e = Math.min(e, r.min)), o || (s = Math.max(s, r.max));\n    return e = o && e > s ? s : e, s = n && e > s ? e : s, {\n      min: Q(e, Q(s, e)),\n      max: Q(s, Q(e, s))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const t = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? t.xLabels : t.yLabels) || t.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {}, this._dataLimitsCached = !1;\n  }\n  beforeUpdate() {\n    I(this.options.beforeUpdate, [this]);\n  }\n  update(t, e, s) {\n    const {\n        beginAtZero: n,\n        grace: o,\n        ticks: r\n      } = this.options,\n      a = r.sampleSize;\n    this.beforeUpdate(), this.maxWidth = t, this.maxHeight = e, this._margins = s = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, s), this.ticks = null, this._labelSizes = null, this._gridLineItems = null, this._labelItems = null, this.beforeSetDimensions(), this.setDimensions(), this.afterSetDimensions(), this._maxLength = this.isHorizontal() ? this.width + s.left + s.right : this.height + s.top + s.bottom, this._dataLimitsCached || (this.beforeDataLimits(), this.determineDataLimits(), this.afterDataLimits(), this._range = mr(this, o, n), this._dataLimitsCached = !0), this.beforeBuildTicks(), this.ticks = this.buildTicks() || [], this.afterBuildTicks();\n    const l = a < this.ticks.length;\n    this._convertTicksToLabels(l ? Ss(this.ticks, a) : this.ticks), this.configure(), this.beforeCalculateLabelRotation(), this.calculateLabelRotation(), this.afterCalculateLabelRotation(), r.display && (r.autoSkip || r.source === \"auto\") && (this.ticks = Sa(this, this.ticks), this._labelSizes = null, this.afterAutoSkip()), l && this._convertTicksToLabels(this.ticks), this.beforeFit(), this.fit(), this.afterFit(), this.afterUpdate();\n  }\n  configure() {\n    let t = this.options.reverse,\n      e,\n      s;\n    this.isHorizontal() ? (e = this.left, s = this.right) : (e = this.top, s = this.bottom, t = !t), this._startPixel = e, this._endPixel = s, this._reversePixels = t, this._length = s - e, this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    I(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    I(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    this.isHorizontal() ? (this.width = this.maxWidth, this.left = 0, this.right = this.width) : (this.height = this.maxHeight, this.top = 0, this.bottom = this.height), this.paddingLeft = 0, this.paddingTop = 0, this.paddingRight = 0, this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    I(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(t) {\n    this.chart.notifyPlugins(t, this.getContext()), I(this.options[t], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks(\"beforeDataLimits\");\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks(\"afterDataLimits\");\n  }\n  beforeBuildTicks() {\n    this._callHooks(\"beforeBuildTicks\");\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks(\"afterBuildTicks\");\n  }\n  beforeTickToLabelConversion() {\n    I(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(t) {\n    const e = this.options.ticks;\n    let s, n, o;\n    for (s = 0, n = t.length; s < n; s++) o = t[s], o.label = I(e.callback, [o.value, s, t], this);\n  }\n  afterTickToLabelConversion() {\n    I(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    I(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const t = this.options,\n      e = t.ticks,\n      s = this.ticks.length,\n      n = e.minRotation || 0,\n      o = e.maxRotation;\n    let r = n,\n      a,\n      l,\n      c;\n    if (!this._isVisible() || !e.display || n >= o || s <= 1 || !this.isHorizontal()) {\n      this.labelRotation = n;\n      return;\n    }\n    const h = this._getLabelSizes(),\n      d = h.widest.width,\n      u = h.highest.height,\n      f = Y(this.chart.width - d, 0, this.maxWidth);\n    a = t.offset ? this.maxWidth / s : f / (s - 1), d + 6 > a && (a = f / (s - (t.offset ? 0.5 : 1)), l = this.maxHeight - Xt(t.grid) - e.padding - Ps(t.title, this.chart.options.font), c = Math.sqrt(d * d + u * u), r = Ai(Math.min(Math.asin(Y((h.highest.height + 6) / a, -1, 1)), Math.asin(Y(l / c, -1, 1)) - Math.asin(Y(u / c, -1, 1)))), r = Math.max(n, Math.min(o, r))), this.labelRotation = r;\n  }\n  afterCalculateLabelRotation() {\n    I(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    I(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const t = {\n        width: 0,\n        height: 0\n      },\n      {\n        chart: e,\n        options: {\n          ticks: s,\n          title: n,\n          grid: o\n        }\n      } = this,\n      r = this._isVisible(),\n      a = this.isHorizontal();\n    if (r) {\n      const l = Ps(n, e.options.font);\n      if (a ? (t.width = this.maxWidth, t.height = Xt(o) + l) : (t.height = this.maxHeight, t.width = Xt(o) + l), s.display && this.ticks.length) {\n        const {\n            first: c,\n            last: h,\n            widest: d,\n            highest: u\n          } = this._getLabelSizes(),\n          f = s.padding * 2,\n          g = nt(this.labelRotation),\n          p = Math.cos(g),\n          m = Math.sin(g);\n        if (a) {\n          const b = s.mirror ? 0 : m * d.width + p * u.height;\n          t.height = Math.min(this.maxHeight, t.height + b + f);\n        } else {\n          const b = s.mirror ? 0 : p * d.width + m * u.height;\n          t.width = Math.min(this.maxWidth, t.width + b + f);\n        }\n        this._calculatePadding(c, h, m, p);\n      }\n    }\n    this._handleMargins(), a ? (this.width = this._length = e.width - this._margins.left - this._margins.right, this.height = t.height) : (this.width = t.width, this.height = this._length = e.height - this._margins.top - this._margins.bottom);\n  }\n  _calculatePadding(t, e, s, n) {\n    const {\n        ticks: {\n          align: o,\n          padding: r\n        },\n        position: a\n      } = this.options,\n      l = this.labelRotation !== 0,\n      c = a !== \"top\" && this.axis === \"x\";\n    if (this.isHorizontal()) {\n      const h = this.getPixelForTick(0) - this.left,\n        d = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let u = 0,\n        f = 0;\n      l ? c ? (u = n * t.width, f = s * e.height) : (u = s * t.height, f = n * e.width) : o === \"start\" ? f = e.width : o === \"end\" ? u = t.width : o !== \"inner\" && (u = t.width / 2, f = e.width / 2), this.paddingLeft = Math.max((u - h + r) * this.width / (this.width - h), 0), this.paddingRight = Math.max((f - d + r) * this.width / (this.width - d), 0);\n    } else {\n      let h = e.height / 2,\n        d = t.height / 2;\n      o === \"start\" ? (h = 0, d = t.height) : o === \"end\" && (h = e.height, d = 0), this.paddingTop = h + r, this.paddingBottom = d + r;\n    }\n  }\n  _handleMargins() {\n    this._margins && (this._margins.left = Math.max(this.paddingLeft, this._margins.left), this._margins.top = Math.max(this.paddingTop, this._margins.top), this._margins.right = Math.max(this.paddingRight, this._margins.right), this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom));\n  }\n  afterFit() {\n    I(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {\n      axis: t,\n      position: e\n    } = this.options;\n    return e === \"top\" || e === \"bottom\" || t === \"x\";\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(t) {\n    this.beforeTickToLabelConversion(), this.generateTickLabels(t);\n    let e, s;\n    for (e = 0, s = t.length; e < s; e++) T(t[e].label) && (t.splice(e, 1), s--, e--);\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let t = this._labelSizes;\n    if (!t) {\n      const e = this.options.ticks.sampleSize;\n      let s = this.ticks;\n      e < s.length && (s = Ss(s, e)), this._labelSizes = t = this._computeLabelSizes(s, s.length);\n    }\n    return t;\n  }\n  _computeLabelSizes(t, e) {\n    const {\n        ctx: s,\n        _longestTextCache: n\n      } = this,\n      o = [],\n      r = [];\n    let a = 0,\n      l = 0,\n      c,\n      h,\n      d,\n      u,\n      f,\n      g,\n      p,\n      m,\n      b,\n      x,\n      v;\n    for (c = 0; c < e; ++c) {\n      if (u = t[c].label, f = this._resolveTickFontOptions(c), s.font = g = f.string, p = n[g] = n[g] || {\n        data: {},\n        gc: []\n      }, m = f.lineHeight, b = x = 0, !T(u) && !z(u)) b = Ne(s, p.data, p.gc, b, u), x = m;else if (z(u)) for (h = 0, d = u.length; h < d; ++h) v = u[h], !T(v) && !z(v) && (b = Ne(s, p.data, p.gc, b, v), x += m);\n      o.push(b), r.push(x), a = Math.max(b, a), l = Math.max(x, l);\n    }\n    Ra(n, e);\n    const y = o.indexOf(a),\n      _ = r.indexOf(l),\n      M = k => ({\n        width: o[k] || 0,\n        height: r[k] || 0\n      });\n    return {\n      first: M(0),\n      last: M(e - 1),\n      widest: M(y),\n      highest: M(_),\n      widths: o,\n      heights: r\n    };\n  }\n  getLabelForValue(t) {\n    return t;\n  }\n  getPixelForValue(t, e) {\n    return NaN;\n  }\n  getValueForPixel(t) {}\n  getPixelForTick(t) {\n    const e = this.ticks;\n    return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value);\n  }\n  getPixelForDecimal(t) {\n    this._reversePixels && (t = 1 - t);\n    const e = this._startPixel + t * this._length;\n    return To(this._alignToPixels ? wt(this.chart, e, 0) : e);\n  }\n  getDecimalForPixel(t) {\n    const e = (t - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - e : e;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {\n      min: t,\n      max: e\n    } = this;\n    return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0;\n  }\n  getContext(t) {\n    const e = this.ticks || [];\n    if (t >= 0 && t < e.length) {\n      const s = e[t];\n      return s.$context || (s.$context = Fa(this.getContext(), t, s));\n    }\n    return this.$context || (this.$context = Ea(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const t = this.options.ticks,\n      e = nt(this.labelRotation),\n      s = Math.abs(Math.cos(e)),\n      n = Math.abs(Math.sin(e)),\n      o = this._getLabelSizes(),\n      r = t.autoSkipPadding || 0,\n      a = o ? o.widest.width + r : 0,\n      l = o ? o.highest.height + r : 0;\n    return this.isHorizontal() ? l * s > a * n ? a / s : l / n : l * n < a * s ? l / s : a / n;\n  }\n  _isVisible() {\n    const t = this.options.display;\n    return t !== \"auto\" ? !!t : this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(t) {\n    const e = this.axis,\n      s = this.chart,\n      n = this.options,\n      {\n        grid: o,\n        position: r\n      } = n,\n      a = o.offset,\n      l = this.isHorizontal(),\n      h = this.ticks.length + (a ? 1 : 0),\n      d = Xt(o),\n      u = [],\n      f = o.setContext(this.getContext()),\n      g = f.drawBorder ? f.borderWidth : 0,\n      p = g / 2,\n      m = function (P) {\n        return wt(s, P, g);\n      };\n    let b, x, v, y, _, M, k, S, w, L, R, A;\n    if (r === \"top\") b = m(this.bottom), M = this.bottom - d, S = b - p, L = m(t.top) + p, A = t.bottom;else if (r === \"bottom\") b = m(this.top), L = t.top, A = m(t.bottom) - p, M = b + p, S = this.top + d;else if (r === \"left\") b = m(this.right), _ = this.right - d, k = b - p, w = m(t.left) + p, R = t.right;else if (r === \"right\") b = m(this.left), w = t.left, R = m(t.right) - p, _ = b + p, k = this.left + d;else if (e === \"x\") {\n      if (r === \"center\") b = m((t.top + t.bottom) / 2 + 0.5);else if (D(r)) {\n        const P = Object.keys(r)[0],\n          j = r[P];\n        b = m(this.chart.scales[P].getPixelForValue(j));\n      }\n      L = t.top, A = t.bottom, M = b + p, S = M + d;\n    } else if (e === \"y\") {\n      if (r === \"center\") b = m((t.left + t.right) / 2);else if (D(r)) {\n        const P = Object.keys(r)[0],\n          j = r[P];\n        b = m(this.chart.scales[P].getPixelForValue(j));\n      }\n      _ = b - p, k = _ - d, w = t.left, R = t.right;\n    }\n    const H = C(n.ticks.maxTicksLimit, h),\n      q = Math.max(1, Math.ceil(h / H));\n    for (x = 0; x < h; x += q) {\n      const P = o.setContext(this.getContext(x)),\n        j = P.lineWidth,\n        W = P.color,\n        kt = P.borderDash || [],\n        ti = P.borderDashOffset,\n        Rt = P.tickWidth,\n        ke = P.tickColor,\n        Et = P.tickBorderDash || [],\n        jt = P.tickBorderDashOffset;\n      v = La(this, x, a), v !== void 0 && (y = wt(s, v, j), l ? _ = k = w = R = y : M = S = L = A = y, u.push({\n        tx1: _,\n        ty1: M,\n        tx2: k,\n        ty2: S,\n        x1: w,\n        y1: L,\n        x2: R,\n        y2: A,\n        width: j,\n        color: W,\n        borderDash: kt,\n        borderDashOffset: ti,\n        tickWidth: Rt,\n        tickColor: ke,\n        tickBorderDash: Et,\n        tickBorderDashOffset: jt\n      }));\n    }\n    return this._ticksLength = h, this._borderValue = b, u;\n  }\n  _computeLabelItems(t) {\n    const e = this.axis,\n      s = this.options,\n      {\n        position: n,\n        ticks: o\n      } = s,\n      r = this.isHorizontal(),\n      a = this.ticks,\n      {\n        align: l,\n        crossAlign: c,\n        padding: h,\n        mirror: d\n      } = o,\n      u = Xt(s.grid),\n      f = u + h,\n      g = d ? -h : f,\n      p = -nt(this.labelRotation),\n      m = [];\n    let b,\n      x,\n      v,\n      y,\n      _,\n      M,\n      k,\n      S,\n      w,\n      L,\n      R,\n      A,\n      H = \"middle\";\n    if (n === \"top\") M = this.bottom - g, k = this._getXAxisLabelAlignment();else if (n === \"bottom\") M = this.top + g, k = this._getXAxisLabelAlignment();else if (n === \"left\") {\n      const P = this._getYAxisLabelAlignment(u);\n      k = P.textAlign, _ = P.x;\n    } else if (n === \"right\") {\n      const P = this._getYAxisLabelAlignment(u);\n      k = P.textAlign, _ = P.x;\n    } else if (e === \"x\") {\n      if (n === \"center\") M = (t.top + t.bottom) / 2 + f;else if (D(n)) {\n        const P = Object.keys(n)[0],\n          j = n[P];\n        M = this.chart.scales[P].getPixelForValue(j) + f;\n      }\n      k = this._getXAxisLabelAlignment();\n    } else if (e === \"y\") {\n      if (n === \"center\") _ = (t.left + t.right) / 2 - f;else if (D(n)) {\n        const P = Object.keys(n)[0],\n          j = n[P];\n        _ = this.chart.scales[P].getPixelForValue(j);\n      }\n      k = this._getYAxisLabelAlignment(u).textAlign;\n    }\n    e === \"y\" && (l === \"start\" ? H = \"top\" : l === \"end\" && (H = \"bottom\"));\n    const q = this._getLabelSizes();\n    for (b = 0, x = a.length; b < x; ++b) {\n      v = a[b], y = v.label;\n      const P = o.setContext(this.getContext(b));\n      S = this.getPixelForTick(b) + o.labelOffset, w = this._resolveTickFontOptions(b), L = w.lineHeight, R = z(y) ? y.length : 1;\n      const j = R / 2,\n        W = P.color,\n        kt = P.textStrokeColor,\n        ti = P.textStrokeWidth;\n      let Rt = k;\n      r ? (_ = S, k === \"inner\" && (b === x - 1 ? Rt = this.options.reverse ? \"left\" : \"right\" : b === 0 ? Rt = this.options.reverse ? \"right\" : \"left\" : Rt = \"center\"), n === \"top\" ? c === \"near\" || p !== 0 ? A = -R * L + L / 2 : c === \"center\" ? A = -q.highest.height / 2 - j * L + L : A = -q.highest.height + L / 2 : c === \"near\" || p !== 0 ? A = L / 2 : c === \"center\" ? A = q.highest.height / 2 - j * L : A = q.highest.height - R * L, d && (A *= -1)) : (M = S, A = (1 - R) * L / 2);\n      let ke;\n      if (P.showLabelBackdrop) {\n        const Et = K(P.backdropPadding),\n          jt = q.heights[b],\n          ei = q.widths[b];\n        let ii = M + A - Et.top,\n          si = _ - Et.left;\n        switch (H) {\n          case \"middle\":\n            ii -= jt / 2;\n            break;\n          case \"bottom\":\n            ii -= jt;\n            break;\n        }\n        switch (k) {\n          case \"center\":\n            si -= ei / 2;\n            break;\n          case \"right\":\n            si -= ei;\n            break;\n        }\n        ke = {\n          left: si,\n          top: ii,\n          width: ei + Et.width,\n          height: jt + Et.height,\n          color: P.backdropColor\n        };\n      }\n      m.push({\n        rotation: p,\n        label: y,\n        font: w,\n        color: W,\n        strokeColor: kt,\n        strokeWidth: ti,\n        textOffset: A,\n        textAlign: Rt,\n        textBaseline: H,\n        translation: [_, M],\n        backdrop: ke\n      });\n    }\n    return m;\n  }\n  _getXAxisLabelAlignment() {\n    const {\n      position: t,\n      ticks: e\n    } = this.options;\n    if (-nt(this.labelRotation)) return t === \"top\" ? \"left\" : \"right\";\n    let n = \"center\";\n    return e.align === \"start\" ? n = \"left\" : e.align === \"end\" ? n = \"right\" : e.align === \"inner\" && (n = \"inner\"), n;\n  }\n  _getYAxisLabelAlignment(t) {\n    const {\n        position: e,\n        ticks: {\n          crossAlign: s,\n          mirror: n,\n          padding: o\n        }\n      } = this.options,\n      r = this._getLabelSizes(),\n      a = t + o,\n      l = r.widest.width;\n    let c, h;\n    return e === \"left\" ? n ? (h = this.right + o, s === \"near\" ? c = \"left\" : s === \"center\" ? (c = \"center\", h += l / 2) : (c = \"right\", h += l)) : (h = this.right - a, s === \"near\" ? c = \"right\" : s === \"center\" ? (c = \"center\", h -= l / 2) : (c = \"left\", h = this.left)) : e === \"right\" ? n ? (h = this.left + o, s === \"near\" ? c = \"right\" : s === \"center\" ? (c = \"center\", h -= l / 2) : (c = \"left\", h -= l)) : (h = this.left + a, s === \"near\" ? c = \"left\" : s === \"center\" ? (c = \"center\", h += l / 2) : (c = \"right\", h = this.right)) : c = \"right\", {\n      textAlign: c,\n      x: h\n    };\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) return;\n    const t = this.chart,\n      e = this.options.position;\n    if (e === \"left\" || e === \"right\") return {\n      top: 0,\n      left: this.left,\n      bottom: t.height,\n      right: this.right\n    };\n    if (e === \"top\" || e === \"bottom\") return {\n      top: this.top,\n      left: 0,\n      bottom: this.bottom,\n      right: t.width\n    };\n  }\n  drawBackground() {\n    const {\n      ctx: t,\n      options: {\n        backgroundColor: e\n      },\n      left: s,\n      top: n,\n      width: o,\n      height: r\n    } = this;\n    e && (t.save(), t.fillStyle = e, t.fillRect(s, n, o, r), t.restore());\n  }\n  getLineWidthForValue(t) {\n    const e = this.options.grid;\n    if (!this._isVisible() || !e.display) return 0;\n    const n = this.ticks.findIndex(o => o.value === t);\n    return n >= 0 ? e.setContext(this.getContext(n)).lineWidth : 0;\n  }\n  drawGrid(t) {\n    const e = this.options.grid,\n      s = this.ctx,\n      n = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(t));\n    let o, r;\n    const a = (l, c, h) => {\n      !h.width || !h.color || (s.save(), s.lineWidth = h.width, s.strokeStyle = h.color, s.setLineDash(h.borderDash || []), s.lineDashOffset = h.borderDashOffset, s.beginPath(), s.moveTo(l.x, l.y), s.lineTo(c.x, c.y), s.stroke(), s.restore());\n    };\n    if (e.display) for (o = 0, r = n.length; o < r; ++o) {\n      const l = n[o];\n      e.drawOnChartArea && a({\n        x: l.x1,\n        y: l.y1\n      }, {\n        x: l.x2,\n        y: l.y2\n      }, l), e.drawTicks && a({\n        x: l.tx1,\n        y: l.ty1\n      }, {\n        x: l.tx2,\n        y: l.ty2\n      }, {\n        color: l.tickColor,\n        width: l.tickWidth,\n        borderDash: l.tickBorderDash,\n        borderDashOffset: l.tickBorderDashOffset\n      });\n    }\n  }\n  drawBorder() {\n    const {\n        chart: t,\n        ctx: e,\n        options: {\n          grid: s\n        }\n      } = this,\n      n = s.setContext(this.getContext()),\n      o = s.drawBorder ? n.borderWidth : 0;\n    if (!o) return;\n    const r = s.setContext(this.getContext(0)).lineWidth,\n      a = this._borderValue;\n    let l, c, h, d;\n    this.isHorizontal() ? (l = wt(t, this.left, o) - o / 2, c = wt(t, this.right, r) + r / 2, h = d = a) : (h = wt(t, this.top, o) - o / 2, d = wt(t, this.bottom, r) + r / 2, l = c = a), e.save(), e.lineWidth = n.borderWidth, e.strokeStyle = n.borderColor, e.beginPath(), e.moveTo(l, h), e.lineTo(c, d), e.stroke(), e.restore();\n  }\n  drawLabels(t) {\n    if (!this.options.ticks.display) return;\n    const s = this.ctx,\n      n = this._computeLabelArea();\n    n && Xe(s, n);\n    const o = this._labelItems || (this._labelItems = this._computeLabelItems(t));\n    let r, a;\n    for (r = 0, a = o.length; r < a; ++r) {\n      const l = o[r],\n        c = l.font,\n        h = l.label;\n      l.backdrop && (s.fillStyle = l.backdrop.color, s.fillRect(l.backdrop.left, l.backdrop.top, l.backdrop.width, l.backdrop.height));\n      let d = l.textOffset;\n      Tt(s, h, 0, d, c, l);\n    }\n    n && Ue(s);\n  }\n  drawTitle() {\n    const {\n      ctx: t,\n      options: {\n        position: e,\n        title: s,\n        reverse: n\n      }\n    } = this;\n    if (!s.display) return;\n    const o = $(s.font),\n      r = K(s.padding),\n      a = s.align;\n    let l = o.lineHeight / 2;\n    e === \"bottom\" || e === \"center\" || D(e) ? (l += r.bottom, z(s.text) && (l += o.lineHeight * (s.text.length - 1))) : l += r.top;\n    const {\n      titleX: c,\n      titleY: h,\n      maxWidth: d,\n      rotation: u\n    } = za(this, l, e, a);\n    Tt(t, s.text, 0, 0, o, {\n      color: s.color,\n      maxWidth: d,\n      rotation: u,\n      textAlign: Ia(a, e, n),\n      textBaseline: \"middle\",\n      translation: [c, h]\n    });\n  }\n  draw(t) {\n    this._isVisible() && (this.drawBackground(), this.drawGrid(t), this.drawBorder(), this.drawTitle(), this.drawLabels(t));\n  }\n  _layers() {\n    const t = this.options,\n      e = t.ticks && t.ticks.z || 0,\n      s = C(t.grid && t.grid.z, -1);\n    return !this._isVisible() || this.draw !== Mt.prototype.draw ? [{\n      z: e,\n      draw: n => {\n        this.draw(n);\n      }\n    }] : [{\n      z: s,\n      draw: n => {\n        this.drawBackground(), this.drawGrid(n), this.drawTitle();\n      }\n    }, {\n      z: s + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: e,\n      draw: n => {\n        this.drawLabels(n);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(t) {\n    const e = this.chart.getSortedVisibleDatasetMetas(),\n      s = this.axis + \"AxisID\",\n      n = [];\n    let o, r;\n    for (o = 0, r = e.length; o < r; ++o) {\n      const a = e[o];\n      a[s] === this.id && (!t || a.type === t) && n.push(a);\n    }\n    return n;\n  }\n  _resolveTickFontOptions(t) {\n    const e = this.options.ticks.setContext(this.getContext(t));\n    return $(e.font);\n  }\n  _maxDigits() {\n    const t = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / t;\n  }\n}\nclass Ae {\n  constructor(t, e, s) {\n    this.type = t, this.scope = e, this.override = s, this.items = /* @__PURE__ */Object.create(null);\n  }\n  isForType(t) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, t.prototype);\n  }\n  register(t) {\n    const e = Object.getPrototypeOf(t);\n    let s;\n    Wa(e) && (s = this.register(e));\n    const n = this.items,\n      o = t.id,\n      r = this.scope + \".\" + o;\n    if (!o) throw new Error(\"class does not have id: \" + t);\n    return o in n || (n[o] = t, Ba(t, r, s), this.override && O.override(t.id, t.overrides)), r;\n  }\n  get(t) {\n    return this.items[t];\n  }\n  unregister(t) {\n    const e = this.items,\n      s = t.id,\n      n = this.scope;\n    s in e && delete e[s], n && s in O[n] && (delete O[n][s], this.override && delete At[s]);\n  }\n}\nfunction Ba(i, t, e) {\n  const s = ne( /* @__PURE__ */Object.create(null), [e ? O.get(e) : {}, O.get(t), i.defaults]);\n  O.set(t, s), i.defaultRoutes && Va(t, i.defaultRoutes), i.descriptors && O.describe(t, i.descriptors);\n}\nfunction Va(i, t) {\n  Object.keys(t).forEach(e => {\n    const s = e.split(\".\"),\n      n = s.pop(),\n      o = [i].concat(s).join(\".\"),\n      r = t[e].split(\".\"),\n      a = r.pop(),\n      l = r.join(\".\");\n    O.route(o, n, l, a);\n  });\n}\nfunction Wa(i) {\n  return \"id\" in i && \"defaults\" in i;\n}\nclass Na {\n  constructor() {\n    this.controllers = new Ae(it, \"datasets\", !0), this.elements = new Ae(st, \"elements\"), this.plugins = new Ae(Object, \"plugins\"), this.scales = new Ae(Mt, \"scales\"), this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...t) {\n    this._each(\"register\", t);\n  }\n  remove(...t) {\n    this._each(\"unregister\", t);\n  }\n  addControllers(...t) {\n    this._each(\"register\", t, this.controllers);\n  }\n  addElements(...t) {\n    this._each(\"register\", t, this.elements);\n  }\n  addPlugins(...t) {\n    this._each(\"register\", t, this.plugins);\n  }\n  addScales(...t) {\n    this._each(\"register\", t, this.scales);\n  }\n  getController(t) {\n    return this._get(t, this.controllers, \"controller\");\n  }\n  getElement(t) {\n    return this._get(t, this.elements, \"element\");\n  }\n  getPlugin(t) {\n    return this._get(t, this.plugins, \"plugin\");\n  }\n  getScale(t) {\n    return this._get(t, this.scales, \"scale\");\n  }\n  removeControllers(...t) {\n    this._each(\"unregister\", t, this.controllers);\n  }\n  removeElements(...t) {\n    this._each(\"unregister\", t, this.elements);\n  }\n  removePlugins(...t) {\n    this._each(\"unregister\", t, this.plugins);\n  }\n  removeScales(...t) {\n    this._each(\"unregister\", t, this.scales);\n  }\n  _each(t, e, s) {\n    [...e].forEach(n => {\n      const o = s || this._getRegistryForType(n);\n      s || o.isForType(n) || o === this.plugins && n.id ? this._exec(t, o, n) : E(n, r => {\n        const a = s || this._getRegistryForType(r);\n        this._exec(t, a, r);\n      });\n    });\n  }\n  _exec(t, e, s) {\n    const n = Oi(t);\n    I(s[\"before\" + n], [], s), e[t](s), I(s[\"after\" + n], [], s);\n  }\n  _getRegistryForType(t) {\n    for (let e = 0; e < this._typedRegistries.length; e++) {\n      const s = this._typedRegistries[e];\n      if (s.isForType(t)) return s;\n    }\n    return this.plugins;\n  }\n  _get(t, e, s) {\n    const n = e.get(t);\n    if (n === void 0) throw new Error('\"' + t + '\" is not a registered ' + s + \".\");\n    return n;\n  }\n}\nvar ot = new Na();\nclass xe extends it {\n  update(t) {\n    const e = this._cachedMeta,\n      {\n        data: s = []\n      } = e,\n      n = this.chart._animationsDisabled;\n    let {\n      start: o,\n      count: r\n    } = pn(e, s, n);\n    if (this._drawStart = o, this._drawCount = r, mn(e) && (o = 0, r = s.length), this.options.showLine) {\n      const {\n        dataset: a,\n        _dataset: l\n      } = e;\n      a._chart = this.chart, a._datasetIndex = this.index, a._decimated = !!l._decimated, a.points = s;\n      const c = this.resolveDatasetElementOptions(t);\n      c.segment = this.options.segment, this.updateElement(a, void 0, {\n        animated: !n,\n        options: c\n      }, t);\n    }\n    this.updateElements(s, o, r, t);\n  }\n  addElements() {\n    const {\n      showLine: t\n    } = this.options;\n    !this.datasetElementType && t && (this.datasetElementType = ot.getElement(\"line\")), super.addElements();\n  }\n  updateElements(t, e, s, n) {\n    const o = n === \"reset\",\n      {\n        iScale: r,\n        vScale: a,\n        _stacked: l,\n        _dataset: c\n      } = this._cachedMeta,\n      h = this.resolveDataElementOptions(e, n),\n      d = this.getSharedOptions(h),\n      u = this.includeOptions(n, d),\n      f = r.axis,\n      g = a.axis,\n      {\n        spanGaps: p,\n        segment: m\n      } = this.options,\n      b = Bt(p) ? p : Number.POSITIVE_INFINITY,\n      x = this.chart._animationsDisabled || o || n === \"none\";\n    let v = e > 0 && this.getParsed(e - 1);\n    for (let y = e; y < e + s; ++y) {\n      const _ = t[y],\n        M = this.getParsed(y),\n        k = x ? _ : {},\n        S = T(M[g]),\n        w = k[f] = r.getPixelForValue(M[f], y),\n        L = k[g] = o || S ? a.getBasePixel() : a.getPixelForValue(l ? this.applyStack(a, M, l) : M[g], y);\n      k.skip = isNaN(w) || isNaN(L) || S, k.stop = y > 0 && Math.abs(M[f] - v[f]) > b, m && (k.parsed = M, k.raw = c.data[y]), u && (k.options = d || this.resolveDataElementOptions(y, _.active ? \"active\" : n)), x || this.updateElement(_, y, k, n), v = M;\n    }\n    this.updateSharedOptions(d, n, h);\n  }\n  getMaxOverflow() {\n    const t = this._cachedMeta,\n      e = t.data || [];\n    if (!this.options.showLine) {\n      let a = 0;\n      for (let l = e.length - 1; l >= 0; --l) a = Math.max(a, e[l].size(this.resolveDataElementOptions(l)) / 2);\n      return a > 0 && a;\n    }\n    const s = t.dataset,\n      n = s.options && s.options.borderWidth || 0;\n    if (!e.length) return n;\n    const o = e[0].size(this.resolveDataElementOptions(0)),\n      r = e[e.length - 1].size(this.resolveDataElementOptions(e.length - 1));\n    return Math.max(n, o, r) / 2;\n  }\n}\nxe.id = \"scatter\";\nxe.defaults = {\n  datasetElementType: !1,\n  dataElementType: \"point\",\n  showLine: !1,\n  fill: !1\n};\nxe.overrides = {\n  interaction: {\n    mode: \"point\"\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return \"\";\n        },\n        label(i) {\n          return \"(\" + i.label + \", \" + i.formattedValue + \")\";\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: \"linear\"\n    },\n    y: {\n      type: \"linear\"\n    }\n  }\n};\nvar Wn = /* @__PURE__ */Object.freeze({\n  __proto__: null,\n  BarController: ue,\n  BubbleController: fe,\n  DoughnutController: Lt,\n  LineController: ge,\n  PolarAreaController: pe,\n  PieController: qe,\n  RadarController: me,\n  ScatterController: xe\n});\nfunction St() {\n  throw new Error(\"This method is not implemented: Check that a complete date adapter is provided.\");\n}\nclass vi {\n  constructor(t) {\n    this.options = t || {};\n  }\n  init(t) {}\n  formats() {\n    return St();\n  }\n  parse(t, e) {\n    return St();\n  }\n  format(t, e) {\n    return St();\n  }\n  add(t, e, s) {\n    return St();\n  }\n  diff(t, e, s) {\n    return St();\n  }\n  startOf(t, e, s) {\n    return St();\n  }\n  endOf(t, e) {\n    return St();\n  }\n}\nvi.override = function (i) {\n  Object.assign(vi.prototype, i);\n};\nvar Nn = {\n  _date: vi\n};\nfunction Ha(i, t, e, s) {\n  const {\n      controller: n,\n      data: o,\n      _sorted: r\n    } = i,\n    a = n._cachedMeta.iScale;\n  if (a && t === a.axis && t !== \"r\" && r && o.length) {\n    const l = a._reversePixels ? Lo : ft;\n    if (s) {\n      if (n._sharedOptions) {\n        const c = o[0],\n          h = typeof c.getRange == \"function\" && c.getRange(t);\n        if (h) {\n          const d = l(o, t, e - h),\n            u = l(o, t, e + h);\n          return {\n            lo: d.lo,\n            hi: u.hi\n          };\n        }\n      }\n    } else return l(o, t, e);\n  }\n  return {\n    lo: 0,\n    hi: o.length - 1\n  };\n}\nfunction _e(i, t, e, s, n) {\n  const o = i.getSortedVisibleDatasetMetas(),\n    r = e[t];\n  for (let a = 0, l = o.length; a < l; ++a) {\n    const {\n        index: c,\n        data: h\n      } = o[a],\n      {\n        lo: d,\n        hi: u\n      } = Ha(o[a], t, r, n);\n    for (let f = d; f <= u; ++f) {\n      const g = h[f];\n      g.skip || s(g, c, f);\n    }\n  }\n}\nfunction ja(i) {\n  const t = i.indexOf(\"x\") !== -1,\n    e = i.indexOf(\"y\") !== -1;\n  return function (s, n) {\n    const o = t ? Math.abs(s.x - n.x) : 0,\n      r = e ? Math.abs(s.y - n.y) : 0;\n    return Math.sqrt(Math.pow(o, 2) + Math.pow(r, 2));\n  };\n}\nfunction di(i, t, e, s, n) {\n  const o = [];\n  return !n && !i.isPointInArea(t) || _e(i, e, t, function (a, l, c) {\n    !n && !re(a, i.chartArea, 0) || a.inRange(t.x, t.y, s) && o.push({\n      element: a,\n      datasetIndex: l,\n      index: c\n    });\n  }, !0), o;\n}\nfunction $a(i, t, e, s) {\n  let n = [];\n  function o(r, a, l) {\n    const {\n        startAngle: c,\n        endAngle: h\n      } = r.getProps([\"startAngle\", \"endAngle\"], s),\n      {\n        angle: d\n      } = hn(r, {\n        x: t.x,\n        y: t.y\n      });\n    oe(d, c, h) && n.push({\n      element: r,\n      datasetIndex: a,\n      index: l\n    });\n  }\n  return _e(i, e, t, o), n;\n}\nfunction Ya(i, t, e, s, n, o) {\n  let r = [];\n  const a = ja(e);\n  let l = Number.POSITIVE_INFINITY;\n  function c(h, d, u) {\n    const f = h.inRange(t.x, t.y, n);\n    if (s && !f) return;\n    const g = h.getCenterPoint(n);\n    if (!(!!o || i.isPointInArea(g)) && !f) return;\n    const m = a(t, g);\n    m < l ? (r = [{\n      element: h,\n      datasetIndex: d,\n      index: u\n    }], l = m) : m === l && r.push({\n      element: h,\n      datasetIndex: d,\n      index: u\n    });\n  }\n  return _e(i, e, t, c), r;\n}\nfunction ui(i, t, e, s, n, o) {\n  return !o && !i.isPointInArea(t) ? [] : e === \"r\" && !s ? $a(i, t, e, n) : Ya(i, t, e, s, n, o);\n}\nfunction Cs(i, t, e, s, n) {\n  const o = [],\n    r = e === \"x\" ? \"inXRange\" : \"inYRange\";\n  let a = !1;\n  return _e(i, e, t, (l, c, h) => {\n    l[r](t[e], n) && (o.push({\n      element: l,\n      datasetIndex: c,\n      index: h\n    }), a = a || l.inRange(t.x, t.y, n));\n  }), s && !a ? [] : o;\n}\nvar Hn = {\n  evaluateInteractionItems: _e,\n  modes: {\n    index(i, t, e, s) {\n      const n = Pt(t, i),\n        o = e.axis || \"x\",\n        r = e.includeInvisible || !1,\n        a = e.intersect ? di(i, n, o, s, r) : ui(i, n, o, !1, s, r),\n        l = [];\n      return a.length ? (i.getSortedVisibleDatasetMetas().forEach(c => {\n        const h = a[0].index,\n          d = c.data[h];\n        d && !d.skip && l.push({\n          element: d,\n          datasetIndex: c.index,\n          index: h\n        });\n      }), l) : [];\n    },\n    dataset(i, t, e, s) {\n      const n = Pt(t, i),\n        o = e.axis || \"xy\",\n        r = e.includeInvisible || !1;\n      let a = e.intersect ? di(i, n, o, s, r) : ui(i, n, o, !1, s, r);\n      if (a.length > 0) {\n        const l = a[0].datasetIndex,\n          c = i.getDatasetMeta(l).data;\n        a = [];\n        for (let h = 0; h < c.length; ++h) a.push({\n          element: c[h],\n          datasetIndex: l,\n          index: h\n        });\n      }\n      return a;\n    },\n    point(i, t, e, s) {\n      const n = Pt(t, i),\n        o = e.axis || \"xy\",\n        r = e.includeInvisible || !1;\n      return di(i, n, o, s, r);\n    },\n    nearest(i, t, e, s) {\n      const n = Pt(t, i),\n        o = e.axis || \"xy\",\n        r = e.includeInvisible || !1;\n      return ui(i, n, o, e.intersect, s, r);\n    },\n    x(i, t, e, s) {\n      const n = Pt(t, i);\n      return Cs(i, n, \"x\", e.intersect, s);\n    },\n    y(i, t, e, s) {\n      const n = Pt(t, i);\n      return Cs(i, n, \"y\", e.intersect, s);\n    }\n  }\n};\nconst jn = [\"left\", \"top\", \"right\", \"bottom\"];\nfunction Ut(i, t) {\n  return i.filter(e => e.pos === t);\n}\nfunction Ds(i, t) {\n  return i.filter(e => jn.indexOf(e.pos) === -1 && e.box.axis === t);\n}\nfunction Kt(i, t) {\n  return i.sort((e, s) => {\n    const n = t ? s : e,\n      o = t ? e : s;\n    return n.weight === o.weight ? n.index - o.index : n.weight - o.weight;\n  });\n}\nfunction Xa(i) {\n  const t = [];\n  let e, s, n, o, r, a;\n  for (e = 0, s = (i || []).length; e < s; ++e) n = i[e], ({\n    position: o,\n    options: {\n      stack: r,\n      stackWeight: a = 1\n    }\n  } = n), t.push({\n    index: e,\n    box: n,\n    pos: o,\n    horizontal: n.isHorizontal(),\n    weight: n.weight,\n    stack: r && o + r,\n    stackWeight: a\n  });\n  return t;\n}\nfunction Ua(i) {\n  const t = {};\n  for (const e of i) {\n    const {\n      stack: s,\n      pos: n,\n      stackWeight: o\n    } = e;\n    if (!s || !jn.includes(n)) continue;\n    const r = t[s] || (t[s] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n    r.count++, r.weight += o;\n  }\n  return t;\n}\nfunction Ka(i, t) {\n  const e = Ua(i),\n    {\n      vBoxMaxWidth: s,\n      hBoxMaxHeight: n\n    } = t;\n  let o, r, a;\n  for (o = 0, r = i.length; o < r; ++o) {\n    a = i[o];\n    const {\n        fullSize: l\n      } = a.box,\n      c = e[a.stack],\n      h = c && a.stackWeight / c.weight;\n    a.horizontal ? (a.width = h ? h * s : l && t.availableWidth, a.height = n) : (a.width = s, a.height = h ? h * n : l && t.availableHeight);\n  }\n  return e;\n}\nfunction qa(i) {\n  const t = Xa(i),\n    e = Kt(t.filter(c => c.box.fullSize), !0),\n    s = Kt(Ut(t, \"left\"), !0),\n    n = Kt(Ut(t, \"right\")),\n    o = Kt(Ut(t, \"top\"), !0),\n    r = Kt(Ut(t, \"bottom\")),\n    a = Ds(t, \"x\"),\n    l = Ds(t, \"y\");\n  return {\n    fullSize: e,\n    leftAndTop: s.concat(o),\n    rightAndBottom: n.concat(l).concat(r).concat(a),\n    chartArea: Ut(t, \"chartArea\"),\n    vertical: s.concat(n).concat(l),\n    horizontal: o.concat(r).concat(a)\n  };\n}\nfunction Os(i, t, e, s) {\n  return Math.max(i[e], t[e]) + Math.max(i[s], t[s]);\n}\nfunction $n(i, t) {\n  i.top = Math.max(i.top, t.top), i.left = Math.max(i.left, t.left), i.bottom = Math.max(i.bottom, t.bottom), i.right = Math.max(i.right, t.right);\n}\nfunction Ga(i, t, e, s) {\n  const {\n      pos: n,\n      box: o\n    } = e,\n    r = i.maxPadding;\n  if (!D(n)) {\n    e.size && (i[n] -= e.size);\n    const d = s[e.stack] || {\n      size: 0,\n      count: 1\n    };\n    d.size = Math.max(d.size, e.horizontal ? o.height : o.width), e.size = d.size / d.count, i[n] += e.size;\n  }\n  o.getPadding && $n(r, o.getPadding());\n  const a = Math.max(0, t.outerWidth - Os(r, i, \"left\", \"right\")),\n    l = Math.max(0, t.outerHeight - Os(r, i, \"top\", \"bottom\")),\n    c = a !== i.w,\n    h = l !== i.h;\n  return i.w = a, i.h = l, e.horizontal ? {\n    same: c,\n    other: h\n  } : {\n    same: h,\n    other: c\n  };\n}\nfunction Za(i) {\n  const t = i.maxPadding;\n  function e(s) {\n    const n = Math.max(t[s] - i[s], 0);\n    return i[s] += n, n;\n  }\n  i.y += e(\"top\"), i.x += e(\"left\"), e(\"right\"), e(\"bottom\");\n}\nfunction Ja(i, t) {\n  const e = t.maxPadding;\n  function s(n) {\n    const o = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    return n.forEach(r => {\n      o[r] = Math.max(t[r], e[r]);\n    }), o;\n  }\n  return s(i ? [\"left\", \"right\"] : [\"top\", \"bottom\"]);\n}\nfunction Jt(i, t, e, s) {\n  const n = [];\n  let o, r, a, l, c, h;\n  for (o = 0, r = i.length, c = 0; o < r; ++o) {\n    a = i[o], l = a.box, l.update(a.width || t.w, a.height || t.h, Ja(a.horizontal, t));\n    const {\n      same: d,\n      other: u\n    } = Ga(t, e, a, s);\n    c |= d && n.length, h = h || u, l.fullSize || n.push(a);\n  }\n  return c && Jt(n, t, e, s) || h;\n}\nfunction Te(i, t, e, s, n) {\n  i.top = e, i.left = t, i.right = t + s, i.bottom = e + n, i.width = s, i.height = n;\n}\nfunction As(i, t, e, s) {\n  const n = e.padding;\n  let {\n    x: o,\n    y: r\n  } = t;\n  for (const a of i) {\n    const l = a.box,\n      c = s[a.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      },\n      h = a.stackWeight / c.weight || 1;\n    if (a.horizontal) {\n      const d = t.w * h,\n        u = c.size || l.height;\n      et(c.start) && (r = c.start), l.fullSize ? Te(l, n.left, r, e.outerWidth - n.right - n.left, u) : Te(l, t.left + c.placed, r, d, u), c.start = r, c.placed += d, r = l.bottom;\n    } else {\n      const d = t.h * h,\n        u = c.size || l.width;\n      et(c.start) && (o = c.start), l.fullSize ? Te(l, o, n.top, u, e.outerHeight - n.bottom - n.top) : Te(l, o, t.top + c.placed, u, d), c.start = o, c.placed += d, o = l.right;\n    }\n  }\n  t.x = o, t.y = r;\n}\nO.set(\"layout\", {\n  autoPadding: !0,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar X = {\n  addBox(i, t) {\n    i.boxes || (i.boxes = []), t.fullSize = t.fullSize || !1, t.position = t.position || \"top\", t.weight = t.weight || 0, t._layers = t._layers || function () {\n      return [{\n        z: 0,\n        draw(e) {\n          t.draw(e);\n        }\n      }];\n    }, i.boxes.push(t);\n  },\n  removeBox(i, t) {\n    const e = i.boxes ? i.boxes.indexOf(t) : -1;\n    e !== -1 && i.boxes.splice(e, 1);\n  },\n  configure(i, t, e) {\n    t.fullSize = e.fullSize, t.position = e.position, t.weight = e.weight;\n  },\n  update(i, t, e, s) {\n    if (!i) return;\n    const n = K(i.options.layout.padding),\n      o = Math.max(t - n.width, 0),\n      r = Math.max(e - n.height, 0),\n      a = qa(i.boxes),\n      l = a.vertical,\n      c = a.horizontal;\n    E(i.boxes, p => {\n      typeof p.beforeLayout == \"function\" && p.beforeLayout();\n    });\n    const h = l.reduce((p, m) => m.box.options && m.box.options.display === !1 ? p : p + 1, 0) || 1,\n      d = Object.freeze({\n        outerWidth: t,\n        outerHeight: e,\n        padding: n,\n        availableWidth: o,\n        availableHeight: r,\n        vBoxMaxWidth: o / 2 / h,\n        hBoxMaxHeight: r / 2\n      }),\n      u = Object.assign({}, n);\n    $n(u, K(s));\n    const f = Object.assign({\n        maxPadding: u,\n        w: o,\n        h: r,\n        x: n.left,\n        y: n.top\n      }, n),\n      g = Ka(l.concat(c), d);\n    Jt(a.fullSize, f, d, g), Jt(l, f, d, g), Jt(c, f, d, g) && Jt(l, f, d, g), Za(f), As(a.leftAndTop, f, d, g), f.x += f.w, f.y += f.h, As(a.rightAndBottom, f, d, g), i.chartArea = {\n      left: f.left,\n      top: f.top,\n      right: f.left + f.w,\n      bottom: f.top + f.h,\n      height: f.h,\n      width: f.w\n    }, E(a.chartArea, p => {\n      const m = p.box;\n      Object.assign(m, i.chartArea), m.update(f.w, f.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nclass Hi {\n  acquireContext(t, e) {}\n  releaseContext(t) {\n    return !1;\n  }\n  addEventListener(t, e, s) {}\n  removeEventListener(t, e, s) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(t, e, s, n) {\n    return e = Math.max(0, e || t.width), s = s || t.height, {\n      width: e,\n      height: Math.max(0, n ? Math.floor(e / n) : s)\n    };\n  }\n  isAttached(t) {\n    return !0;\n  }\n  updateConfig(t) {}\n}\nclass Yn extends Hi {\n  acquireContext(t) {\n    return t && t.getContext && t.getContext(\"2d\") || null;\n  }\n  updateConfig(t) {\n    t.options.animation = !1;\n  }\n}\nconst Ie = \"$chartjs\",\n  Qa = {\n    touchstart: \"mousedown\",\n    touchmove: \"mousemove\",\n    touchend: \"mouseup\",\n    pointerenter: \"mouseenter\",\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointerleave: \"mouseout\",\n    pointerout: \"mouseout\"\n  },\n  Ts = i => i === null || i === \"\";\nfunction tl(i, t) {\n  const e = i.style,\n    s = i.getAttribute(\"height\"),\n    n = i.getAttribute(\"width\");\n  if (i[Ie] = {\n    initial: {\n      height: s,\n      width: n,\n      style: {\n        display: e.display,\n        height: e.height,\n        width: e.width\n      }\n    }\n  }, e.display = e.display || \"block\", e.boxSizing = e.boxSizing || \"border-box\", Ts(n)) {\n    const o = cs(i, \"width\");\n    o !== void 0 && (i.width = o);\n  }\n  if (Ts(s)) if (i.style.height === \"\") i.height = i.width / (t || 2);else {\n    const o = cs(i, \"height\");\n    o !== void 0 && (i.height = o);\n  }\n  return i;\n}\nconst Xn = Vr ? {\n  passive: !0\n} : !1;\nfunction el(i, t, e) {\n  i.addEventListener(t, e, Xn);\n}\nfunction il(i, t, e) {\n  i.canvas.removeEventListener(t, e, Xn);\n}\nfunction sl(i, t) {\n  const e = Qa[i.type] || i.type,\n    {\n      x: s,\n      y: n\n    } = Pt(i, t);\n  return {\n    type: e,\n    chart: t,\n    native: i,\n    x: s !== void 0 ? s : null,\n    y: n !== void 0 ? n : null\n  };\n}\nfunction je(i, t) {\n  for (const e of i) if (e === t || e.contains(t)) return !0;\n}\nfunction nl(i, t, e) {\n  const s = i.canvas,\n    n = new MutationObserver(o => {\n      let r = !1;\n      for (const a of o) r = r || je(a.addedNodes, s), r = r && !je(a.removedNodes, s);\n      r && e();\n    });\n  return n.observe(document, {\n    childList: !0,\n    subtree: !0\n  }), n;\n}\nfunction ol(i, t, e) {\n  const s = i.canvas,\n    n = new MutationObserver(o => {\n      let r = !1;\n      for (const a of o) r = r || je(a.removedNodes, s), r = r && !je(a.addedNodes, s);\n      r && e();\n    });\n  return n.observe(document, {\n    childList: !0,\n    subtree: !0\n  }), n;\n}\nconst le = /* @__PURE__ */new Map();\nlet Ls = 0;\nfunction Un() {\n  const i = window.devicePixelRatio;\n  i !== Ls && (Ls = i, le.forEach((t, e) => {\n    e.currentDevicePixelRatio !== i && t();\n  }));\n}\nfunction rl(i, t) {\n  le.size || window.addEventListener(\"resize\", Un), le.set(i, t);\n}\nfunction al(i) {\n  le.delete(i), le.size || window.removeEventListener(\"resize\", Un);\n}\nfunction ll(i, t, e) {\n  const s = i.canvas,\n    n = s && Wi(s);\n  if (!n) return;\n  const o = gn((a, l) => {\n      const c = n.clientWidth;\n      e(a, l), c < n.clientWidth && e();\n    }, window),\n    r = new ResizeObserver(a => {\n      const l = a[0],\n        c = l.contentRect.width,\n        h = l.contentRect.height;\n      c === 0 && h === 0 || o(c, h);\n    });\n  return r.observe(n), rl(i, o), r;\n}\nfunction fi(i, t, e) {\n  e && e.disconnect(), t === \"resize\" && al(i);\n}\nfunction cl(i, t, e) {\n  const s = i.canvas,\n    n = gn(o => {\n      i.ctx !== null && e(sl(o, i));\n    }, i, o => {\n      const r = o[0];\n      return [r, r.offsetX, r.offsetY];\n    });\n  return el(s, t, n), n;\n}\nclass Kn extends Hi {\n  acquireContext(t, e) {\n    const s = t && t.getContext && t.getContext(\"2d\");\n    return s && s.canvas === t ? (tl(t, e), s) : null;\n  }\n  releaseContext(t) {\n    const e = t.canvas;\n    if (!e[Ie]) return !1;\n    const s = e[Ie].initial;\n    [\"height\", \"width\"].forEach(o => {\n      const r = s[o];\n      T(r) ? e.removeAttribute(o) : e.setAttribute(o, r);\n    });\n    const n = s.style || {};\n    return Object.keys(n).forEach(o => {\n      e.style[o] = n[o];\n    }), e.width = e.width, delete e[Ie], !0;\n  }\n  addEventListener(t, e, s) {\n    this.removeEventListener(t, e);\n    const n = t.$proxies || (t.$proxies = {}),\n      r = {\n        attach: nl,\n        detach: ol,\n        resize: ll\n      }[e] || cl;\n    n[e] = r(t, e, s);\n  }\n  removeEventListener(t, e) {\n    const s = t.$proxies || (t.$proxies = {}),\n      n = s[e];\n    if (!n) return;\n    (({\n      attach: fi,\n      detach: fi,\n      resize: fi\n    })[e] || il)(t, e, n), s[e] = void 0;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(t, e, s, n) {\n    return Br(t, e, s, n);\n  }\n  isAttached(t) {\n    const e = Wi(t);\n    return !!(e && e.isConnected);\n  }\n}\nfunction qn(i) {\n  return !An() || typeof OffscreenCanvas < \"u\" && i instanceof OffscreenCanvas ? Yn : Kn;\n}\nclass hl {\n  constructor() {\n    this._init = [];\n  }\n  notify(t, e, s, n) {\n    e === \"beforeInit\" && (this._init = this._createDescriptors(t, !0), this._notify(this._init, t, \"install\"));\n    const o = n ? this._descriptors(t).filter(n) : this._descriptors(t),\n      r = this._notify(o, t, e, s);\n    return e === \"afterDestroy\" && (this._notify(o, t, \"stop\"), this._notify(this._init, t, \"uninstall\")), r;\n  }\n  _notify(t, e, s, n) {\n    n = n || {};\n    for (const o of t) {\n      const r = o.plugin,\n        a = r[s],\n        l = [e, n, o.options];\n      if (I(a, l, r) === !1 && n.cancelable) return !1;\n    }\n    return !0;\n  }\n  invalidate() {\n    T(this._cache) || (this._oldCache = this._cache, this._cache = void 0);\n  }\n  _descriptors(t) {\n    if (this._cache) return this._cache;\n    const e = this._cache = this._createDescriptors(t);\n    return this._notifyStateChanges(t), e;\n  }\n  _createDescriptors(t, e) {\n    const s = t && t.config,\n      n = C(s.options && s.options.plugins, {}),\n      o = dl(s);\n    return n === !1 && !e ? [] : fl(t, o, n, e);\n  }\n  _notifyStateChanges(t) {\n    const e = this._oldCache || [],\n      s = this._cache,\n      n = (o, r) => o.filter(a => !r.some(l => a.plugin.id === l.plugin.id));\n    this._notify(n(e, s), t, \"stop\"), this._notify(n(s, e), t, \"start\");\n  }\n}\nfunction dl(i) {\n  const t = {},\n    e = [],\n    s = Object.keys(ot.plugins.items);\n  for (let o = 0; o < s.length; o++) e.push(ot.getPlugin(s[o]));\n  const n = i.plugins || [];\n  for (let o = 0; o < n.length; o++) {\n    const r = n[o];\n    e.indexOf(r) === -1 && (e.push(r), t[r.id] = !0);\n  }\n  return {\n    plugins: e,\n    localIds: t\n  };\n}\nfunction ul(i, t) {\n  return !t && i === !1 ? null : i === !0 ? {} : i;\n}\nfunction fl(i, {\n  plugins: t,\n  localIds: e\n}, s, n) {\n  const o = [],\n    r = i.getContext();\n  for (const a of t) {\n    const l = a.id,\n      c = ul(s[l], n);\n    c !== null && o.push({\n      plugin: a,\n      options: gl(i.config, {\n        plugin: a,\n        local: e[l]\n      }, c, r)\n    });\n  }\n  return o;\n}\nfunction gl(i, {\n  plugin: t,\n  local: e\n}, s, n) {\n  const o = i.pluginScopeKeys(t),\n    r = i.getOptionScopes(s, o);\n  return e && t.defaults && r.push(t.defaults), i.createResolver(r, n, [\"\"], {\n    scriptable: !1,\n    indexable: !1,\n    allKeys: !0\n  });\n}\nfunction Mi(i, t) {\n  const e = O.datasets[i] || {};\n  return ((t.datasets || {})[i] || {}).indexAxis || t.indexAxis || e.indexAxis || \"x\";\n}\nfunction pl(i, t) {\n  let e = i;\n  return i === \"_index_\" ? e = t : i === \"_value_\" && (e = t === \"x\" ? \"y\" : \"x\"), e;\n}\nfunction ml(i, t) {\n  return i === t ? \"_index_\" : \"_value_\";\n}\nfunction bl(i) {\n  if (i === \"top\" || i === \"bottom\") return \"x\";\n  if (i === \"left\" || i === \"right\") return \"y\";\n}\nfunction ki(i, t) {\n  return i === \"x\" || i === \"y\" ? i : t.axis || bl(t.position) || i.charAt(0).toLowerCase();\n}\nfunction xl(i, t) {\n  const e = At[i.type] || {\n      scales: {}\n    },\n    s = t.scales || {},\n    n = Mi(i.type, t),\n    o = /* @__PURE__ */Object.create(null),\n    r = /* @__PURE__ */Object.create(null);\n  return Object.keys(s).forEach(a => {\n    const l = s[a];\n    if (!D(l)) return console.error(`Invalid scale configuration for scale: ${a}`);\n    if (l._proxy) return console.warn(`Ignoring resolver passed as options for scale: ${a}`);\n    const c = ki(a, l),\n      h = ml(c, n),\n      d = e.scales || {};\n    o[c] = o[c] || a, r[a] = Qt( /* @__PURE__ */Object.create(null), [{\n      axis: c\n    }, l, d[c], d[h]]);\n  }), i.data.datasets.forEach(a => {\n    const l = a.type || i.type,\n      c = a.indexAxis || Mi(l, t),\n      d = (At[l] || {}).scales || {};\n    Object.keys(d).forEach(u => {\n      const f = pl(u, c),\n        g = a[f + \"AxisID\"] || o[f] || f;\n      r[g] = r[g] || /* @__PURE__ */Object.create(null), Qt(r[g], [{\n        axis: f\n      }, s[g], d[u]]);\n    });\n  }), Object.keys(r).forEach(a => {\n    const l = r[a];\n    Qt(l, [O.scales[l.type], O.scale]);\n  }), r;\n}\nfunction Gn(i) {\n  const t = i.options || (i.options = {});\n  t.plugins = C(t.plugins, {}), t.scales = xl(i, t);\n}\nfunction Zn(i) {\n  return i = i || {}, i.datasets = i.datasets || [], i.labels = i.labels || [], i;\n}\nfunction _l(i) {\n  return i = i || {}, i.data = Zn(i.data), Gn(i), i;\n}\nconst Rs = /* @__PURE__ */new Map(),\n  Jn = /* @__PURE__ */new Set();\nfunction Le(i, t) {\n  let e = Rs.get(i);\n  return e || (e = t(), Rs.set(i, e), Jn.add(e)), e;\n}\nconst qt = (i, t, e) => {\n  const s = _t(t, e);\n  s !== void 0 && i.add(s);\n};\nclass yl {\n  constructor(t) {\n    this._config = _l(t), this._scopeCache = /* @__PURE__ */new Map(), this._resolverCache = /* @__PURE__ */new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(t) {\n    this._config.type = t;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(t) {\n    this._config.data = Zn(t);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(t) {\n    this._config.options = t;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const t = this._config;\n    this.clearCache(), Gn(t);\n  }\n  clearCache() {\n    this._scopeCache.clear(), this._resolverCache.clear();\n  }\n  datasetScopeKeys(t) {\n    return Le(t, () => [[`datasets.${t}`, \"\"]]);\n  }\n  datasetAnimationScopeKeys(t, e) {\n    return Le(`${t}.transition.${e}`, () => [[`datasets.${t}.transitions.${e}`, `transitions.${e}`], [`datasets.${t}`, \"\"]]);\n  }\n  datasetElementScopeKeys(t, e) {\n    return Le(`${t}-${e}`, () => [[`datasets.${t}.elements.${e}`, `datasets.${t}`, `elements.${e}`, \"\"]]);\n  }\n  pluginScopeKeys(t) {\n    const e = t.id,\n      s = this.type;\n    return Le(`${s}-plugin-${e}`, () => [[`plugins.${e}`, ...(t.additionalOptionScopes || [])]]);\n  }\n  _cachedScopes(t, e) {\n    const s = this._scopeCache;\n    let n = s.get(t);\n    return (!n || e) && (n = /* @__PURE__ */new Map(), s.set(t, n)), n;\n  }\n  getOptionScopes(t, e, s) {\n    const {\n        options: n,\n        type: o\n      } = this,\n      r = this._cachedScopes(t, s),\n      a = r.get(e);\n    if (a) return a;\n    const l = /* @__PURE__ */new Set();\n    e.forEach(h => {\n      t && (l.add(t), h.forEach(d => qt(l, t, d))), h.forEach(d => qt(l, n, d)), h.forEach(d => qt(l, At[o] || {}, d)), h.forEach(d => qt(l, O, d)), h.forEach(d => qt(l, _i, d));\n    });\n    const c = Array.from(l);\n    return c.length === 0 && c.push( /* @__PURE__ */Object.create(null)), Jn.has(e) && r.set(e, c), c;\n  }\n  chartOptionScopes() {\n    const {\n      options: t,\n      type: e\n    } = this;\n    return [t, At[e] || {}, O.datasets[e] || {}, {\n      type: e\n    }, O, _i];\n  }\n  resolveNamedOptions(t, e, s, n = [\"\"]) {\n    const o = {\n        $shared: !0\n      },\n      {\n        resolver: r,\n        subPrefixes: a\n      } = Es(this._resolverCache, t, n);\n    let l = r;\n    if (Ml(r, e)) {\n      o.$shared = !1, s = yt(s) ? s() : s;\n      const c = this.createResolver(t, s, a);\n      l = Vt(r, s, c);\n    }\n    for (const c of e) o[c] = l[c];\n    return o;\n  }\n  createResolver(t, e, s = [\"\"], n) {\n    const {\n      resolver: o\n    } = Es(this._resolverCache, t, s);\n    return D(e) ? Vt(o, e, void 0, n) : o;\n  }\n}\nfunction Es(i, t, e) {\n  let s = i.get(t);\n  s || (s = /* @__PURE__ */new Map(), i.set(t, s));\n  const n = e.join();\n  let o = s.get(n);\n  return o || (o = {\n    resolver: zi(t, e),\n    subPrefixes: e.filter(a => !a.toLowerCase().includes(\"hover\"))\n  }, s.set(n, o)), o;\n}\nconst vl = i => D(i) && Object.getOwnPropertyNames(i).reduce((t, e) => t || yt(i[e]), !1);\nfunction Ml(i, t) {\n  const {\n    isScriptable: e,\n    isIndexable: s\n  } = wn(i);\n  for (const n of t) {\n    const o = e(n),\n      r = s(n),\n      a = (r || o) && i[n];\n    if (o && (yt(a) || vl(a)) || r && z(a)) return !0;\n  }\n  return !1;\n}\nvar kl = \"3.9.1\";\nconst wl = [\"top\", \"bottom\", \"left\", \"right\", \"chartArea\"];\nfunction Fs(i, t) {\n  return i === \"top\" || i === \"bottom\" || wl.indexOf(i) === -1 && t === \"x\";\n}\nfunction Is(i, t) {\n  return function (e, s) {\n    return e[i] === s[i] ? e[t] - s[t] : e[i] - s[i];\n  };\n}\nfunction zs(i) {\n  const t = i.chart,\n    e = t.options.animation;\n  t.notifyPlugins(\"afterRender\"), I(e && e.onComplete, [i], t);\n}\nfunction Sl(i) {\n  const t = i.chart,\n    e = t.options.animation;\n  I(e && e.onProgress, [i], t);\n}\nfunction Qn(i) {\n  return An() && typeof i == \"string\" ? i = document.getElementById(i) : i && i.length && (i = i[0]), i && i.canvas && (i = i.canvas), i;\n}\nconst $e = {},\n  to = i => {\n    const t = Qn(i);\n    return Object.values($e).filter(e => e.canvas === t).pop();\n  };\nfunction Pl(i, t, e) {\n  const s = Object.keys(i);\n  for (const n of s) {\n    const o = +n;\n    if (o >= t) {\n      const r = i[n];\n      delete i[n], (e > 0 || o > t) && (i[o + e] = r);\n    }\n  }\n}\nfunction Cl(i, t, e, s) {\n  return !e || i.type === \"mouseout\" ? null : s ? t : i;\n}\nclass ji {\n  constructor(t, e) {\n    const s = this.config = new yl(e),\n      n = Qn(t),\n      o = to(n);\n    if (o) throw new Error(\"Canvas is already in use. Chart with ID '\" + o.id + \"' must be destroyed before the canvas with ID '\" + o.canvas.id + \"' can be reused.\");\n    const r = s.createResolver(s.chartOptionScopes(), this.getContext());\n    this.platform = new (s.platform || qn(n))(), this.platform.updateConfig(s);\n    const a = this.platform.acquireContext(n, r.aspectRatio),\n      l = a && a.canvas,\n      c = l && l.height,\n      h = l && l.width;\n    if (this.id = _o(), this.ctx = a, this.canvas = l, this.width = h, this.height = c, this._options = r, this._aspectRatio = this.aspectRatio, this._layers = [], this._metasets = [], this._stacks = void 0, this.boxes = [], this.currentDevicePixelRatio = void 0, this.chartArea = void 0, this._active = [], this._lastEvent = void 0, this._listeners = {}, this._responsiveListeners = void 0, this._sortedMetasets = [], this.scales = {}, this._plugins = new hl(), this.$proxies = {}, this._hiddenIndices = {}, this.attached = !1, this._animationsDisabled = void 0, this.$context = void 0, this._doResize = Fo(d => this.update(d), r.resizeDelay || 0), this._dataChanges = [], $e[this.id] = this, !a || !l) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    at.listen(this, \"complete\", zs), at.listen(this, \"progress\", Sl), this._initialize(), this.attached && this.update();\n  }\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio: t,\n        maintainAspectRatio: e\n      },\n      width: s,\n      height: n,\n      _aspectRatio: o\n    } = this;\n    return T(t) ? e && o ? o : n ? s / n : null : t;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(t) {\n    this.config.data = t;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(t) {\n    this.config.options = t;\n  }\n  _initialize() {\n    return this.notifyPlugins(\"beforeInit\"), this.options.responsive ? this.resize() : ls(this, this.options.devicePixelRatio), this.bindEvents(), this.notifyPlugins(\"afterInit\"), this;\n  }\n  clear() {\n    return os(this.canvas, this.ctx), this;\n  }\n  stop() {\n    return at.stop(this), this;\n  }\n  resize(t, e) {\n    at.running(this) ? this._resizeBeforeDraw = {\n      width: t,\n      height: e\n    } : this._resize(t, e);\n  }\n  _resize(t, e) {\n    const s = this.options,\n      n = this.canvas,\n      o = s.maintainAspectRatio && this.aspectRatio,\n      r = this.platform.getMaximumSize(n, t, e, o),\n      a = s.devicePixelRatio || this.platform.getDevicePixelRatio(),\n      l = this.width ? \"resize\" : \"attach\";\n    this.width = r.width, this.height = r.height, this._aspectRatio = this.aspectRatio, ls(this, a, !0) && (this.notifyPlugins(\"resize\", {\n      size: r\n    }), I(s.onResize, [this, r], this), this.attached && this._doResize(l) && this.render());\n  }\n  ensureScalesHaveIDs() {\n    const e = this.options.scales || {};\n    E(e, (s, n) => {\n      s.id = n;\n    });\n  }\n  buildOrUpdateScales() {\n    const t = this.options,\n      e = t.scales,\n      s = this.scales,\n      n = Object.keys(s).reduce((r, a) => (r[a] = !1, r), {});\n    let o = [];\n    e && (o = o.concat(Object.keys(e).map(r => {\n      const a = e[r],\n        l = ki(r, a),\n        c = l === \"r\",\n        h = l === \"x\";\n      return {\n        options: a,\n        dposition: c ? \"chartArea\" : h ? \"bottom\" : \"left\",\n        dtype: c ? \"radialLinear\" : h ? \"category\" : \"linear\"\n      };\n    }))), E(o, r => {\n      const a = r.options,\n        l = a.id,\n        c = ki(l, a),\n        h = C(a.type, r.dtype);\n      (a.position === void 0 || Fs(a.position, c) !== Fs(r.dposition)) && (a.position = r.dposition), n[l] = !0;\n      let d = null;\n      if (l in s && s[l].type === h) d = s[l];else {\n        const u = ot.getScale(h);\n        d = new u({\n          id: l,\n          type: h,\n          ctx: this.ctx,\n          chart: this\n        }), s[d.id] = d;\n      }\n      d.init(a, t);\n    }), E(n, (r, a) => {\n      r || delete s[a];\n    }), E(s, r => {\n      X.configure(this, r, r.options), X.addBox(this, r);\n    });\n  }\n  _updateMetasets() {\n    const t = this._metasets,\n      e = this.data.datasets.length,\n      s = t.length;\n    if (t.sort((n, o) => n.index - o.index), s > e) {\n      for (let n = e; n < s; ++n) this._destroyDatasetMeta(n);\n      t.splice(e, s - e);\n    }\n    this._sortedMetasets = t.slice(0).sort(Is(\"order\", \"index\"));\n  }\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: t,\n      data: {\n        datasets: e\n      }\n    } = this;\n    t.length > e.length && delete this._stacks, t.forEach((s, n) => {\n      e.filter(o => o === s._dataset).length === 0 && this._destroyDatasetMeta(n);\n    });\n  }\n  buildOrUpdateControllers() {\n    const t = [],\n      e = this.data.datasets;\n    let s, n;\n    for (this._removeUnreferencedMetasets(), s = 0, n = e.length; s < n; s++) {\n      const o = e[s];\n      let r = this.getDatasetMeta(s);\n      const a = o.type || this.config.type;\n      if (r.type && r.type !== a && (this._destroyDatasetMeta(s), r = this.getDatasetMeta(s)), r.type = a, r.indexAxis = o.indexAxis || Mi(a, this.options), r.order = o.order || 0, r.index = s, r.label = \"\" + o.label, r.visible = this.isDatasetVisible(s), r.controller) r.controller.updateIndex(s), r.controller.linkScales();else {\n        const l = ot.getController(a),\n          {\n            datasetElementType: c,\n            dataElementType: h\n          } = O.datasets[a];\n        Object.assign(l.prototype, {\n          dataElementType: ot.getElement(h),\n          datasetElementType: c && ot.getElement(c)\n        }), r.controller = new l(this, s), t.push(r.controller);\n      }\n    }\n    return this._updateMetasets(), t;\n  }\n  _resetElements() {\n    E(this.data.datasets, (t, e) => {\n      this.getDatasetMeta(e).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements(), this.notifyPlugins(\"reset\");\n  }\n  update(t) {\n    const e = this.config;\n    e.update();\n    const s = this._options = e.createResolver(e.chartOptionScopes(), this.getContext()),\n      n = this._animationsDisabled = !s.animation;\n    if (this._updateScales(), this._checkEventBindings(), this._updateHiddenIndices(), this._plugins.invalidate(), this.notifyPlugins(\"beforeUpdate\", {\n      mode: t,\n      cancelable: !0\n    }) === !1) return;\n    const o = this.buildOrUpdateControllers();\n    this.notifyPlugins(\"beforeElementsUpdate\");\n    let r = 0;\n    for (let c = 0, h = this.data.datasets.length; c < h; c++) {\n      const {\n          controller: d\n        } = this.getDatasetMeta(c),\n        u = !n && o.indexOf(d) === -1;\n      d.buildOrUpdateElements(u), r = Math.max(+d.getMaxOverflow(), r);\n    }\n    r = this._minPadding = s.layout.autoPadding ? r : 0, this._updateLayout(r), n || E(o, c => {\n      c.reset();\n    }), this._updateDatasets(t), this.notifyPlugins(\"afterUpdate\", {\n      mode: t\n    }), this._layers.sort(Is(\"z\", \"_idx\"));\n    const {\n      _active: a,\n      _lastEvent: l\n    } = this;\n    l ? this._eventHandler(l, !0) : a.length && this._updateHoverStyles(a, a, !0), this.render();\n  }\n  _updateScales() {\n    E(this.scales, t => {\n      X.removeBox(this, t);\n    }), this.ensureScalesHaveIDs(), this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const t = this.options,\n      e = new Set(Object.keys(this._listeners)),\n      s = new Set(t.events);\n    (!Ui(e, s) || !!this._responsiveListeners !== t.responsive) && (this.unbindEvents(), this.bindEvents());\n  }\n  _updateHiddenIndices() {\n    const {\n        _hiddenIndices: t\n      } = this,\n      e = this._getUniformDataChanges() || [];\n    for (const {\n      method: s,\n      start: n,\n      count: o\n    } of e) {\n      const r = s === \"_removeElements\" ? -o : o;\n      Pl(t, n, r);\n    }\n  }\n  _getUniformDataChanges() {\n    const t = this._dataChanges;\n    if (!t || !t.length) return;\n    this._dataChanges = [];\n    const e = this.data.datasets.length,\n      s = o => new Set(t.filter(r => r[0] === o).map((r, a) => a + \",\" + r.splice(1).join(\",\"))),\n      n = s(0);\n    for (let o = 1; o < e; o++) if (!Ui(n, s(o))) return;\n    return Array.from(n).map(o => o.split(\",\")).map(o => ({\n      method: o[1],\n      start: +o[2],\n      count: +o[3]\n    }));\n  }\n  _updateLayout(t) {\n    if (this.notifyPlugins(\"beforeLayout\", {\n      cancelable: !0\n    }) === !1) return;\n    X.update(this, this.width, this.height, t);\n    const e = this.chartArea,\n      s = e.width <= 0 || e.height <= 0;\n    this._layers = [], E(this.boxes, n => {\n      s && n.position === \"chartArea\" || (n.configure && n.configure(), this._layers.push(...n._layers()));\n    }, this), this._layers.forEach((n, o) => {\n      n._idx = o;\n    }), this.notifyPlugins(\"afterLayout\");\n  }\n  _updateDatasets(t) {\n    if (this.notifyPlugins(\"beforeDatasetsUpdate\", {\n      mode: t,\n      cancelable: !0\n    }) !== !1) {\n      for (let e = 0, s = this.data.datasets.length; e < s; ++e) this.getDatasetMeta(e).controller.configure();\n      for (let e = 0, s = this.data.datasets.length; e < s; ++e) this._updateDataset(e, yt(t) ? t({\n        datasetIndex: e\n      }) : t);\n      this.notifyPlugins(\"afterDatasetsUpdate\", {\n        mode: t\n      });\n    }\n  }\n  _updateDataset(t, e) {\n    const s = this.getDatasetMeta(t),\n      n = {\n        meta: s,\n        index: t,\n        mode: e,\n        cancelable: !0\n      };\n    this.notifyPlugins(\"beforeDatasetUpdate\", n) !== !1 && (s.controller._update(e), n.cancelable = !1, this.notifyPlugins(\"afterDatasetUpdate\", n));\n  }\n  render() {\n    this.notifyPlugins(\"beforeRender\", {\n      cancelable: !0\n    }) !== !1 && (at.has(this) ? this.attached && !at.running(this) && at.start(this) : (this.draw(), zs({\n      chart: this\n    })));\n  }\n  draw() {\n    let t;\n    if (this._resizeBeforeDraw) {\n      const {\n        width: s,\n        height: n\n      } = this._resizeBeforeDraw;\n      this._resize(s, n), this._resizeBeforeDraw = null;\n    }\n    if (this.clear(), this.width <= 0 || this.height <= 0 || this.notifyPlugins(\"beforeDraw\", {\n      cancelable: !0\n    }) === !1) return;\n    const e = this._layers;\n    for (t = 0; t < e.length && e[t].z <= 0; ++t) e[t].draw(this.chartArea);\n    for (this._drawDatasets(); t < e.length; ++t) e[t].draw(this.chartArea);\n    this.notifyPlugins(\"afterDraw\");\n  }\n  _getSortedDatasetMetas(t) {\n    const e = this._sortedMetasets,\n      s = [];\n    let n, o;\n    for (n = 0, o = e.length; n < o; ++n) {\n      const r = e[n];\n      (!t || r.visible) && s.push(r);\n    }\n    return s;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(!0);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins(\"beforeDatasetsDraw\", {\n      cancelable: !0\n    }) === !1) return;\n    const t = this.getSortedVisibleDatasetMetas();\n    for (let e = t.length - 1; e >= 0; --e) this._drawDataset(t[e]);\n    this.notifyPlugins(\"afterDatasetsDraw\");\n  }\n  _drawDataset(t) {\n    const e = this.ctx,\n      s = t._clip,\n      n = !s.disabled,\n      o = this.chartArea,\n      r = {\n        meta: t,\n        index: t.index,\n        cancelable: !0\n      };\n    this.notifyPlugins(\"beforeDatasetDraw\", r) !== !1 && (n && Xe(e, {\n      left: s.left === !1 ? 0 : o.left - s.left,\n      right: s.right === !1 ? this.width : o.right + s.right,\n      top: s.top === !1 ? 0 : o.top - s.top,\n      bottom: s.bottom === !1 ? this.height : o.bottom + s.bottom\n    }), t.controller.draw(), n && Ue(e), r.cancelable = !1, this.notifyPlugins(\"afterDatasetDraw\", r));\n  }\n  isPointInArea(t) {\n    return re(t, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(t, e, s, n) {\n    const o = Hn.modes[e];\n    return typeof o == \"function\" ? o(this, t, s, n) : [];\n  }\n  getDatasetMeta(t) {\n    const e = this.data.datasets[t],\n      s = this._metasets;\n    let n = s.filter(o => o && o._dataset === e).pop();\n    return n || (n = {\n      type: null,\n      data: [],\n      dataset: null,\n      controller: null,\n      hidden: null,\n      xAxisID: null,\n      yAxisID: null,\n      order: e && e.order || 0,\n      index: t,\n      _dataset: e,\n      _parsed: [],\n      _sorted: !1\n    }, s.push(n)), n;\n  }\n  getContext() {\n    return this.$context || (this.$context = vt(null, {\n      chart: this,\n      type: \"chart\"\n    }));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(t) {\n    const e = this.data.datasets[t];\n    if (!e) return !1;\n    const s = this.getDatasetMeta(t);\n    return typeof s.hidden == \"boolean\" ? !s.hidden : !e.hidden;\n  }\n  setDatasetVisibility(t, e) {\n    const s = this.getDatasetMeta(t);\n    s.hidden = !e;\n  }\n  toggleDataVisibility(t) {\n    this._hiddenIndices[t] = !this._hiddenIndices[t];\n  }\n  getDataVisibility(t) {\n    return !this._hiddenIndices[t];\n  }\n  _updateVisibility(t, e, s) {\n    const n = s ? \"show\" : \"hide\",\n      o = this.getDatasetMeta(t),\n      r = o.controller._resolveAnimations(void 0, n);\n    et(e) ? (o.data[e].hidden = !s, this.update()) : (this.setDatasetVisibility(t, s), r.update(o, {\n      visible: s\n    }), this.update(a => a.datasetIndex === t ? n : void 0));\n  }\n  hide(t, e) {\n    this._updateVisibility(t, e, !1);\n  }\n  show(t, e) {\n    this._updateVisibility(t, e, !0);\n  }\n  _destroyDatasetMeta(t) {\n    const e = this._metasets[t];\n    e && e.controller && e.controller._destroy(), delete this._metasets[t];\n  }\n  _stop() {\n    let t, e;\n    for (this.stop(), at.remove(this), t = 0, e = this.data.datasets.length; t < e; ++t) this._destroyDatasetMeta(t);\n  }\n  destroy() {\n    this.notifyPlugins(\"beforeDestroy\");\n    const {\n      canvas: t,\n      ctx: e\n    } = this;\n    this._stop(), this.config.clearCache(), t && (this.unbindEvents(), os(t, e), this.platform.releaseContext(e), this.canvas = null, this.ctx = null), this.notifyPlugins(\"destroy\"), delete $e[this.id], this.notifyPlugins(\"afterDestroy\");\n  }\n  toBase64Image(...t) {\n    return this.canvas.toDataURL(...t);\n  }\n  bindEvents() {\n    this.bindUserEvents(), this.options.responsive ? this.bindResponsiveEvents() : this.attached = !0;\n  }\n  bindUserEvents() {\n    const t = this._listeners,\n      e = this.platform,\n      s = (o, r) => {\n        e.addEventListener(this, o, r), t[o] = r;\n      },\n      n = (o, r, a) => {\n        o.offsetX = r, o.offsetY = a, this._eventHandler(o);\n      };\n    E(this.options.events, o => s(o, n));\n  }\n  bindResponsiveEvents() {\n    this._responsiveListeners || (this._responsiveListeners = {});\n    const t = this._responsiveListeners,\n      e = this.platform,\n      s = (l, c) => {\n        e.addEventListener(this, l, c), t[l] = c;\n      },\n      n = (l, c) => {\n        t[l] && (e.removeEventListener(this, l, c), delete t[l]);\n      },\n      o = (l, c) => {\n        this.canvas && this.resize(l, c);\n      };\n    let r;\n    const a = () => {\n      n(\"attach\", a), this.attached = !0, this.resize(), s(\"resize\", o), s(\"detach\", r);\n    };\n    r = () => {\n      this.attached = !1, n(\"resize\", o), this._stop(), this._resize(0, 0), s(\"attach\", a);\n    }, e.isAttached(this.canvas) ? a() : r();\n  }\n  unbindEvents() {\n    E(this._listeners, (t, e) => {\n      this.platform.removeEventListener(this, e, t);\n    }), this._listeners = {}, E(this._responsiveListeners, (t, e) => {\n      this.platform.removeEventListener(this, e, t);\n    }), this._responsiveListeners = void 0;\n  }\n  updateHoverStyle(t, e, s) {\n    const n = s ? \"set\" : \"remove\";\n    let o, r, a, l;\n    for (e === \"dataset\" && (o = this.getDatasetMeta(t[0].datasetIndex), o.controller[\"_\" + n + \"DatasetHoverStyle\"]()), a = 0, l = t.length; a < l; ++a) {\n      r = t[a];\n      const c = r && this.getDatasetMeta(r.datasetIndex).controller;\n      c && c[n + \"HoverStyle\"](r.element, r.datasetIndex, r.index);\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(t) {\n    const e = this._active || [],\n      s = t.map(({\n        datasetIndex: o,\n        index: r\n      }) => {\n        const a = this.getDatasetMeta(o);\n        if (!a) throw new Error(\"No dataset found at index \" + o);\n        return {\n          datasetIndex: o,\n          element: a.data[r],\n          index: r\n        };\n      });\n    !ze(s, e) && (this._active = s, this._lastEvent = null, this._updateHoverStyles(s, e));\n  }\n  notifyPlugins(t, e, s) {\n    return this._plugins.notify(this, t, e, s);\n  }\n  _updateHoverStyles(t, e, s) {\n    const n = this.options.hover,\n      o = (l, c) => l.filter(h => !c.some(d => h.datasetIndex === d.datasetIndex && h.index === d.index)),\n      r = o(e, t),\n      a = s ? t : o(t, e);\n    r.length && this.updateHoverStyle(r, n.mode, !1), a.length && n.mode && this.updateHoverStyle(a, n.mode, !0);\n  }\n  _eventHandler(t, e) {\n    const s = {\n        event: t,\n        replay: e,\n        cancelable: !0,\n        inChartArea: this.isPointInArea(t)\n      },\n      n = r => (r.options.events || this.options.events).includes(t.native.type);\n    if (this.notifyPlugins(\"beforeEvent\", s, n) === !1) return;\n    const o = this._handleEvent(t, e, s.inChartArea);\n    return s.cancelable = !1, this.notifyPlugins(\"afterEvent\", s, n), (o || s.changed) && this.render(), this;\n  }\n  _handleEvent(t, e, s) {\n    const {\n        _active: n = [],\n        options: o\n      } = this,\n      r = e,\n      a = this._getActiveElements(t, n, s, r),\n      l = So(t),\n      c = Cl(t, this._lastEvent, s, l);\n    s && (this._lastEvent = null, I(o.onHover, [t, a, this], this), l && I(o.onClick, [t, a, this], this));\n    const h = !ze(a, n);\n    return (h || e) && (this._active = a, this._updateHoverStyles(a, n, e)), this._lastEvent = c, h;\n  }\n  _getActiveElements(t, e, s, n) {\n    if (t.type === \"mouseout\") return [];\n    if (!s) return e;\n    const o = this.options.hover;\n    return this.getElementsAtEventForMode(t, o.mode, o, n);\n  }\n}\nconst Bs = () => E(ji.instances, i => i._plugins.invalidate()),\n  pt = !0;\nObject.defineProperties(ji, {\n  defaults: {\n    enumerable: pt,\n    value: O\n  },\n  instances: {\n    enumerable: pt,\n    value: $e\n  },\n  overrides: {\n    enumerable: pt,\n    value: At\n  },\n  registry: {\n    enumerable: pt,\n    value: ot\n  },\n  version: {\n    enumerable: pt,\n    value: kl\n  },\n  getChart: {\n    enumerable: pt,\n    value: to\n  },\n  register: {\n    enumerable: pt,\n    value: (...i) => {\n      ot.add(...i), Bs();\n    }\n  },\n  unregister: {\n    enumerable: pt,\n    value: (...i) => {\n      ot.remove(...i), Bs();\n    }\n  }\n});\nfunction eo(i, t, e) {\n  const {\n    startAngle: s,\n    pixelMargin: n,\n    x: o,\n    y: r,\n    outerRadius: a,\n    innerRadius: l\n  } = t;\n  let c = n / a;\n  i.beginPath(), i.arc(o, r, a, s - c, e + c), l > n ? (c = n / l, i.arc(o, r, l, e + c, s - c, !0)) : i.arc(o, r, n, e + V, s - V), i.closePath(), i.clip();\n}\nfunction Dl(i) {\n  return Ii(i, [\"outerStart\", \"outerEnd\", \"innerStart\", \"innerEnd\"]);\n}\nfunction Ol(i, t, e, s) {\n  const n = Dl(i.options.borderRadius),\n    o = (e - t) / 2,\n    r = Math.min(o, s * t / 2),\n    a = l => {\n      const c = (e - Math.min(o, l)) * s / 2;\n      return Y(l, 0, Math.min(o, c));\n    };\n  return {\n    outerStart: a(n.outerStart),\n    outerEnd: a(n.outerEnd),\n    innerStart: Y(n.innerStart, 0, r),\n    innerEnd: Y(n.innerEnd, 0, r)\n  };\n}\nfunction It(i, t, e, s) {\n  return {\n    x: e + i * Math.cos(t),\n    y: s + i * Math.sin(t)\n  };\n}\nfunction wi(i, t, e, s, n, o) {\n  const {\n      x: r,\n      y: a,\n      startAngle: l,\n      pixelMargin: c,\n      innerRadius: h\n    } = t,\n    d = Math.max(t.outerRadius + s + e - c, 0),\n    u = h > 0 ? h + s + e + c : 0;\n  let f = 0;\n  const g = n - l;\n  if (s) {\n    const P = h > 0 ? h - s : 0,\n      j = d > 0 ? d - s : 0,\n      W = (P + j) / 2,\n      kt = W !== 0 ? g * W / (W + s) : g;\n    f = (g - kt) / 2;\n  }\n  const p = Math.max(1e-3, g * d - e / B) / d,\n    m = (g - p) / 2,\n    b = l + m + f,\n    x = n - m - f,\n    {\n      outerStart: v,\n      outerEnd: y,\n      innerStart: _,\n      innerEnd: M\n    } = Ol(t, u, d, x - b),\n    k = d - v,\n    S = d - y,\n    w = b + v / k,\n    L = x - y / S,\n    R = u + _,\n    A = u + M,\n    H = b + _ / R,\n    q = x - M / A;\n  if (i.beginPath(), o) {\n    if (i.arc(r, a, d, w, L), y > 0) {\n      const W = It(S, L, r, a);\n      i.arc(W.x, W.y, y, L, x + V);\n    }\n    const P = It(A, x, r, a);\n    if (i.lineTo(P.x, P.y), M > 0) {\n      const W = It(A, q, r, a);\n      i.arc(W.x, W.y, M, x + V, q + Math.PI);\n    }\n    if (i.arc(r, a, u, x - M / u, b + _ / u, !0), _ > 0) {\n      const W = It(R, H, r, a);\n      i.arc(W.x, W.y, _, H + Math.PI, b - V);\n    }\n    const j = It(k, b, r, a);\n    if (i.lineTo(j.x, j.y), v > 0) {\n      const W = It(k, w, r, a);\n      i.arc(W.x, W.y, v, b - V, w);\n    }\n  } else {\n    i.moveTo(r, a);\n    const P = Math.cos(w) * d + r,\n      j = Math.sin(w) * d + a;\n    i.lineTo(P, j);\n    const W = Math.cos(L) * d + r,\n      kt = Math.sin(L) * d + a;\n    i.lineTo(W, kt);\n  }\n  i.closePath();\n}\nfunction Al(i, t, e, s, n) {\n  const {\n    fullCircles: o,\n    startAngle: r,\n    circumference: a\n  } = t;\n  let l = t.endAngle;\n  if (o) {\n    wi(i, t, e, s, r + F, n);\n    for (let c = 0; c < o; ++c) i.fill();\n    isNaN(a) || (l = r + a % F, a % F === 0 && (l += F));\n  }\n  return wi(i, t, e, s, l, n), i.fill(), l;\n}\nfunction Tl(i, t, e) {\n  const {\n      x: s,\n      y: n,\n      startAngle: o,\n      pixelMargin: r,\n      fullCircles: a\n    } = t,\n    l = Math.max(t.outerRadius - r, 0),\n    c = t.innerRadius + r;\n  let h;\n  for (e && eo(i, t, o + F), i.beginPath(), i.arc(s, n, c, o + F, o, !0), h = 0; h < a; ++h) i.stroke();\n  for (i.beginPath(), i.arc(s, n, l, o, o + F), h = 0; h < a; ++h) i.stroke();\n}\nfunction Ll(i, t, e, s, n, o) {\n  const {\n      options: r\n    } = t,\n    {\n      borderWidth: a,\n      borderJoinStyle: l\n    } = r,\n    c = r.borderAlign === \"inner\";\n  a && (c ? (i.lineWidth = a * 2, i.lineJoin = l || \"round\") : (i.lineWidth = a, i.lineJoin = l || \"bevel\"), t.fullCircles && Tl(i, t, c), c && eo(i, t, n), wi(i, t, e, s, n, o), i.stroke());\n}\nclass ye extends st {\n  constructor(t) {\n    super(), this.options = void 0, this.circumference = void 0, this.startAngle = void 0, this.endAngle = void 0, this.innerRadius = void 0, this.outerRadius = void 0, this.pixelMargin = 0, this.fullCircles = 0, t && Object.assign(this, t);\n  }\n  inRange(t, e, s) {\n    const n = this.getProps([\"x\", \"y\"], s),\n      {\n        angle: o,\n        distance: r\n      } = hn(n, {\n        x: t,\n        y: e\n      }),\n      {\n        startAngle: a,\n        endAngle: l,\n        innerRadius: c,\n        outerRadius: h,\n        circumference: d\n      } = this.getProps([\"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"circumference\"], s),\n      u = this.options.spacing / 2,\n      g = C(d, l - a) >= F || oe(o, a, l),\n      p = ut(r, c + u, h + u);\n    return g && p;\n  }\n  getCenterPoint(t) {\n    const {\n        x: e,\n        y: s,\n        startAngle: n,\n        endAngle: o,\n        innerRadius: r,\n        outerRadius: a\n      } = this.getProps([\"x\", \"y\", \"startAngle\", \"endAngle\", \"innerRadius\", \"outerRadius\", \"circumference\"], t),\n      {\n        offset: l,\n        spacing: c\n      } = this.options,\n      h = (n + o) / 2,\n      d = (r + a + c + l) / 2;\n    return {\n      x: e + Math.cos(h) * d,\n      y: s + Math.sin(h) * d\n    };\n  }\n  tooltipPosition(t) {\n    return this.getCenterPoint(t);\n  }\n  draw(t) {\n    const {\n        options: e,\n        circumference: s\n      } = this,\n      n = (e.offset || 0) / 2,\n      o = (e.spacing || 0) / 2,\n      r = e.circular;\n    if (this.pixelMargin = e.borderAlign === \"inner\" ? 0.33 : 0, this.fullCircles = s > F ? Math.floor(s / F) : 0, s === 0 || this.innerRadius < 0 || this.outerRadius < 0) return;\n    t.save();\n    let a = 0;\n    if (n) {\n      a = n / 2;\n      const c = (this.startAngle + this.endAngle) / 2;\n      t.translate(Math.cos(c) * a, Math.sin(c) * a), this.circumference >= B && (a = n);\n    }\n    t.fillStyle = e.backgroundColor, t.strokeStyle = e.borderColor;\n    const l = Al(t, this, a, o, r);\n    Ll(t, this, a, o, l, r), t.restore();\n  }\n}\nye.id = \"arc\";\nye.defaults = {\n  borderAlign: \"center\",\n  borderColor: \"#fff\",\n  borderJoinStyle: void 0,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: void 0,\n  circular: !0\n};\nye.defaultRoutes = {\n  backgroundColor: \"backgroundColor\"\n};\nfunction io(i, t, e = t) {\n  i.lineCap = C(e.borderCapStyle, t.borderCapStyle), i.setLineDash(C(e.borderDash, t.borderDash)), i.lineDashOffset = C(e.borderDashOffset, t.borderDashOffset), i.lineJoin = C(e.borderJoinStyle, t.borderJoinStyle), i.lineWidth = C(e.borderWidth, t.borderWidth), i.strokeStyle = C(e.borderColor, t.borderColor);\n}\nfunction Rl(i, t, e) {\n  i.lineTo(e.x, e.y);\n}\nfunction El(i) {\n  return i.stepped ? lr : i.tension || i.cubicInterpolationMode === \"monotone\" ? cr : Rl;\n}\nfunction so(i, t, e = {}) {\n  const s = i.length,\n    {\n      start: n = 0,\n      end: o = s - 1\n    } = e,\n    {\n      start: r,\n      end: a\n    } = t,\n    l = Math.max(n, r),\n    c = Math.min(o, a),\n    h = n < r && o < r || n > a && o > a;\n  return {\n    count: s,\n    start: l,\n    loop: t.loop,\n    ilen: c < l && !h ? s + c - l : c - l\n  };\n}\nfunction Fl(i, t, e, s) {\n  const {\n      points: n,\n      options: o\n    } = t,\n    {\n      count: r,\n      start: a,\n      loop: l,\n      ilen: c\n    } = so(n, e, s),\n    h = El(o);\n  let {\n      move: d = !0,\n      reverse: u\n    } = s || {},\n    f,\n    g,\n    p;\n  for (f = 0; f <= c; ++f) g = n[(a + (u ? c - f : f)) % r], !g.skip && (d ? (i.moveTo(g.x, g.y), d = !1) : h(i, p, g, u, o.stepped), p = g);\n  return l && (g = n[(a + (u ? c : 0)) % r], h(i, p, g, u, o.stepped)), !!l;\n}\nfunction Il(i, t, e, s) {\n  const n = t.points,\n    {\n      count: o,\n      start: r,\n      ilen: a\n    } = so(n, e, s),\n    {\n      move: l = !0,\n      reverse: c\n    } = s || {};\n  let h = 0,\n    d = 0,\n    u,\n    f,\n    g,\n    p,\n    m,\n    b;\n  const x = y => (r + (c ? a - y : y)) % o,\n    v = () => {\n      p !== m && (i.lineTo(h, m), i.lineTo(h, p), i.lineTo(h, b));\n    };\n  for (l && (f = n[x(0)], i.moveTo(f.x, f.y)), u = 0; u <= a; ++u) {\n    if (f = n[x(u)], f.skip) continue;\n    const y = f.x,\n      _ = f.y,\n      M = y | 0;\n    M === g ? (_ < p ? p = _ : _ > m && (m = _), h = (d * h + y) / ++d) : (v(), i.lineTo(y, _), g = M, d = 0, p = m = _), b = _;\n  }\n  v();\n}\nfunction Si(i) {\n  const t = i.options,\n    e = t.borderDash && t.borderDash.length;\n  return !i._decimated && !i._loop && !t.tension && t.cubicInterpolationMode !== \"monotone\" && !t.stepped && !e ? Il : Fl;\n}\nfunction zl(i) {\n  return i.stepped ? Wr : i.tension || i.cubicInterpolationMode === \"monotone\" ? Nr : Ct;\n}\nfunction Bl(i, t, e, s) {\n  let n = t._path;\n  n || (n = t._path = new Path2D(), t.path(n, e, s) && n.closePath()), io(i, t.options), i.stroke(n);\n}\nfunction Vl(i, t, e, s) {\n  const {\n      segments: n,\n      options: o\n    } = t,\n    r = Si(t);\n  for (const a of n) io(i, o, a.style), i.beginPath(), r(i, t, a, {\n    start: e,\n    end: e + s - 1\n  }) && i.closePath(), i.stroke();\n}\nconst Wl = typeof Path2D == \"function\";\nfunction Nl(i, t, e, s) {\n  Wl && !t.options.segment ? Bl(i, t, e, s) : Vl(i, t, e, s);\n}\nclass gt extends st {\n  constructor(t) {\n    super(), this.animated = !0, this.options = void 0, this._chart = void 0, this._loop = void 0, this._fullLoop = void 0, this._path = void 0, this._points = void 0, this._segments = void 0, this._decimated = !1, this._pointsUpdated = !1, this._datasetIndex = void 0, t && Object.assign(this, t);\n  }\n  updateControlPoints(t, e) {\n    const s = this.options;\n    if ((s.tension || s.cubicInterpolationMode === \"monotone\") && !s.stepped && !this._pointsUpdated) {\n      const n = s.spanGaps ? this._loop : this._fullLoop;\n      Lr(this._points, s, t, n, e), this._pointsUpdated = !0;\n    }\n  }\n  set points(t) {\n    this._points = t, delete this._segments, delete this._path, this._pointsUpdated = !1;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = Kr(this, this.options.segment));\n  }\n  first() {\n    const t = this.segments,\n      e = this.points;\n    return t.length && e[t[0].start];\n  }\n  last() {\n    const t = this.segments,\n      e = this.points,\n      s = t.length;\n    return s && e[t[s - 1].end];\n  }\n  interpolate(t, e) {\n    const s = this.options,\n      n = t[e],\n      o = this.points,\n      r = Fn(this, {\n        property: e,\n        start: n,\n        end: n\n      });\n    if (!r.length) return;\n    const a = [],\n      l = zl(s);\n    let c, h;\n    for (c = 0, h = r.length; c < h; ++c) {\n      const {\n          start: d,\n          end: u\n        } = r[c],\n        f = o[d],\n        g = o[u];\n      if (f === g) {\n        a.push(f);\n        continue;\n      }\n      const p = Math.abs((n - f[e]) / (g[e] - f[e])),\n        m = l(f, g, p, s.stepped);\n      m[e] = t[e], a.push(m);\n    }\n    return a.length === 1 ? a[0] : a;\n  }\n  pathSegment(t, e, s) {\n    return Si(this)(t, this, e, s);\n  }\n  path(t, e, s) {\n    const n = this.segments,\n      o = Si(this);\n    let r = this._loop;\n    e = e || 0, s = s || this.points.length - e;\n    for (const a of n) r &= o(t, this, a, {\n      start: e,\n      end: e + s - 1\n    });\n    return !!r;\n  }\n  draw(t, e, s, n) {\n    const o = this.options || {};\n    (this.points || []).length && o.borderWidth && (t.save(), Nl(t, this, s, n), t.restore()), this.animated && (this._pointsUpdated = !1, this._path = void 0);\n  }\n}\ngt.id = \"line\";\ngt.defaults = {\n  borderCapStyle: \"butt\",\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: \"miter\",\n  borderWidth: 3,\n  capBezierPoints: !0,\n  cubicInterpolationMode: \"default\",\n  fill: !1,\n  spanGaps: !1,\n  stepped: !1,\n  tension: 0\n};\ngt.defaultRoutes = {\n  backgroundColor: \"backgroundColor\",\n  borderColor: \"borderColor\"\n};\ngt.descriptors = {\n  _scriptable: !0,\n  _indexable: i => i !== \"borderDash\" && i !== \"fill\"\n};\nfunction Vs(i, t, e, s) {\n  const n = i.options,\n    {\n      [e]: o\n    } = i.getProps([e], s);\n  return Math.abs(t - o) < n.radius + n.hitRadius;\n}\nclass ve extends st {\n  constructor(t) {\n    super(), this.options = void 0, this.parsed = void 0, this.skip = void 0, this.stop = void 0, t && Object.assign(this, t);\n  }\n  inRange(t, e, s) {\n    const n = this.options,\n      {\n        x: o,\n        y: r\n      } = this.getProps([\"x\", \"y\"], s);\n    return Math.pow(t - o, 2) + Math.pow(e - r, 2) < Math.pow(n.hitRadius + n.radius, 2);\n  }\n  inXRange(t, e) {\n    return Vs(this, t, \"x\", e);\n  }\n  inYRange(t, e) {\n    return Vs(this, t, \"y\", e);\n  }\n  getCenterPoint(t) {\n    const {\n      x: e,\n      y: s\n    } = this.getProps([\"x\", \"y\"], t);\n    return {\n      x: e,\n      y: s\n    };\n  }\n  size(t) {\n    t = t || this.options || {};\n    let e = t.radius || 0;\n    e = Math.max(e, e && t.hoverRadius || 0);\n    const s = e && t.borderWidth || 0;\n    return (e + s) * 2;\n  }\n  draw(t, e) {\n    const s = this.options;\n    this.skip || s.radius < 0.1 || !re(this, e, this.size(s) / 2) || (t.strokeStyle = s.borderColor, t.lineWidth = s.borderWidth, t.fillStyle = s.backgroundColor, yi(t, s, this.x, this.y));\n  }\n  getRange() {\n    const t = this.options || {};\n    return t.radius + t.hitRadius;\n  }\n}\nve.id = \"point\";\nve.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: \"circle\",\n  radius: 3,\n  rotation: 0\n};\nve.defaultRoutes = {\n  backgroundColor: \"backgroundColor\",\n  borderColor: \"borderColor\"\n};\nfunction no(i, t) {\n  const {\n    x: e,\n    y: s,\n    base: n,\n    width: o,\n    height: r\n  } = i.getProps([\"x\", \"y\", \"base\", \"width\", \"height\"], t);\n  let a, l, c, h, d;\n  return i.horizontal ? (d = r / 2, a = Math.min(e, n), l = Math.max(e, n), c = s - d, h = s + d) : (d = o / 2, a = e - d, l = e + d, c = Math.min(s, n), h = Math.max(s, n)), {\n    left: a,\n    top: c,\n    right: l,\n    bottom: h\n  };\n}\nfunction bt(i, t, e, s) {\n  return i ? 0 : Y(t, e, s);\n}\nfunction Hl(i, t, e) {\n  const s = i.options.borderWidth,\n    n = i.borderSkipped,\n    o = kn(s);\n  return {\n    t: bt(n.top, o.top, 0, e),\n    r: bt(n.right, o.right, 0, t),\n    b: bt(n.bottom, o.bottom, 0, e),\n    l: bt(n.left, o.left, 0, t)\n  };\n}\nfunction jl(i, t, e) {\n  const {\n      enableBorderRadius: s\n    } = i.getProps([\"enableBorderRadius\"]),\n    n = i.options.borderRadius,\n    o = Dt(n),\n    r = Math.min(t, e),\n    a = i.borderSkipped,\n    l = s || D(n);\n  return {\n    topLeft: bt(!l || a.top || a.left, o.topLeft, 0, r),\n    topRight: bt(!l || a.top || a.right, o.topRight, 0, r),\n    bottomLeft: bt(!l || a.bottom || a.left, o.bottomLeft, 0, r),\n    bottomRight: bt(!l || a.bottom || a.right, o.bottomRight, 0, r)\n  };\n}\nfunction $l(i) {\n  const t = no(i),\n    e = t.right - t.left,\n    s = t.bottom - t.top,\n    n = Hl(i, e / 2, s / 2),\n    o = jl(i, e / 2, s / 2);\n  return {\n    outer: {\n      x: t.left,\n      y: t.top,\n      w: e,\n      h: s,\n      radius: o\n    },\n    inner: {\n      x: t.left + n.l,\n      y: t.top + n.t,\n      w: e - n.l - n.r,\n      h: s - n.t - n.b,\n      radius: {\n        topLeft: Math.max(0, o.topLeft - Math.max(n.t, n.l)),\n        topRight: Math.max(0, o.topRight - Math.max(n.t, n.r)),\n        bottomLeft: Math.max(0, o.bottomLeft - Math.max(n.b, n.l)),\n        bottomRight: Math.max(0, o.bottomRight - Math.max(n.b, n.r))\n      }\n    }\n  };\n}\nfunction gi(i, t, e, s) {\n  const n = t === null,\n    o = e === null,\n    a = i && !(n && o) && no(i, s);\n  return a && (n || ut(t, a.left, a.right)) && (o || ut(e, a.top, a.bottom));\n}\nfunction Yl(i) {\n  return i.topLeft || i.topRight || i.bottomLeft || i.bottomRight;\n}\nfunction Xl(i, t) {\n  i.rect(t.x, t.y, t.w, t.h);\n}\nfunction pi(i, t, e = {}) {\n  const s = i.x !== e.x ? -t : 0,\n    n = i.y !== e.y ? -t : 0,\n    o = (i.x + i.w !== e.x + e.w ? t : 0) - s,\n    r = (i.y + i.h !== e.y + e.h ? t : 0) - n;\n  return {\n    x: i.x + s,\n    y: i.y + n,\n    w: i.w + o,\n    h: i.h + r,\n    radius: i.radius\n  };\n}\nclass Me extends st {\n  constructor(t) {\n    super(), this.options = void 0, this.horizontal = void 0, this.base = void 0, this.width = void 0, this.height = void 0, this.inflateAmount = void 0, t && Object.assign(this, t);\n  }\n  draw(t) {\n    const {\n        inflateAmount: e,\n        options: {\n          borderColor: s,\n          backgroundColor: n\n        }\n      } = this,\n      {\n        inner: o,\n        outer: r\n      } = $l(this),\n      a = Yl(r.radius) ? ae : Xl;\n    t.save(), (r.w !== o.w || r.h !== o.h) && (t.beginPath(), a(t, pi(r, e, o)), t.clip(), a(t, pi(o, -e, r)), t.fillStyle = s, t.fill(\"evenodd\")), t.beginPath(), a(t, pi(o, e)), t.fillStyle = n, t.fill(), t.restore();\n  }\n  inRange(t, e, s) {\n    return gi(this, t, e, s);\n  }\n  inXRange(t, e) {\n    return gi(this, t, null, e);\n  }\n  inYRange(t, e) {\n    return gi(this, null, t, e);\n  }\n  getCenterPoint(t) {\n    const {\n      x: e,\n      y: s,\n      base: n,\n      horizontal: o\n    } = this.getProps([\"x\", \"y\", \"base\", \"horizontal\"], t);\n    return {\n      x: o ? (e + n) / 2 : e,\n      y: o ? s : (s + n) / 2\n    };\n  }\n  getRange(t) {\n    return t === \"x\" ? this.width / 2 : this.height / 2;\n  }\n}\nMe.id = \"bar\";\nMe.defaults = {\n  borderSkipped: \"start\",\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: \"auto\",\n  pointStyle: void 0\n};\nMe.defaultRoutes = {\n  backgroundColor: \"backgroundColor\",\n  borderColor: \"borderColor\"\n};\nvar oo = /* @__PURE__ */Object.freeze({\n  __proto__: null,\n  ArcElement: ye,\n  LineElement: gt,\n  PointElement: ve,\n  BarElement: Me\n});\nfunction Ul(i, t, e, s, n) {\n  const o = n.samples || s;\n  if (o >= e) return i.slice(t, t + e);\n  const r = [],\n    a = (e - 2) / (o - 2);\n  let l = 0;\n  const c = t + e - 1;\n  let h = t,\n    d,\n    u,\n    f,\n    g,\n    p;\n  for (r[l++] = i[h], d = 0; d < o - 2; d++) {\n    let m = 0,\n      b = 0,\n      x;\n    const v = Math.floor((d + 1) * a) + 1 + t,\n      y = Math.min(Math.floor((d + 2) * a) + 1, e) + t,\n      _ = y - v;\n    for (x = v; x < y; x++) m += i[x].x, b += i[x].y;\n    m /= _, b /= _;\n    const M = Math.floor(d * a) + 1 + t,\n      k = Math.min(Math.floor((d + 1) * a) + 1, e) + t,\n      {\n        x: S,\n        y: w\n      } = i[h];\n    for (f = g = -1, x = M; x < k; x++) g = 0.5 * Math.abs((S - m) * (i[x].y - w) - (S - i[x].x) * (b - w)), g > f && (f = g, u = i[x], p = x);\n    r[l++] = u, h = p;\n  }\n  return r[l++] = i[c], r;\n}\nfunction Kl(i, t, e, s) {\n  let n = 0,\n    o = 0,\n    r,\n    a,\n    l,\n    c,\n    h,\n    d,\n    u,\n    f,\n    g,\n    p;\n  const m = [],\n    b = t + e - 1,\n    x = i[t].x,\n    y = i[b].x - x;\n  for (r = t; r < t + e; ++r) {\n    a = i[r], l = (a.x - x) / y * s, c = a.y;\n    const _ = l | 0;\n    if (_ === h) c < g ? (g = c, d = r) : c > p && (p = c, u = r), n = (o * n + a.x) / ++o;else {\n      const M = r - 1;\n      if (!T(d) && !T(u)) {\n        const k = Math.min(d, u),\n          S = Math.max(d, u);\n        k !== f && k !== M && m.push({\n          ...i[k],\n          x: n\n        }), S !== f && S !== M && m.push({\n          ...i[S],\n          x: n\n        });\n      }\n      r > 0 && M !== f && m.push(i[M]), m.push(a), h = _, o = 0, g = p = c, d = u = f = r;\n    }\n  }\n  return m;\n}\nfunction ro(i) {\n  if (i._decimated) {\n    const t = i._data;\n    delete i._decimated, delete i._data, Object.defineProperty(i, \"data\", {\n      value: t\n    });\n  }\n}\nfunction Ws(i) {\n  i.data.datasets.forEach(t => {\n    ro(t);\n  });\n}\nfunction ql(i, t) {\n  const e = t.length;\n  let s = 0,\n    n;\n  const {\n      iScale: o\n    } = i,\n    {\n      min: r,\n      max: a,\n      minDefined: l,\n      maxDefined: c\n    } = o.getUserBounds();\n  return l && (s = Y(ft(t, o.axis, r).lo, 0, e - 1)), c ? n = Y(ft(t, o.axis, a).hi + 1, s, e) - s : n = e - s, {\n    start: s,\n    count: n\n  };\n}\nvar ao = {\n  id: \"decimation\",\n  defaults: {\n    algorithm: \"min-max\",\n    enabled: !1\n  },\n  beforeElementsUpdate: (i, t, e) => {\n    if (!e.enabled) {\n      Ws(i);\n      return;\n    }\n    const s = i.width;\n    i.data.datasets.forEach((n, o) => {\n      const {\n          _data: r,\n          indexAxis: a\n        } = n,\n        l = i.getDatasetMeta(o),\n        c = r || n.data;\n      if (Zt([a, i.options.indexAxis]) === \"y\" || !l.controller.supportsDecimation) return;\n      const h = i.scales[l.xAxisID];\n      if (h.type !== \"linear\" && h.type !== \"time\" || i.options.parsing) return;\n      let {\n        start: d,\n        count: u\n      } = ql(l, c);\n      const f = e.threshold || 4 * s;\n      if (u <= f) {\n        ro(n);\n        return;\n      }\n      T(r) && (n._data = c, delete n.data, Object.defineProperty(n, \"data\", {\n        configurable: !0,\n        enumerable: !0,\n        get: function () {\n          return this._decimated;\n        },\n        set: function (p) {\n          this._data = p;\n        }\n      }));\n      let g;\n      switch (e.algorithm) {\n        case \"lttb\":\n          g = Ul(c, d, u, s, e);\n          break;\n        case \"min-max\":\n          g = Kl(c, d, u, s);\n          break;\n        default:\n          throw new Error(`Unsupported decimation algorithm '${e.algorithm}'`);\n      }\n      n._decimated = g;\n    });\n  },\n  destroy(i) {\n    Ws(i);\n  }\n};\nfunction Gl(i, t, e) {\n  const s = i.segments,\n    n = i.points,\n    o = t.points,\n    r = [];\n  for (const a of s) {\n    let {\n      start: l,\n      end: c\n    } = a;\n    c = $i(l, c, n);\n    const h = Pi(e, n[l], n[c], a.loop);\n    if (!t.segments) {\n      r.push({\n        source: a,\n        target: h,\n        start: n[l],\n        end: n[c]\n      });\n      continue;\n    }\n    const d = Fn(t, h);\n    for (const u of d) {\n      const f = Pi(e, o[u.start], o[u.end], u.loop),\n        g = En(a, n, f);\n      for (const p of g) r.push({\n        source: p,\n        target: u,\n        start: {\n          [e]: Ns(h, f, \"start\", Math.max)\n        },\n        end: {\n          [e]: Ns(h, f, \"end\", Math.min)\n        }\n      });\n    }\n  }\n  return r;\n}\nfunction Pi(i, t, e, s) {\n  if (s) return;\n  let n = t[i],\n    o = e[i];\n  return i === \"angle\" && (n = Z(n), o = Z(o)), {\n    property: i,\n    start: n,\n    end: o\n  };\n}\nfunction Zl(i, t) {\n  const {\n      x: e = null,\n      y: s = null\n    } = i || {},\n    n = t.points,\n    o = [];\n  return t.segments.forEach(({\n    start: r,\n    end: a\n  }) => {\n    a = $i(r, a, n);\n    const l = n[r],\n      c = n[a];\n    s !== null ? (o.push({\n      x: l.x,\n      y: s\n    }), o.push({\n      x: c.x,\n      y: s\n    })) : e !== null && (o.push({\n      x: e,\n      y: l.y\n    }), o.push({\n      x: e,\n      y: c.y\n    }));\n  }), o;\n}\nfunction $i(i, t, e) {\n  for (; t > i; t--) {\n    const s = e[t];\n    if (!isNaN(s.x) && !isNaN(s.y)) break;\n  }\n  return t;\n}\nfunction Ns(i, t, e, s) {\n  return i && t ? s(i[e], t[e]) : i ? i[e] : t ? t[e] : 0;\n}\nfunction lo(i, t) {\n  let e = [],\n    s = !1;\n  return z(i) ? (s = !0, e = i) : e = Zl(i, t), e.length ? new gt({\n    points: e,\n    options: {\n      tension: 0\n    },\n    _loop: s,\n    _fullLoop: s\n  }) : null;\n}\nfunction Hs(i) {\n  return i && i.fill !== !1;\n}\nfunction Jl(i, t, e) {\n  let n = i[t].fill;\n  const o = [t];\n  let r;\n  if (!e) return n;\n  for (; n !== !1 && o.indexOf(n) === -1;) {\n    if (!N(n)) return n;\n    if (r = i[n], !r) return !1;\n    if (r.visible) return n;\n    o.push(n), n = r.fill;\n  }\n  return !1;\n}\nfunction Ql(i, t, e) {\n  const s = sc(i);\n  if (D(s)) return isNaN(s.value) ? !1 : s;\n  let n = parseFloat(s);\n  return N(n) && Math.floor(n) === n ? tc(s[0], t, n, e) : [\"origin\", \"start\", \"end\", \"stack\", \"shape\"].indexOf(s) >= 0 && s;\n}\nfunction tc(i, t, e, s) {\n  return (i === \"-\" || i === \"+\") && (e = t + e), e === t || e < 0 || e >= s ? !1 : e;\n}\nfunction ec(i, t) {\n  let e = null;\n  return i === \"start\" ? e = t.bottom : i === \"end\" ? e = t.top : D(i) ? e = t.getPixelForValue(i.value) : t.getBasePixel && (e = t.getBasePixel()), e;\n}\nfunction ic(i, t, e) {\n  let s;\n  return i === \"start\" ? s = e : i === \"end\" ? s = t.options.reverse ? t.min : t.max : D(i) ? s = i.value : s = t.getBaseValue(), s;\n}\nfunction sc(i) {\n  const t = i.options,\n    e = t.fill;\n  let s = C(e && e.target, e);\n  return s === void 0 && (s = !!t.backgroundColor), s === !1 || s === null ? !1 : s === !0 ? \"origin\" : s;\n}\nfunction nc(i) {\n  const {\n      scale: t,\n      index: e,\n      line: s\n    } = i,\n    n = [],\n    o = s.segments,\n    r = s.points,\n    a = oc(t, e);\n  a.push(lo({\n    x: null,\n    y: t.bottom\n  }, s));\n  for (let l = 0; l < o.length; l++) {\n    const c = o[l];\n    for (let h = c.start; h <= c.end; h++) rc(n, r[h], a);\n  }\n  return new gt({\n    points: n,\n    options: {}\n  });\n}\nfunction oc(i, t) {\n  const e = [],\n    s = i.getMatchingVisibleMetas(\"line\");\n  for (let n = 0; n < s.length; n++) {\n    const o = s[n];\n    if (o.index === t) break;\n    o.hidden || e.unshift(o.dataset);\n  }\n  return e;\n}\nfunction rc(i, t, e) {\n  const s = [];\n  for (let n = 0; n < e.length; n++) {\n    const o = e[n],\n      {\n        first: r,\n        last: a,\n        point: l\n      } = ac(o, t, \"x\");\n    if (!(!l || r && a)) {\n      if (r) s.unshift(l);else if (i.push(l), !a) break;\n    }\n  }\n  i.push(...s);\n}\nfunction ac(i, t, e) {\n  const s = i.interpolate(t, e);\n  if (!s) return {};\n  const n = s[e],\n    o = i.segments,\n    r = i.points;\n  let a = !1,\n    l = !1;\n  for (let c = 0; c < o.length; c++) {\n    const h = o[c],\n      d = r[h.start][e],\n      u = r[h.end][e];\n    if (ut(n, d, u)) {\n      a = n === d, l = n === u;\n      break;\n    }\n  }\n  return {\n    first: a,\n    last: l,\n    point: s\n  };\n}\nclass co {\n  constructor(t) {\n    this.x = t.x, this.y = t.y, this.radius = t.radius;\n  }\n  pathSegment(t, e, s) {\n    const {\n      x: n,\n      y: o,\n      radius: r\n    } = this;\n    return e = e || {\n      start: 0,\n      end: F\n    }, t.arc(n, o, r, e.end, e.start, !0), !s.bounds;\n  }\n  interpolate(t) {\n    const {\n        x: e,\n        y: s,\n        radius: n\n      } = this,\n      o = t.angle;\n    return {\n      x: e + Math.cos(o) * n,\n      y: s + Math.sin(o) * n,\n      angle: o\n    };\n  }\n}\nfunction lc(i) {\n  const {\n    chart: t,\n    fill: e,\n    line: s\n  } = i;\n  if (N(e)) return cc(t, e);\n  if (e === \"stack\") return nc(i);\n  if (e === \"shape\") return !0;\n  const n = hc(i);\n  return n instanceof co ? n : lo(n, s);\n}\nfunction cc(i, t) {\n  const e = i.getDatasetMeta(t);\n  return e && i.isDatasetVisible(t) ? e.dataset : null;\n}\nfunction hc(i) {\n  return (i.scale || {}).getPointPositionForValue ? uc(i) : dc(i);\n}\nfunction dc(i) {\n  const {\n      scale: t = {},\n      fill: e\n    } = i,\n    s = ec(e, t);\n  if (N(s)) {\n    const n = t.isHorizontal();\n    return {\n      x: n ? s : null,\n      y: n ? null : s\n    };\n  }\n  return null;\n}\nfunction uc(i) {\n  const {\n      scale: t,\n      fill: e\n    } = i,\n    s = t.options,\n    n = t.getLabels().length,\n    o = s.reverse ? t.max : t.min,\n    r = ic(e, t, o),\n    a = [];\n  if (s.grid.circular) {\n    const l = t.getPointPositionForValue(0, o);\n    return new co({\n      x: l.x,\n      y: l.y,\n      radius: t.getDistanceFromCenterForValue(r)\n    });\n  }\n  for (let l = 0; l < n; ++l) a.push(t.getPointPositionForValue(l, r));\n  return a;\n}\nfunction mi(i, t, e) {\n  const s = lc(t),\n    {\n      line: n,\n      scale: o,\n      axis: r\n    } = t,\n    a = n.options,\n    l = a.fill,\n    c = a.backgroundColor,\n    {\n      above: h = c,\n      below: d = c\n    } = l || {};\n  s && n.points.length && (Xe(i, e), fc(i, {\n    line: n,\n    target: s,\n    above: h,\n    below: d,\n    area: e,\n    scale: o,\n    axis: r\n  }), Ue(i));\n}\nfunction fc(i, t) {\n  const {\n      line: e,\n      target: s,\n      above: n,\n      below: o,\n      area: r,\n      scale: a\n    } = t,\n    l = e._loop ? \"angle\" : t.axis;\n  i.save(), l === \"x\" && o !== n && (js(i, s, r.top), $s(i, {\n    line: e,\n    target: s,\n    color: n,\n    scale: a,\n    property: l\n  }), i.restore(), i.save(), js(i, s, r.bottom)), $s(i, {\n    line: e,\n    target: s,\n    color: o,\n    scale: a,\n    property: l\n  }), i.restore();\n}\nfunction js(i, t, e) {\n  const {\n    segments: s,\n    points: n\n  } = t;\n  let o = !0,\n    r = !1;\n  i.beginPath();\n  for (const a of s) {\n    const {\n        start: l,\n        end: c\n      } = a,\n      h = n[l],\n      d = n[$i(l, c, n)];\n    o ? (i.moveTo(h.x, h.y), o = !1) : (i.lineTo(h.x, e), i.lineTo(h.x, h.y)), r = !!t.pathSegment(i, a, {\n      move: r\n    }), r ? i.closePath() : i.lineTo(d.x, e);\n  }\n  i.lineTo(t.first().x, e), i.closePath(), i.clip();\n}\nfunction $s(i, t) {\n  const {\n      line: e,\n      target: s,\n      property: n,\n      color: o,\n      scale: r\n    } = t,\n    a = Gl(e, s, n);\n  for (const {\n    source: l,\n    target: c,\n    start: h,\n    end: d\n  } of a) {\n    const {\n        style: {\n          backgroundColor: u = o\n        } = {}\n      } = l,\n      f = s !== !0;\n    i.save(), i.fillStyle = u, gc(i, r, f && Pi(n, h, d)), i.beginPath();\n    const g = !!e.pathSegment(i, l);\n    let p;\n    if (f) {\n      g ? i.closePath() : Ys(i, s, d, n);\n      const m = !!s.pathSegment(i, c, {\n        move: g,\n        reverse: !0\n      });\n      p = g && m, p || Ys(i, s, h, n);\n    }\n    i.closePath(), i.fill(p ? \"evenodd\" : \"nonzero\"), i.restore();\n  }\n}\nfunction gc(i, t, e) {\n  const {\n      top: s,\n      bottom: n\n    } = t.chart.chartArea,\n    {\n      property: o,\n      start: r,\n      end: a\n    } = e || {};\n  o === \"x\" && (i.beginPath(), i.rect(r, s, a - r, n - s), i.clip());\n}\nfunction Ys(i, t, e, s) {\n  const n = t.interpolate(e, s);\n  n && i.lineTo(n.x, n.y);\n}\nvar ho = {\n  id: \"filler\",\n  afterDatasetsUpdate(i, t, e) {\n    const s = (i.data.datasets || []).length,\n      n = [];\n    let o, r, a, l;\n    for (r = 0; r < s; ++r) o = i.getDatasetMeta(r), a = o.dataset, l = null, a && a.options && a instanceof gt && (l = {\n      visible: i.isDatasetVisible(r),\n      index: r,\n      fill: Ql(a, r, s),\n      chart: i,\n      axis: o.controller.options.indexAxis,\n      scale: o.vScale,\n      line: a\n    }), o.$filler = l, n.push(l);\n    for (r = 0; r < s; ++r) l = n[r], !(!l || l.fill === !1) && (l.fill = Jl(n, r, e.propagate));\n  },\n  beforeDraw(i, t, e) {\n    const s = e.drawTime === \"beforeDraw\",\n      n = i.getSortedVisibleDatasetMetas(),\n      o = i.chartArea;\n    for (let r = n.length - 1; r >= 0; --r) {\n      const a = n[r].$filler;\n      a && (a.line.updateControlPoints(o, a.axis), s && a.fill && mi(i.ctx, a, o));\n    }\n  },\n  beforeDatasetsDraw(i, t, e) {\n    if (e.drawTime !== \"beforeDatasetsDraw\") return;\n    const s = i.getSortedVisibleDatasetMetas();\n    for (let n = s.length - 1; n >= 0; --n) {\n      const o = s[n].$filler;\n      Hs(o) && mi(i.ctx, o, i.chartArea);\n    }\n  },\n  beforeDatasetDraw(i, t, e) {\n    const s = t.meta.$filler;\n    !Hs(s) || e.drawTime !== \"beforeDatasetDraw\" || mi(i.ctx, s, i.chartArea);\n  },\n  defaults: {\n    propagate: !0,\n    drawTime: \"beforeDatasetDraw\"\n  }\n};\nconst Xs = (i, t) => {\n    let {\n      boxHeight: e = t,\n      boxWidth: s = t\n    } = i;\n    return i.usePointStyle && (e = Math.min(e, t), s = i.pointStyleWidth || Math.min(s, t)), {\n      boxWidth: s,\n      boxHeight: e,\n      itemHeight: Math.max(t, e)\n    };\n  },\n  pc = (i, t) => i !== null && t !== null && i.datasetIndex === t.datasetIndex && i.index === t.index;\nclass Us extends st {\n  constructor(t) {\n    super(), this._added = !1, this.legendHitBoxes = [], this._hoveredItem = null, this.doughnutMode = !1, this.chart = t.chart, this.options = t.options, this.ctx = t.ctx, this.legendItems = void 0, this.columnSizes = void 0, this.lineWidths = void 0, this.maxHeight = void 0, this.maxWidth = void 0, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.height = void 0, this.width = void 0, this._margins = void 0, this.position = void 0, this.weight = void 0, this.fullSize = void 0;\n  }\n  update(t, e, s) {\n    this.maxWidth = t, this.maxHeight = e, this._margins = s, this.setDimensions(), this.buildLabels(), this.fit();\n  }\n  setDimensions() {\n    this.isHorizontal() ? (this.width = this.maxWidth, this.left = this._margins.left, this.right = this.width) : (this.height = this.maxHeight, this.top = this._margins.top, this.bottom = this.height);\n  }\n  buildLabels() {\n    const t = this.options.labels || {};\n    let e = I(t.generateLabels, [this.chart], this) || [];\n    t.filter && (e = e.filter(s => t.filter(s, this.chart.data))), t.sort && (e = e.sort((s, n) => t.sort(s, n, this.chart.data))), this.options.reverse && e.reverse(), this.legendItems = e;\n  }\n  fit() {\n    const {\n      options: t,\n      ctx: e\n    } = this;\n    if (!t.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const s = t.labels,\n      n = $(s.font),\n      o = n.size,\n      r = this._computeTitleHeight(),\n      {\n        boxWidth: a,\n        itemHeight: l\n      } = Xs(s, o);\n    let c, h;\n    e.font = n.string, this.isHorizontal() ? (c = this.maxWidth, h = this._fitRows(r, o, a, l) + 10) : (h = this.maxHeight, c = this._fitCols(r, o, a, l) + 10), this.width = Math.min(c, t.maxWidth || this.maxWidth), this.height = Math.min(h, t.maxHeight || this.maxHeight);\n  }\n  _fitRows(t, e, s, n) {\n    const {\n        ctx: o,\n        maxWidth: r,\n        options: {\n          labels: {\n            padding: a\n          }\n        }\n      } = this,\n      l = this.legendHitBoxes = [],\n      c = this.lineWidths = [0],\n      h = n + a;\n    let d = t;\n    o.textAlign = \"left\", o.textBaseline = \"middle\";\n    let u = -1,\n      f = -h;\n    return this.legendItems.forEach((g, p) => {\n      const m = s + e / 2 + o.measureText(g.text).width;\n      (p === 0 || c[c.length - 1] + m + 2 * a > r) && (d += h, c[c.length - (p > 0 ? 0 : 1)] = 0, f += h, u++), l[p] = {\n        left: 0,\n        top: f,\n        row: u,\n        width: m,\n        height: n\n      }, c[c.length - 1] += m + a;\n    }), d;\n  }\n  _fitCols(t, e, s, n) {\n    const {\n        ctx: o,\n        maxHeight: r,\n        options: {\n          labels: {\n            padding: a\n          }\n        }\n      } = this,\n      l = this.legendHitBoxes = [],\n      c = this.columnSizes = [],\n      h = r - t;\n    let d = a,\n      u = 0,\n      f = 0,\n      g = 0,\n      p = 0;\n    return this.legendItems.forEach((m, b) => {\n      const x = s + e / 2 + o.measureText(m.text).width;\n      b > 0 && f + n + 2 * a > h && (d += u + a, c.push({\n        width: u,\n        height: f\n      }), g += u + a, p++, u = f = 0), l[b] = {\n        left: g,\n        top: f,\n        col: p,\n        width: x,\n        height: n\n      }, u = Math.max(u, x), f += n + a;\n    }), d += u, c.push({\n      width: u,\n      height: f\n    }), d;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) return;\n    const t = this._computeTitleHeight(),\n      {\n        legendHitBoxes: e,\n        options: {\n          align: s,\n          labels: {\n            padding: n\n          },\n          rtl: o\n        }\n      } = this,\n      r = zt(o, this.left, this.width);\n    if (this.isHorizontal()) {\n      let a = 0,\n        l = U(s, this.left + n, this.right - this.lineWidths[a]);\n      for (const c of e) a !== c.row && (a = c.row, l = U(s, this.left + n, this.right - this.lineWidths[a])), c.top += this.top + t + n, c.left = r.leftForLtr(r.x(l), c.width), l += c.width + n;\n    } else {\n      let a = 0,\n        l = U(s, this.top + t + n, this.bottom - this.columnSizes[a].height);\n      for (const c of e) c.col !== a && (a = c.col, l = U(s, this.top + t + n, this.bottom - this.columnSizes[a].height)), c.top = l, c.left += this.left + n, c.left = r.leftForLtr(r.x(c.left), c.width), l += c.height + n;\n    }\n  }\n  isHorizontal() {\n    return this.options.position === \"top\" || this.options.position === \"bottom\";\n  }\n  draw() {\n    if (this.options.display) {\n      const t = this.ctx;\n      Xe(t, this), this._draw(), Ue(t);\n    }\n  }\n  _draw() {\n    const {\n        options: t,\n        columnSizes: e,\n        lineWidths: s,\n        ctx: n\n      } = this,\n      {\n        align: o,\n        labels: r\n      } = t,\n      a = O.color,\n      l = zt(t.rtl, this.left, this.width),\n      c = $(r.font),\n      {\n        color: h,\n        padding: d\n      } = r,\n      u = c.size,\n      f = u / 2;\n    let g;\n    this.drawTitle(), n.textAlign = l.textAlign(\"left\"), n.textBaseline = \"middle\", n.lineWidth = 0.5, n.font = c.string;\n    const {\n        boxWidth: p,\n        boxHeight: m,\n        itemHeight: b\n      } = Xs(r, u),\n      x = function (k, S, w) {\n        if (isNaN(p) || p <= 0 || isNaN(m) || m < 0) return;\n        n.save();\n        const L = C(w.lineWidth, 1);\n        if (n.fillStyle = C(w.fillStyle, a), n.lineCap = C(w.lineCap, \"butt\"), n.lineDashOffset = C(w.lineDashOffset, 0), n.lineJoin = C(w.lineJoin, \"miter\"), n.lineWidth = L, n.strokeStyle = C(w.strokeStyle, a), n.setLineDash(C(w.lineDash, [])), r.usePointStyle) {\n          const R = {\n              radius: m * Math.SQRT2 / 2,\n              pointStyle: w.pointStyle,\n              rotation: w.rotation,\n              borderWidth: L\n            },\n            A = l.xPlus(k, p / 2),\n            H = S + f;\n          Mn(n, R, A, H, r.pointStyleWidth && p);\n        } else {\n          const R = S + Math.max((u - m) / 2, 0),\n            A = l.leftForLtr(k, p),\n            H = Dt(w.borderRadius);\n          n.beginPath(), Object.values(H).some(q => q !== 0) ? ae(n, {\n            x: A,\n            y: R,\n            w: p,\n            h: m,\n            radius: H\n          }) : n.rect(A, R, p, m), n.fill(), L !== 0 && n.stroke();\n        }\n        n.restore();\n      },\n      v = function (k, S, w) {\n        Tt(n, w.text, k, S + b / 2, c, {\n          strikethrough: w.hidden,\n          textAlign: l.textAlign(w.textAlign)\n        });\n      },\n      y = this.isHorizontal(),\n      _ = this._computeTitleHeight();\n    y ? g = {\n      x: U(o, this.left + d, this.right - s[0]),\n      y: this.top + d + _,\n      line: 0\n    } : g = {\n      x: this.left + d,\n      y: U(o, this.top + _ + d, this.bottom - e[0].height),\n      line: 0\n    }, Tn(this.ctx, t.textDirection);\n    const M = b + d;\n    this.legendItems.forEach((k, S) => {\n      n.strokeStyle = k.fontColor || h, n.fillStyle = k.fontColor || h;\n      const w = n.measureText(k.text).width,\n        L = l.textAlign(k.textAlign || (k.textAlign = r.textAlign)),\n        R = p + f + w;\n      let A = g.x,\n        H = g.y;\n      l.setWidth(this.width), y ? S > 0 && A + R + d > this.right && (H = g.y += M, g.line++, A = g.x = U(o, this.left + d, this.right - s[g.line])) : S > 0 && H + M > this.bottom && (A = g.x = A + e[g.line].width + d, g.line++, H = g.y = U(o, this.top + _ + d, this.bottom - e[g.line].height));\n      const q = l.x(A);\n      x(q, H, k), A = Io(L, A + p + f, y ? A + R : this.right, t.rtl), v(l.x(A), H, k), y ? g.x += R + d : g.y += M;\n    }), Ln(this.ctx, t.textDirection);\n  }\n  drawTitle() {\n    const t = this.options,\n      e = t.title,\n      s = $(e.font),\n      n = K(e.padding);\n    if (!e.display) return;\n    const o = zt(t.rtl, this.left, this.width),\n      r = this.ctx,\n      a = e.position,\n      l = s.size / 2,\n      c = n.top + l;\n    let h,\n      d = this.left,\n      u = this.width;\n    if (this.isHorizontal()) u = Math.max(...this.lineWidths), h = this.top + c, d = U(t.align, d, this.right - u);else {\n      const g = this.columnSizes.reduce((p, m) => Math.max(p, m.height), 0);\n      h = c + U(t.align, this.top, this.bottom - g - t.labels.padding - this._computeTitleHeight());\n    }\n    const f = U(a, d, d + u);\n    r.textAlign = o.textAlign(Li(a)), r.textBaseline = \"middle\", r.strokeStyle = e.color, r.fillStyle = e.color, r.font = s.string, Tt(r, e.text, f, h, s);\n  }\n  _computeTitleHeight() {\n    const t = this.options.title,\n      e = $(t.font),\n      s = K(t.padding);\n    return t.display ? e.lineHeight + s.height : 0;\n  }\n  _getLegendItemAt(t, e) {\n    let s, n, o;\n    if (ut(t, this.left, this.right) && ut(e, this.top, this.bottom)) {\n      for (o = this.legendHitBoxes, s = 0; s < o.length; ++s) if (n = o[s], ut(t, n.left, n.left + n.width) && ut(e, n.top, n.top + n.height)) return this.legendItems[s];\n    }\n    return null;\n  }\n  handleEvent(t) {\n    const e = this.options;\n    if (!mc(t.type, e)) return;\n    const s = this._getLegendItemAt(t.x, t.y);\n    if (t.type === \"mousemove\" || t.type === \"mouseout\") {\n      const n = this._hoveredItem,\n        o = pc(n, s);\n      n && !o && I(e.onLeave, [t, n, this], this), this._hoveredItem = s, s && !o && I(e.onHover, [t, s, this], this);\n    } else s && I(e.onClick, [t, s, this], this);\n  }\n}\nfunction mc(i, t) {\n  return !!((i === \"mousemove\" || i === \"mouseout\") && (t.onHover || t.onLeave) || t.onClick && (i === \"click\" || i === \"mouseup\"));\n}\nvar uo = {\n  id: \"legend\",\n  _element: Us,\n  start(i, t, e) {\n    const s = i.legend = new Us({\n      ctx: i.ctx,\n      options: e,\n      chart: i\n    });\n    X.configure(i, s, e), X.addBox(i, s);\n  },\n  stop(i) {\n    X.removeBox(i, i.legend), delete i.legend;\n  },\n  beforeUpdate(i, t, e) {\n    const s = i.legend;\n    X.configure(i, s, e), s.options = e;\n  },\n  afterUpdate(i) {\n    const t = i.legend;\n    t.buildLabels(), t.adjustHitBoxes();\n  },\n  afterEvent(i, t) {\n    t.replay || i.legend.handleEvent(t.event);\n  },\n  defaults: {\n    display: !0,\n    position: \"top\",\n    align: \"center\",\n    fullSize: !0,\n    reverse: !1,\n    weight: 1e3,\n    onClick(i, t, e) {\n      const s = t.datasetIndex,\n        n = e.chart;\n      n.isDatasetVisible(s) ? (n.hide(s), t.hidden = !0) : (n.show(s), t.hidden = !1);\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: i => i.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(i) {\n        const t = i.data.datasets,\n          {\n            labels: {\n              usePointStyle: e,\n              pointStyle: s,\n              textAlign: n,\n              color: o\n            }\n          } = i.legend.options;\n        return i._getSortedDatasetMetas().map(r => {\n          const a = r.controller.getStyle(e ? 0 : void 0),\n            l = K(a.borderWidth);\n          return {\n            text: t[r.index].label,\n            fillStyle: a.backgroundColor,\n            fontColor: o,\n            hidden: !r.visible,\n            lineCap: a.borderCapStyle,\n            lineDash: a.borderDash,\n            lineDashOffset: a.borderDashOffset,\n            lineJoin: a.borderJoinStyle,\n            lineWidth: (l.width + l.height) / 4,\n            strokeStyle: a.borderColor,\n            pointStyle: s || a.pointStyle,\n            rotation: a.rotation,\n            textAlign: n || a.textAlign,\n            borderRadius: 0,\n            datasetIndex: r.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: i => i.chart.options.color,\n      display: !1,\n      position: \"center\",\n      text: \"\"\n    }\n  },\n  descriptors: {\n    _scriptable: i => !i.startsWith(\"on\"),\n    labels: {\n      _scriptable: i => ![\"generateLabels\", \"filter\", \"sort\"].includes(i)\n    }\n  }\n};\nclass Yi extends st {\n  constructor(t) {\n    super(), this.chart = t.chart, this.options = t.options, this.ctx = t.ctx, this._padding = void 0, this.top = void 0, this.bottom = void 0, this.left = void 0, this.right = void 0, this.width = void 0, this.height = void 0, this.position = void 0, this.weight = void 0, this.fullSize = void 0;\n  }\n  update(t, e) {\n    const s = this.options;\n    if (this.left = 0, this.top = 0, !s.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = t, this.height = this.bottom = e;\n    const n = z(s.text) ? s.text.length : 1;\n    this._padding = K(s.padding);\n    const o = n * $(s.font).lineHeight + this._padding.height;\n    this.isHorizontal() ? this.height = o : this.width = o;\n  }\n  isHorizontal() {\n    const t = this.options.position;\n    return t === \"top\" || t === \"bottom\";\n  }\n  _drawArgs(t) {\n    const {\n        top: e,\n        left: s,\n        bottom: n,\n        right: o,\n        options: r\n      } = this,\n      a = r.align;\n    let l = 0,\n      c,\n      h,\n      d;\n    return this.isHorizontal() ? (h = U(a, s, o), d = e + t, c = o - s) : (r.position === \"left\" ? (h = s + t, d = U(a, n, e), l = B * -0.5) : (h = o - t, d = U(a, e, n), l = B * 0.5), c = n - e), {\n      titleX: h,\n      titleY: d,\n      maxWidth: c,\n      rotation: l\n    };\n  }\n  draw() {\n    const t = this.ctx,\n      e = this.options;\n    if (!e.display) return;\n    const s = $(e.font),\n      o = s.lineHeight / 2 + this._padding.top,\n      {\n        titleX: r,\n        titleY: a,\n        maxWidth: l,\n        rotation: c\n      } = this._drawArgs(o);\n    Tt(t, e.text, 0, 0, s, {\n      color: e.color,\n      maxWidth: l,\n      rotation: c,\n      textAlign: Li(e.align),\n      textBaseline: \"middle\",\n      translation: [r, a]\n    });\n  }\n}\nfunction bc(i, t) {\n  const e = new Yi({\n    ctx: i.ctx,\n    options: t,\n    chart: i\n  });\n  X.configure(i, e, t), X.addBox(i, e), i.titleBlock = e;\n}\nvar fo = {\n  id: \"title\",\n  _element: Yi,\n  start(i, t, e) {\n    bc(i, e);\n  },\n  stop(i) {\n    const t = i.titleBlock;\n    X.removeBox(i, t), delete i.titleBlock;\n  },\n  beforeUpdate(i, t, e) {\n    const s = i.titleBlock;\n    X.configure(i, s, e), s.options = e;\n  },\n  defaults: {\n    align: \"center\",\n    display: !1,\n    font: {\n      weight: \"bold\"\n    },\n    fullSize: !0,\n    padding: 10,\n    position: \"top\",\n    text: \"\",\n    weight: 2e3\n  },\n  defaultRoutes: {\n    color: \"color\"\n  },\n  descriptors: {\n    _scriptable: !0,\n    _indexable: !1\n  }\n};\nconst Re = /* @__PURE__ */new WeakMap();\nvar go = {\n  id: \"subtitle\",\n  start(i, t, e) {\n    const s = new Yi({\n      ctx: i.ctx,\n      options: e,\n      chart: i\n    });\n    X.configure(i, s, e), X.addBox(i, s), Re.set(i, s);\n  },\n  stop(i) {\n    X.removeBox(i, Re.get(i)), Re.delete(i);\n  },\n  beforeUpdate(i, t, e) {\n    const s = Re.get(i);\n    X.configure(i, s, e), s.options = e;\n  },\n  defaults: {\n    align: \"center\",\n    display: !1,\n    font: {\n      weight: \"normal\"\n    },\n    fullSize: !0,\n    padding: 0,\n    position: \"top\",\n    text: \"\",\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: \"color\"\n  },\n  descriptors: {\n    _scriptable: !0,\n    _indexable: !1\n  }\n};\nconst se = {\n  average(i) {\n    if (!i.length) return !1;\n    let t,\n      e,\n      s = 0,\n      n = 0,\n      o = 0;\n    for (t = 0, e = i.length; t < e; ++t) {\n      const r = i[t].element;\n      if (r && r.hasValue()) {\n        const a = r.tooltipPosition();\n        s += a.x, n += a.y, ++o;\n      }\n    }\n    return {\n      x: s / o,\n      y: n / o\n    };\n  },\n  nearest(i, t) {\n    if (!i.length) return !1;\n    let e = t.x,\n      s = t.y,\n      n = Number.POSITIVE_INFINITY,\n      o,\n      r,\n      a;\n    for (o = 0, r = i.length; o < r; ++o) {\n      const l = i[o].element;\n      if (l && l.hasValue()) {\n        const c = l.getCenterPoint(),\n          h = bi(t, c);\n        h < n && (n = h, a = l);\n      }\n    }\n    if (a) {\n      const l = a.tooltipPosition();\n      e = l.x, s = l.y;\n    }\n    return {\n      x: e,\n      y: s\n    };\n  }\n};\nfunction rt(i, t) {\n  return t && (z(t) ? Array.prototype.push.apply(i, t) : i.push(t)), i;\n}\nfunction ht(i) {\n  return (typeof i == \"string\" || i instanceof String) && i.indexOf(`\n`) > -1 ? i.split(`\n`) : i;\n}\nfunction xc(i, t) {\n  const {\n      element: e,\n      datasetIndex: s,\n      index: n\n    } = t,\n    o = i.getDatasetMeta(s).controller,\n    {\n      label: r,\n      value: a\n    } = o.getLabelAndValue(n);\n  return {\n    chart: i,\n    label: r,\n    parsed: o.getParsed(n),\n    raw: i.data.datasets[s].data[n],\n    formattedValue: a,\n    dataset: o.getDataset(),\n    dataIndex: n,\n    datasetIndex: s,\n    element: e\n  };\n}\nfunction Ks(i, t) {\n  const e = i.chart.ctx,\n    {\n      body: s,\n      footer: n,\n      title: o\n    } = i,\n    {\n      boxWidth: r,\n      boxHeight: a\n    } = t,\n    l = $(t.bodyFont),\n    c = $(t.titleFont),\n    h = $(t.footerFont),\n    d = o.length,\n    u = n.length,\n    f = s.length,\n    g = K(t.padding);\n  let p = g.height,\n    m = 0,\n    b = s.reduce((y, _) => y + _.before.length + _.lines.length + _.after.length, 0);\n  if (b += i.beforeBody.length + i.afterBody.length, d && (p += d * c.lineHeight + (d - 1) * t.titleSpacing + t.titleMarginBottom), b) {\n    const y = t.displayColors ? Math.max(a, l.lineHeight) : l.lineHeight;\n    p += f * y + (b - f) * l.lineHeight + (b - 1) * t.bodySpacing;\n  }\n  u && (p += t.footerMarginTop + u * h.lineHeight + (u - 1) * t.footerSpacing);\n  let x = 0;\n  const v = function (y) {\n    m = Math.max(m, e.measureText(y).width + x);\n  };\n  return e.save(), e.font = c.string, E(i.title, v), e.font = l.string, E(i.beforeBody.concat(i.afterBody), v), x = t.displayColors ? r + 2 + t.boxPadding : 0, E(s, y => {\n    E(y.before, v), E(y.lines, v), E(y.after, v);\n  }), x = 0, e.font = h.string, E(i.footer, v), e.restore(), m += g.width, {\n    width: m,\n    height: p\n  };\n}\nfunction _c(i, t) {\n  const {\n    y: e,\n    height: s\n  } = t;\n  return e < s / 2 ? \"top\" : e > i.height - s / 2 ? \"bottom\" : \"center\";\n}\nfunction yc(i, t, e, s) {\n  const {\n      x: n,\n      width: o\n    } = s,\n    r = e.caretSize + e.caretPadding;\n  if (i === \"left\" && n + o + r > t.width || i === \"right\" && n - o - r < 0) return !0;\n}\nfunction vc(i, t, e, s) {\n  const {\n      x: n,\n      width: o\n    } = e,\n    {\n      width: r,\n      chartArea: {\n        left: a,\n        right: l\n      }\n    } = i;\n  let c = \"center\";\n  return s === \"center\" ? c = n <= (a + l) / 2 ? \"left\" : \"right\" : n <= o / 2 ? c = \"left\" : n >= r - o / 2 && (c = \"right\"), yc(c, i, t, e) && (c = \"center\"), c;\n}\nfunction qs(i, t, e) {\n  const s = e.yAlign || t.yAlign || _c(i, e);\n  return {\n    xAlign: e.xAlign || t.xAlign || vc(i, t, e, s),\n    yAlign: s\n  };\n}\nfunction Mc(i, t) {\n  let {\n    x: e,\n    width: s\n  } = i;\n  return t === \"right\" ? e -= s : t === \"center\" && (e -= s / 2), e;\n}\nfunction kc(i, t, e) {\n  let {\n    y: s,\n    height: n\n  } = i;\n  return t === \"top\" ? s += e : t === \"bottom\" ? s -= n + e : s -= n / 2, s;\n}\nfunction Gs(i, t, e, s) {\n  const {\n      caretSize: n,\n      caretPadding: o,\n      cornerRadius: r\n    } = i,\n    {\n      xAlign: a,\n      yAlign: l\n    } = e,\n    c = n + o,\n    {\n      topLeft: h,\n      topRight: d,\n      bottomLeft: u,\n      bottomRight: f\n    } = Dt(r);\n  let g = Mc(t, a);\n  const p = kc(t, l, c);\n  return l === \"center\" ? a === \"left\" ? g += c : a === \"right\" && (g -= c) : a === \"left\" ? g -= Math.max(h, u) + n : a === \"right\" && (g += Math.max(d, f) + n), {\n    x: Y(g, 0, s.width - t.width),\n    y: Y(p, 0, s.height - t.height)\n  };\n}\nfunction Ee(i, t, e) {\n  const s = K(e.padding);\n  return t === \"center\" ? i.x + i.width / 2 : t === \"right\" ? i.x + i.width - s.right : i.x + s.left;\n}\nfunction Zs(i) {\n  return rt([], ht(i));\n}\nfunction wc(i, t, e) {\n  return vt(i, {\n    tooltip: t,\n    tooltipItems: e,\n    type: \"tooltip\"\n  });\n}\nfunction Js(i, t) {\n  const e = t && t.dataset && t.dataset.tooltip && t.dataset.tooltip.callbacks;\n  return e ? i.override(e) : i;\n}\nclass Ci extends st {\n  constructor(t) {\n    super(), this.opacity = 0, this._active = [], this._eventPosition = void 0, this._size = void 0, this._cachedAnimations = void 0, this._tooltipItems = [], this.$animations = void 0, this.$context = void 0, this.chart = t.chart || t._chart, this._chart = this.chart, this.options = t.options, this.dataPoints = void 0, this.title = void 0, this.beforeBody = void 0, this.body = void 0, this.afterBody = void 0, this.footer = void 0, this.xAlign = void 0, this.yAlign = void 0, this.x = void 0, this.y = void 0, this.height = void 0, this.width = void 0, this.caretX = void 0, this.caretY = void 0, this.labelColors = void 0, this.labelPointStyles = void 0, this.labelTextColors = void 0;\n  }\n  initialize(t) {\n    this.options = t, this._cachedAnimations = void 0, this.$context = void 0;\n  }\n  _resolveAnimations() {\n    const t = this._cachedAnimations;\n    if (t) return t;\n    const e = this.chart,\n      s = this.options.setContext(this.getContext()),\n      n = s.enabled && e.options.animation && s.animations,\n      o = new Ni(this.chart, n);\n    return n._cacheable && (this._cachedAnimations = Object.freeze(o)), o;\n  }\n  getContext() {\n    return this.$context || (this.$context = wc(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(t, e) {\n    const {\n        callbacks: s\n      } = e,\n      n = s.beforeTitle.apply(this, [t]),\n      o = s.title.apply(this, [t]),\n      r = s.afterTitle.apply(this, [t]);\n    let a = [];\n    return a = rt(a, ht(n)), a = rt(a, ht(o)), a = rt(a, ht(r)), a;\n  }\n  getBeforeBody(t, e) {\n    return Zs(e.callbacks.beforeBody.apply(this, [t]));\n  }\n  getBody(t, e) {\n    const {\n        callbacks: s\n      } = e,\n      n = [];\n    return E(t, o => {\n      const r = {\n          before: [],\n          lines: [],\n          after: []\n        },\n        a = Js(s, o);\n      rt(r.before, ht(a.beforeLabel.call(this, o))), rt(r.lines, a.label.call(this, o)), rt(r.after, ht(a.afterLabel.call(this, o))), n.push(r);\n    }), n;\n  }\n  getAfterBody(t, e) {\n    return Zs(e.callbacks.afterBody.apply(this, [t]));\n  }\n  getFooter(t, e) {\n    const {\n        callbacks: s\n      } = e,\n      n = s.beforeFooter.apply(this, [t]),\n      o = s.footer.apply(this, [t]),\n      r = s.afterFooter.apply(this, [t]);\n    let a = [];\n    return a = rt(a, ht(n)), a = rt(a, ht(o)), a = rt(a, ht(r)), a;\n  }\n  _createItems(t) {\n    const e = this._active,\n      s = this.chart.data,\n      n = [],\n      o = [],\n      r = [];\n    let a = [],\n      l,\n      c;\n    for (l = 0, c = e.length; l < c; ++l) a.push(xc(this.chart, e[l]));\n    return t.filter && (a = a.filter((h, d, u) => t.filter(h, d, u, s))), t.itemSort && (a = a.sort((h, d) => t.itemSort(h, d, s))), E(a, h => {\n      const d = Js(t.callbacks, h);\n      n.push(d.labelColor.call(this, h)), o.push(d.labelPointStyle.call(this, h)), r.push(d.labelTextColor.call(this, h));\n    }), this.labelColors = n, this.labelPointStyles = o, this.labelTextColors = r, this.dataPoints = a, a;\n  }\n  update(t, e) {\n    const s = this.options.setContext(this.getContext()),\n      n = this._active;\n    let o,\n      r = [];\n    if (!n.length) this.opacity !== 0 && (o = {\n      opacity: 0\n    });else {\n      const a = se[s.position].call(this, n, this._eventPosition);\n      r = this._createItems(s), this.title = this.getTitle(r, s), this.beforeBody = this.getBeforeBody(r, s), this.body = this.getBody(r, s), this.afterBody = this.getAfterBody(r, s), this.footer = this.getFooter(r, s);\n      const l = this._size = Ks(this, s),\n        c = Object.assign({}, a, l),\n        h = qs(this.chart, s, c),\n        d = Gs(s, c, h, this.chart);\n      this.xAlign = h.xAlign, this.yAlign = h.yAlign, o = {\n        opacity: 1,\n        x: d.x,\n        y: d.y,\n        width: l.width,\n        height: l.height,\n        caretX: a.x,\n        caretY: a.y\n      };\n    }\n    this._tooltipItems = r, this.$context = void 0, o && this._resolveAnimations().update(this, o), t && s.external && s.external.call(this, {\n      chart: this.chart,\n      tooltip: this,\n      replay: e\n    });\n  }\n  drawCaret(t, e, s, n) {\n    const o = this.getCaretPosition(t, s, n);\n    e.lineTo(o.x1, o.y1), e.lineTo(o.x2, o.y2), e.lineTo(o.x3, o.y3);\n  }\n  getCaretPosition(t, e, s) {\n    const {\n        xAlign: n,\n        yAlign: o\n      } = this,\n      {\n        caretSize: r,\n        cornerRadius: a\n      } = s,\n      {\n        topLeft: l,\n        topRight: c,\n        bottomLeft: h,\n        bottomRight: d\n      } = Dt(a),\n      {\n        x: u,\n        y: f\n      } = t,\n      {\n        width: g,\n        height: p\n      } = e;\n    let m, b, x, v, y, _;\n    return o === \"center\" ? (y = f + p / 2, n === \"left\" ? (m = u, b = m - r, v = y + r, _ = y - r) : (m = u + g, b = m + r, v = y - r, _ = y + r), x = m) : (n === \"left\" ? b = u + Math.max(l, h) + r : n === \"right\" ? b = u + g - Math.max(c, d) - r : b = this.caretX, o === \"top\" ? (v = f, y = v - r, m = b - r, x = b + r) : (v = f + p, y = v + r, m = b + r, x = b - r), _ = v), {\n      x1: m,\n      x2: b,\n      x3: x,\n      y1: v,\n      y2: y,\n      y3: _\n    };\n  }\n  drawTitle(t, e, s) {\n    const n = this.title,\n      o = n.length;\n    let r, a, l;\n    if (o) {\n      const c = zt(s.rtl, this.x, this.width);\n      for (t.x = Ee(this, s.titleAlign, s), e.textAlign = c.textAlign(s.titleAlign), e.textBaseline = \"middle\", r = $(s.titleFont), a = s.titleSpacing, e.fillStyle = s.titleColor, e.font = r.string, l = 0; l < o; ++l) e.fillText(n[l], c.x(t.x), t.y + r.lineHeight / 2), t.y += r.lineHeight + a, l + 1 === o && (t.y += s.titleMarginBottom - a);\n    }\n  }\n  _drawColorBox(t, e, s, n, o) {\n    const r = this.labelColors[s],\n      a = this.labelPointStyles[s],\n      {\n        boxHeight: l,\n        boxWidth: c,\n        boxPadding: h\n      } = o,\n      d = $(o.bodyFont),\n      u = Ee(this, \"left\", o),\n      f = n.x(u),\n      g = l < d.lineHeight ? (d.lineHeight - l) / 2 : 0,\n      p = e.y + g;\n    if (o.usePointStyle) {\n      const m = {\n          radius: Math.min(c, l) / 2,\n          pointStyle: a.pointStyle,\n          rotation: a.rotation,\n          borderWidth: 1\n        },\n        b = n.leftForLtr(f, c) + c / 2,\n        x = p + l / 2;\n      t.strokeStyle = o.multiKeyBackground, t.fillStyle = o.multiKeyBackground, yi(t, m, b, x), t.strokeStyle = r.borderColor, t.fillStyle = r.backgroundColor, yi(t, m, b, x);\n    } else {\n      t.lineWidth = D(r.borderWidth) ? Math.max(...Object.values(r.borderWidth)) : r.borderWidth || 1, t.strokeStyle = r.borderColor, t.setLineDash(r.borderDash || []), t.lineDashOffset = r.borderDashOffset || 0;\n      const m = n.leftForLtr(f, c - h),\n        b = n.leftForLtr(n.xPlus(f, 1), c - h - 2),\n        x = Dt(r.borderRadius);\n      Object.values(x).some(v => v !== 0) ? (t.beginPath(), t.fillStyle = o.multiKeyBackground, ae(t, {\n        x: m,\n        y: p,\n        w: c,\n        h: l,\n        radius: x\n      }), t.fill(), t.stroke(), t.fillStyle = r.backgroundColor, t.beginPath(), ae(t, {\n        x: b,\n        y: p + 1,\n        w: c - 2,\n        h: l - 2,\n        radius: x\n      }), t.fill()) : (t.fillStyle = o.multiKeyBackground, t.fillRect(m, p, c, l), t.strokeRect(m, p, c, l), t.fillStyle = r.backgroundColor, t.fillRect(b, p + 1, c - 2, l - 2));\n    }\n    t.fillStyle = this.labelTextColors[s];\n  }\n  drawBody(t, e, s) {\n    const {\n        body: n\n      } = this,\n      {\n        bodySpacing: o,\n        bodyAlign: r,\n        displayColors: a,\n        boxHeight: l,\n        boxWidth: c,\n        boxPadding: h\n      } = s,\n      d = $(s.bodyFont);\n    let u = d.lineHeight,\n      f = 0;\n    const g = zt(s.rtl, this.x, this.width),\n      p = function (S) {\n        e.fillText(S, g.x(t.x + f), t.y + u / 2), t.y += u + o;\n      },\n      m = g.textAlign(r);\n    let b, x, v, y, _, M, k;\n    for (e.textAlign = r, e.textBaseline = \"middle\", e.font = d.string, t.x = Ee(this, m, s), e.fillStyle = s.bodyColor, E(this.beforeBody, p), f = a && m !== \"right\" ? r === \"center\" ? c / 2 + h : c + 2 + h : 0, y = 0, M = n.length; y < M; ++y) {\n      for (b = n[y], x = this.labelTextColors[y], e.fillStyle = x, E(b.before, p), v = b.lines, a && v.length && (this._drawColorBox(e, t, y, g, s), u = Math.max(d.lineHeight, l)), _ = 0, k = v.length; _ < k; ++_) p(v[_]), u = d.lineHeight;\n      E(b.after, p);\n    }\n    f = 0, u = d.lineHeight, E(this.afterBody, p), t.y -= o;\n  }\n  drawFooter(t, e, s) {\n    const n = this.footer,\n      o = n.length;\n    let r, a;\n    if (o) {\n      const l = zt(s.rtl, this.x, this.width);\n      for (t.x = Ee(this, s.footerAlign, s), t.y += s.footerMarginTop, e.textAlign = l.textAlign(s.footerAlign), e.textBaseline = \"middle\", r = $(s.footerFont), e.fillStyle = s.footerColor, e.font = r.string, a = 0; a < o; ++a) e.fillText(n[a], l.x(t.x), t.y + r.lineHeight / 2), t.y += r.lineHeight + s.footerSpacing;\n    }\n  }\n  drawBackground(t, e, s, n) {\n    const {\n        xAlign: o,\n        yAlign: r\n      } = this,\n      {\n        x: a,\n        y: l\n      } = t,\n      {\n        width: c,\n        height: h\n      } = s,\n      {\n        topLeft: d,\n        topRight: u,\n        bottomLeft: f,\n        bottomRight: g\n      } = Dt(n.cornerRadius);\n    e.fillStyle = n.backgroundColor, e.strokeStyle = n.borderColor, e.lineWidth = n.borderWidth, e.beginPath(), e.moveTo(a + d, l), r === \"top\" && this.drawCaret(t, e, s, n), e.lineTo(a + c - u, l), e.quadraticCurveTo(a + c, l, a + c, l + u), r === \"center\" && o === \"right\" && this.drawCaret(t, e, s, n), e.lineTo(a + c, l + h - g), e.quadraticCurveTo(a + c, l + h, a + c - g, l + h), r === \"bottom\" && this.drawCaret(t, e, s, n), e.lineTo(a + f, l + h), e.quadraticCurveTo(a, l + h, a, l + h - f), r === \"center\" && o === \"left\" && this.drawCaret(t, e, s, n), e.lineTo(a, l + d), e.quadraticCurveTo(a, l, a + d, l), e.closePath(), e.fill(), n.borderWidth > 0 && e.stroke();\n  }\n  _updateAnimationTarget(t) {\n    const e = this.chart,\n      s = this.$animations,\n      n = s && s.x,\n      o = s && s.y;\n    if (n || o) {\n      const r = se[t.position].call(this, this._active, this._eventPosition);\n      if (!r) return;\n      const a = this._size = Ks(this, t),\n        l = Object.assign({}, r, this._size),\n        c = qs(e, t, l),\n        h = Gs(t, l, c, e);\n      (n._to !== h.x || o._to !== h.y) && (this.xAlign = c.xAlign, this.yAlign = c.yAlign, this.width = a.width, this.height = a.height, this.caretX = r.x, this.caretY = r.y, this._resolveAnimations().update(this, h));\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(t) {\n    const e = this.options.setContext(this.getContext());\n    let s = this.opacity;\n    if (!s) return;\n    this._updateAnimationTarget(e);\n    const n = {\n        width: this.width,\n        height: this.height\n      },\n      o = {\n        x: this.x,\n        y: this.y\n      };\n    s = Math.abs(s) < 1e-3 ? 0 : s;\n    const r = K(e.padding),\n      a = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    e.enabled && a && (t.save(), t.globalAlpha = s, this.drawBackground(o, t, n, e), Tn(t, e.textDirection), o.y += r.top, this.drawTitle(o, t, e), this.drawBody(o, t, e), this.drawFooter(o, t, e), Ln(t, e.textDirection), t.restore());\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(t, e) {\n    const s = this._active,\n      n = t.map(({\n        datasetIndex: a,\n        index: l\n      }) => {\n        const c = this.chart.getDatasetMeta(a);\n        if (!c) throw new Error(\"Cannot find a dataset at index \" + a);\n        return {\n          datasetIndex: a,\n          element: c.data[l],\n          index: l\n        };\n      }),\n      o = !ze(s, n),\n      r = this._positionChanged(n, e);\n    (o || r) && (this._active = n, this._eventPosition = e, this._ignoreReplayEvents = !0, this.update(!0));\n  }\n  handleEvent(t, e, s = !0) {\n    if (e && this._ignoreReplayEvents) return !1;\n    this._ignoreReplayEvents = !1;\n    const n = this.options,\n      o = this._active || [],\n      r = this._getActiveElements(t, o, e, s),\n      a = this._positionChanged(r, t),\n      l = e || !ze(r, o) || a;\n    return l && (this._active = r, (n.enabled || n.external) && (this._eventPosition = {\n      x: t.x,\n      y: t.y\n    }, this.update(!0, e))), l;\n  }\n  _getActiveElements(t, e, s, n) {\n    const o = this.options;\n    if (t.type === \"mouseout\") return [];\n    if (!n) return e;\n    const r = this.chart.getElementsAtEventForMode(t, o.mode, o, s);\n    return o.reverse && r.reverse(), r;\n  }\n  _positionChanged(t, e) {\n    const {\n        caretX: s,\n        caretY: n,\n        options: o\n      } = this,\n      r = se[o.position].call(this, t, e);\n    return r !== !1 && (s !== r.x || n !== r.y);\n  }\n}\nCi.positioners = se;\nvar po = {\n    id: \"tooltip\",\n    _element: Ci,\n    positioners: se,\n    afterInit(i, t, e) {\n      e && (i.tooltip = new Ci({\n        chart: i,\n        options: e\n      }));\n    },\n    beforeUpdate(i, t, e) {\n      i.tooltip && i.tooltip.initialize(e);\n    },\n    reset(i, t, e) {\n      i.tooltip && i.tooltip.initialize(e);\n    },\n    afterDraw(i) {\n      const t = i.tooltip;\n      if (t && t._willRender()) {\n        const e = {\n          tooltip: t\n        };\n        if (i.notifyPlugins(\"beforeTooltipDraw\", e) === !1) return;\n        t.draw(i.ctx), i.notifyPlugins(\"afterTooltipDraw\", e);\n      }\n    },\n    afterEvent(i, t) {\n      if (i.tooltip) {\n        const e = t.replay;\n        i.tooltip.handleEvent(t.event, e, t.inChartArea) && (t.changed = !0);\n      }\n    },\n    defaults: {\n      enabled: !0,\n      external: null,\n      position: \"average\",\n      backgroundColor: \"rgba(0,0,0,0.8)\",\n      titleColor: \"#fff\",\n      titleFont: {\n        weight: \"bold\"\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: \"left\",\n      bodyColor: \"#fff\",\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: \"left\",\n      footerColor: \"#fff\",\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: \"bold\"\n      },\n      footerAlign: \"left\",\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (i, t) => t.bodyFont.size,\n      boxWidth: (i, t) => t.bodyFont.size,\n      multiKeyBackground: \"#fff\",\n      displayColors: !0,\n      boxPadding: 0,\n      borderColor: \"rgba(0,0,0,0)\",\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: \"easeOutQuart\"\n      },\n      animations: {\n        numbers: {\n          type: \"number\",\n          properties: [\"x\", \"y\", \"width\", \"height\", \"caretX\", \"caretY\"]\n        },\n        opacity: {\n          easing: \"linear\",\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: ct,\n        title(i) {\n          if (i.length > 0) {\n            const t = i[0],\n              e = t.chart.data.labels,\n              s = e ? e.length : 0;\n            if (this && this.options && this.options.mode === \"dataset\") return t.dataset.label || \"\";\n            if (t.label) return t.label;\n            if (s > 0 && t.dataIndex < s) return e[t.dataIndex];\n          }\n          return \"\";\n        },\n        afterTitle: ct,\n        beforeBody: ct,\n        beforeLabel: ct,\n        label(i) {\n          if (this && this.options && this.options.mode === \"dataset\") return i.label + \": \" + i.formattedValue || i.formattedValue;\n          let t = i.dataset.label || \"\";\n          t && (t += \": \");\n          const e = i.formattedValue;\n          return T(e) || (t += e), t;\n        },\n        labelColor(i) {\n          const e = i.chart.getDatasetMeta(i.datasetIndex).controller.getStyle(i.dataIndex);\n          return {\n            borderColor: e.borderColor,\n            backgroundColor: e.backgroundColor,\n            borderWidth: e.borderWidth,\n            borderDash: e.borderDash,\n            borderDashOffset: e.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n        labelPointStyle(i) {\n          const e = i.chart.getDatasetMeta(i.datasetIndex).controller.getStyle(i.dataIndex);\n          return {\n            pointStyle: e.pointStyle,\n            rotation: e.rotation\n          };\n        },\n        afterLabel: ct,\n        afterBody: ct,\n        beforeFooter: ct,\n        footer: ct,\n        afterFooter: ct\n      }\n    },\n    defaultRoutes: {\n      bodyFont: \"font\",\n      footerFont: \"font\",\n      titleFont: \"font\"\n    },\n    descriptors: {\n      _scriptable: i => i !== \"filter\" && i !== \"itemSort\" && i !== \"external\",\n      _indexable: !1,\n      callbacks: {\n        _scriptable: !1,\n        _indexable: !1\n      },\n      animation: {\n        _fallback: !1\n      },\n      animations: {\n        _fallback: \"animation\"\n      }\n    },\n    additionalOptionScopes: [\"interaction\"]\n  },\n  mo = /* @__PURE__ */Object.freeze({\n    __proto__: null,\n    Decimation: ao,\n    Filler: ho,\n    Legend: uo,\n    SubTitle: go,\n    Title: fo,\n    Tooltip: po\n  });\nconst Sc = (i, t, e, s) => (typeof t == \"string\" ? (e = i.push(t) - 1, s.unshift({\n  index: e,\n  label: t\n})) : isNaN(t) && (e = null), e);\nfunction Pc(i, t, e, s) {\n  const n = i.indexOf(t);\n  if (n === -1) return Sc(i, t, e, s);\n  const o = i.lastIndexOf(t);\n  return n !== o ? e : n;\n}\nconst Cc = (i, t) => i === null ? null : Y(Math.round(i), 0, t);\nclass ce extends Mt {\n  constructor(t) {\n    super(t), this._startValue = void 0, this._valueRange = 0, this._addedLabels = [];\n  }\n  init(t) {\n    const e = this._addedLabels;\n    if (e.length) {\n      const s = this.getLabels();\n      for (const {\n        index: n,\n        label: o\n      } of e) s[n] === o && s.splice(n, 1);\n      this._addedLabels = [];\n    }\n    super.init(t);\n  }\n  parse(t, e) {\n    if (T(t)) return null;\n    const s = this.getLabels();\n    return e = isFinite(e) && s[e] === t ? e : Pc(s, t, C(e, t), this._addedLabels), Cc(e, s.length - 1);\n  }\n  determineDataLimits() {\n    const {\n      minDefined: t,\n      maxDefined: e\n    } = this.getUserBounds();\n    let {\n      min: s,\n      max: n\n    } = this.getMinMax(!0);\n    this.options.bounds === \"ticks\" && (t || (s = 0), e || (n = this.getLabels().length - 1)), this.min = s, this.max = n;\n  }\n  buildTicks() {\n    const t = this.min,\n      e = this.max,\n      s = this.options.offset,\n      n = [];\n    let o = this.getLabels();\n    o = t === 0 && e === o.length - 1 ? o : o.slice(t, e + 1), this._valueRange = Math.max(o.length - (s ? 0 : 1), 1), this._startValue = this.min - (s ? 0.5 : 0);\n    for (let r = t; r <= e; r++) n.push({\n      value: r\n    });\n    return n;\n  }\n  getLabelForValue(t) {\n    const e = this.getLabels();\n    return t >= 0 && t < e.length ? e[t] : t;\n  }\n  configure() {\n    super.configure(), this.isHorizontal() || (this._reversePixels = !this._reversePixels);\n  }\n  getPixelForValue(t) {\n    return typeof t != \"number\" && (t = this.parse(t)), t === null ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(t) {\n    const e = this.ticks;\n    return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value);\n  }\n  getValueForPixel(t) {\n    return Math.round(this._startValue + this.getDecimalForPixel(t) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nce.id = \"category\";\nce.defaults = {\n  ticks: {\n    callback: ce.prototype.getLabelForValue\n  }\n};\nfunction Dc(i, t) {\n  const e = [],\n    {\n      bounds: n,\n      step: o,\n      min: r,\n      max: a,\n      precision: l,\n      count: c,\n      maxTicks: h,\n      maxDigits: d,\n      includeBounds: u\n    } = i,\n    f = o || 1,\n    g = h - 1,\n    {\n      min: p,\n      max: m\n    } = t,\n    b = !T(r),\n    x = !T(a),\n    v = !T(c),\n    y = (m - p) / (d + 1);\n  let _ = qi((m - p) / g / f) * f,\n    M,\n    k,\n    S,\n    w;\n  if (_ < 1e-14 && !b && !x) return [{\n    value: p\n  }, {\n    value: m\n  }];\n  w = Math.ceil(m / _) - Math.floor(p / _), w > g && (_ = qi(w * _ / g / f) * f), T(l) || (M = Math.pow(10, l), _ = Math.ceil(_ * M) / M), n === \"ticks\" ? (k = Math.floor(p / _) * _, S = Math.ceil(m / _) * _) : (k = p, S = m), b && x && o && Oo((a - r) / o, _ / 1e3) ? (w = Math.round(Math.min((a - r) / _, h)), _ = (a - r) / w, k = r, S = a) : v ? (k = b ? r : k, S = x ? a : S, w = c - 1, _ = (S - k) / w) : (w = (S - k) / _, te(w, Math.round(w), _ / 1e3) ? w = Math.round(w) : w = Math.ceil(w));\n  const L = Math.max(Gi(_), Gi(k));\n  M = Math.pow(10, T(l) ? L : l), k = Math.round(k * M) / M, S = Math.round(S * M) / M;\n  let R = 0;\n  for (b && (u && k !== r ? (e.push({\n    value: r\n  }), k < r && R++, te(Math.round((k + R * _) * M) / M, r, Qs(r, y, i)) && R++) : k < r && R++); R < w; ++R) e.push({\n    value: Math.round((k + R * _) * M) / M\n  });\n  return x && u && S !== a ? e.length && te(e[e.length - 1].value, a, Qs(a, y, i)) ? e[e.length - 1].value = a : e.push({\n    value: a\n  }) : (!x || S === a) && e.push({\n    value: S\n  }), e;\n}\nfunction Qs(i, t, {\n  horizontal: e,\n  minRotation: s\n}) {\n  const n = nt(s),\n    o = (e ? Math.sin(n) : Math.cos(n)) || 1e-3,\n    r = 0.75 * t * (\"\" + i).length;\n  return Math.min(t / o, r);\n}\nclass Ye extends Mt {\n  constructor(t) {\n    super(t), this.start = void 0, this.end = void 0, this._startValue = void 0, this._endValue = void 0, this._valueRange = 0;\n  }\n  parse(t, e) {\n    return T(t) || (typeof t == \"number\" || t instanceof Number) && !isFinite(+t) ? null : +t;\n  }\n  handleTickRangeOptions() {\n    const {\n        beginAtZero: t\n      } = this.options,\n      {\n        minDefined: e,\n        maxDefined: s\n      } = this.getUserBounds();\n    let {\n      min: n,\n      max: o\n    } = this;\n    const r = l => n = e ? n : l,\n      a = l => o = s ? o : l;\n    if (t) {\n      const l = lt(n),\n        c = lt(o);\n      l < 0 && c < 0 ? a(0) : l > 0 && c > 0 && r(0);\n    }\n    if (n === o) {\n      let l = 1;\n      (o >= Number.MAX_SAFE_INTEGER || n <= Number.MIN_SAFE_INTEGER) && (l = Math.abs(o * 0.05)), a(o + l), t || r(n - l);\n    }\n    this.min = n, this.max = o;\n  }\n  getTickLimit() {\n    const t = this.options.ticks;\n    let {\n        maxTicksLimit: e,\n        stepSize: s\n      } = t,\n      n;\n    return s ? (n = Math.ceil(this.max / s) - Math.floor(this.min / s) + 1, n > 1e3 && (console.warn(`scales.${this.id}.ticks.stepSize: ${s} would result generating up to ${n} ticks. Limiting to 1000.`), n = 1e3)) : (n = this.computeTickLimit(), e = e || 11), e && (n = Math.min(e, n)), n;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const t = this.options,\n      e = t.ticks;\n    let s = this.getTickLimit();\n    s = Math.max(2, s);\n    const n = {\n        maxTicks: s,\n        bounds: t.bounds,\n        min: t.min,\n        max: t.max,\n        precision: e.precision,\n        step: e.stepSize,\n        count: e.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: e.minRotation || 0,\n        includeBounds: e.includeBounds !== !1\n      },\n      o = this._range || this,\n      r = Dc(n, o);\n    return t.bounds === \"ticks\" && cn(r, this, \"value\"), t.reverse ? (r.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), r;\n  }\n  configure() {\n    const t = this.ticks;\n    let e = this.min,\n      s = this.max;\n    if (super.configure(), this.options.offset && t.length) {\n      const n = (s - e) / Math.max(t.length - 1, 1) / 2;\n      e -= n, s += n;\n    }\n    this._startValue = e, this._endValue = s, this._valueRange = s - e;\n  }\n  getLabelForValue(t) {\n    return de(t, this.chart.options.locale, this.options.ticks.format);\n  }\n}\nclass Ge extends Ye {\n  determineDataLimits() {\n    const {\n      min: t,\n      max: e\n    } = this.getMinMax(!0);\n    this.min = N(t) ? t : 0, this.max = N(e) ? e : 1, this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const t = this.isHorizontal(),\n      e = t ? this.width : this.height,\n      s = nt(this.options.ticks.minRotation),\n      n = (t ? Math.sin(s) : Math.cos(s)) || 1e-3,\n      o = this._resolveTickFontOptions(0);\n    return Math.ceil(e / Math.min(40, o.lineHeight / n));\n  }\n  getPixelForValue(t) {\n    return t === null ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(t) {\n    return this._startValue + this.getDecimalForPixel(t) * this._valueRange;\n  }\n}\nGe.id = \"linear\";\nGe.defaults = {\n  ticks: {\n    callback: be.formatters.numeric\n  }\n};\nfunction tn(i) {\n  return i / Math.pow(10, Math.floor(tt(i))) === 1;\n}\nfunction Oc(i, t) {\n  const e = Math.floor(tt(t.max)),\n    s = Math.ceil(t.max / Math.pow(10, e)),\n    n = [];\n  let o = Q(i.min, Math.pow(10, Math.floor(tt(t.min)))),\n    r = Math.floor(tt(o)),\n    a = Math.floor(o / Math.pow(10, r)),\n    l = r < 0 ? Math.pow(10, Math.abs(r)) : 1;\n  do n.push({\n    value: o,\n    major: tn(o)\n  }), ++a, a === 10 && (a = 1, ++r, l = r >= 0 ? 1 : l), o = Math.round(a * Math.pow(10, r) * l) / l; while (r < e || r === e && a < s);\n  const c = Q(i.max, o);\n  return n.push({\n    value: c,\n    major: tn(o)\n  }), n;\n}\nclass Ze extends Mt {\n  constructor(t) {\n    super(t), this.start = void 0, this.end = void 0, this._startValue = void 0, this._valueRange = 0;\n  }\n  parse(t, e) {\n    const s = Ye.prototype.parse.apply(this, [t, e]);\n    if (s === 0) {\n      this._zero = !0;\n      return;\n    }\n    return N(s) && s > 0 ? s : null;\n  }\n  determineDataLimits() {\n    const {\n      min: t,\n      max: e\n    } = this.getMinMax(!0);\n    this.min = N(t) ? Math.max(0, t) : null, this.max = N(e) ? Math.max(0, e) : null, this.options.beginAtZero && (this._zero = !0), this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {\n      minDefined: t,\n      maxDefined: e\n    } = this.getUserBounds();\n    let s = this.min,\n      n = this.max;\n    const o = l => s = t ? s : l,\n      r = l => n = e ? n : l,\n      a = (l, c) => Math.pow(10, Math.floor(tt(l)) + c);\n    s === n && (s <= 0 ? (o(1), r(10)) : (o(a(s, -1)), r(a(n, 1)))), s <= 0 && o(a(n, -1)), n <= 0 && r(a(s, 1)), this._zero && this.min !== this._suggestedMin && s === a(this.min, 0) && o(a(s, -1)), this.min = s, this.max = n;\n  }\n  buildTicks() {\n    const t = this.options,\n      e = {\n        min: this._userMin,\n        max: this._userMax\n      },\n      s = Oc(e, this);\n    return t.bounds === \"ticks\" && cn(s, this, \"value\"), t.reverse ? (s.reverse(), this.start = this.max, this.end = this.min) : (this.start = this.min, this.end = this.max), s;\n  }\n  getLabelForValue(t) {\n    return t === void 0 ? \"0\" : de(t, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const t = this.min;\n    super.configure(), this._startValue = tt(t), this._valueRange = tt(this.max) - tt(t);\n  }\n  getPixelForValue(t) {\n    return (t === void 0 || t === 0) && (t = this.min), t === null || isNaN(t) ? NaN : this.getPixelForDecimal(t === this.min ? 0 : (tt(t) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(t) {\n    const e = this.getDecimalForPixel(t);\n    return Math.pow(10, this._startValue + e * this._valueRange);\n  }\n}\nZe.id = \"logarithmic\";\nZe.defaults = {\n  ticks: {\n    callback: be.formatters.logarithmic,\n    major: {\n      enabled: !0\n    }\n  }\n};\nfunction Di(i) {\n  const t = i.ticks;\n  if (t.display && i.display) {\n    const e = K(t.backdropPadding);\n    return C(t.font && t.font.size, O.font.size) + e.height;\n  }\n  return 0;\n}\nfunction Ac(i, t, e) {\n  return e = z(e) ? e : [e], {\n    w: ar(i, t.string, e),\n    h: e.length * t.lineHeight\n  };\n}\nfunction en(i, t, e, s, n) {\n  return i === s || i === n ? {\n    start: t - e / 2,\n    end: t + e / 2\n  } : i < s || i > n ? {\n    start: t - e,\n    end: t\n  } : {\n    start: t,\n    end: t + e\n  };\n}\nfunction Tc(i) {\n  const t = {\n      l: i.left + i._padding.left,\n      r: i.right - i._padding.right,\n      t: i.top + i._padding.top,\n      b: i.bottom - i._padding.bottom\n    },\n    e = Object.assign({}, t),\n    s = [],\n    n = [],\n    o = i._pointLabels.length,\n    r = i.options.pointLabels,\n    a = r.centerPointLabels ? B / o : 0;\n  for (let l = 0; l < o; l++) {\n    const c = r.setContext(i.getPointLabelContext(l));\n    n[l] = c.padding;\n    const h = i.getPointPosition(l, i.drawingArea + n[l], a),\n      d = $(c.font),\n      u = Ac(i.ctx, d, i._pointLabels[l]);\n    s[l] = u;\n    const f = Z(i.getIndexAngle(l) + a),\n      g = Math.round(Ai(f)),\n      p = en(g, h.x, u.w, 0, 180),\n      m = en(g, h.y, u.h, 90, 270);\n    Lc(e, t, f, p, m);\n  }\n  i.setCenterPoint(t.l - e.l, e.r - t.r, t.t - e.t, e.b - t.b), i._pointLabelItems = Rc(i, s, n);\n}\nfunction Lc(i, t, e, s, n) {\n  const o = Math.abs(Math.sin(e)),\n    r = Math.abs(Math.cos(e));\n  let a = 0,\n    l = 0;\n  s.start < t.l ? (a = (t.l - s.start) / o, i.l = Math.min(i.l, t.l - a)) : s.end > t.r && (a = (s.end - t.r) / o, i.r = Math.max(i.r, t.r + a)), n.start < t.t ? (l = (t.t - n.start) / r, i.t = Math.min(i.t, t.t - l)) : n.end > t.b && (l = (n.end - t.b) / r, i.b = Math.max(i.b, t.b + l));\n}\nfunction Rc(i, t, e) {\n  const s = [],\n    n = i._pointLabels.length,\n    o = i.options,\n    r = Di(o) / 2,\n    a = i.drawingArea,\n    l = o.pointLabels.centerPointLabels ? B / n : 0;\n  for (let c = 0; c < n; c++) {\n    const h = i.getPointPosition(c, a + r + e[c], l),\n      d = Math.round(Ai(Z(h.angle + V))),\n      u = t[c],\n      f = Ic(h.y, u.h, d),\n      g = Ec(d),\n      p = Fc(h.x, u.w, g);\n    s.push({\n      x: h.x,\n      y: f,\n      textAlign: g,\n      left: p,\n      top: f,\n      right: p + u.w,\n      bottom: f + u.h\n    });\n  }\n  return s;\n}\nfunction Ec(i) {\n  return i === 0 || i === 180 ? \"center\" : i < 180 ? \"left\" : \"right\";\n}\nfunction Fc(i, t, e) {\n  return e === \"right\" ? i -= t : e === \"center\" && (i -= t / 2), i;\n}\nfunction Ic(i, t, e) {\n  return e === 90 || e === 270 ? i -= t / 2 : (e > 270 || e < 90) && (i -= t), i;\n}\nfunction zc(i, t) {\n  const {\n    ctx: e,\n    options: {\n      pointLabels: s\n    }\n  } = i;\n  for (let n = t - 1; n >= 0; n--) {\n    const o = s.setContext(i.getPointLabelContext(n)),\n      r = $(o.font),\n      {\n        x: a,\n        y: l,\n        textAlign: c,\n        left: h,\n        top: d,\n        right: u,\n        bottom: f\n      } = i._pointLabelItems[n],\n      {\n        backdropColor: g\n      } = o;\n    if (!T(g)) {\n      const p = Dt(o.borderRadius),\n        m = K(o.backdropPadding);\n      e.fillStyle = g;\n      const b = h - m.left,\n        x = d - m.top,\n        v = u - h + m.width,\n        y = f - d + m.height;\n      Object.values(p).some(_ => _ !== 0) ? (e.beginPath(), ae(e, {\n        x: b,\n        y: x,\n        w: v,\n        h: y,\n        radius: p\n      }), e.fill()) : e.fillRect(b, x, v, y);\n    }\n    Tt(e, i._pointLabels[n], a, l + r.lineHeight / 2, r, {\n      color: o.color,\n      textAlign: c,\n      textBaseline: \"middle\"\n    });\n  }\n}\nfunction bo(i, t, e, s) {\n  const {\n    ctx: n\n  } = i;\n  if (e) n.arc(i.xCenter, i.yCenter, t, 0, F);else {\n    let o = i.getPointPosition(0, t);\n    n.moveTo(o.x, o.y);\n    for (let r = 1; r < s; r++) o = i.getPointPosition(r, t), n.lineTo(o.x, o.y);\n  }\n}\nfunction Bc(i, t, e, s) {\n  const n = i.ctx,\n    o = t.circular,\n    {\n      color: r,\n      lineWidth: a\n    } = t;\n  !o && !s || !r || !a || e < 0 || (n.save(), n.strokeStyle = r, n.lineWidth = a, n.setLineDash(t.borderDash), n.lineDashOffset = t.borderDashOffset, n.beginPath(), bo(i, e, o, s), n.closePath(), n.stroke(), n.restore());\n}\nfunction Vc(i, t, e) {\n  return vt(i, {\n    label: e,\n    index: t,\n    type: \"pointLabel\"\n  });\n}\nclass Nt extends Ye {\n  constructor(t) {\n    super(t), this.xCenter = void 0, this.yCenter = void 0, this.drawingArea = void 0, this._pointLabels = [], this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const t = this._padding = K(Di(this.options) / 2),\n      e = this.width = this.maxWidth - t.width,\n      s = this.height = this.maxHeight - t.height;\n    this.xCenter = Math.floor(this.left + e / 2 + t.left), this.yCenter = Math.floor(this.top + s / 2 + t.top), this.drawingArea = Math.floor(Math.min(e, s) / 2);\n  }\n  determineDataLimits() {\n    const {\n      min: t,\n      max: e\n    } = this.getMinMax(!1);\n    this.min = N(t) && !isNaN(t) ? t : 0, this.max = N(e) && !isNaN(e) ? e : 0, this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / Di(this.options));\n  }\n  generateTickLabels(t) {\n    Ye.prototype.generateTickLabels.call(this, t), this._pointLabels = this.getLabels().map((e, s) => {\n      const n = I(this.options.pointLabels.callback, [e, s], this);\n      return n || n === 0 ? n : \"\";\n    }).filter((e, s) => this.chart.getDataVisibility(s));\n  }\n  fit() {\n    const t = this.options;\n    t.display && t.pointLabels.display ? Tc(this) : this.setCenterPoint(0, 0, 0, 0);\n  }\n  setCenterPoint(t, e, s, n) {\n    this.xCenter += Math.floor((t - e) / 2), this.yCenter += Math.floor((s - n) / 2), this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(t, e, s, n));\n  }\n  getIndexAngle(t) {\n    const e = F / (this._pointLabels.length || 1),\n      s = this.options.startAngle || 0;\n    return Z(t * e + nt(s));\n  }\n  getDistanceFromCenterForValue(t) {\n    if (T(t)) return NaN;\n    const e = this.drawingArea / (this.max - this.min);\n    return this.options.reverse ? (this.max - t) * e : (t - this.min) * e;\n  }\n  getValueForDistanceFromCenter(t) {\n    if (T(t)) return NaN;\n    const e = t / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - e : this.min + e;\n  }\n  getPointLabelContext(t) {\n    const e = this._pointLabels || [];\n    if (t >= 0 && t < e.length) {\n      const s = e[t];\n      return Vc(this.getContext(), t, s);\n    }\n  }\n  getPointPosition(t, e, s = 0) {\n    const n = this.getIndexAngle(t) - V + s;\n    return {\n      x: Math.cos(n) * e + this.xCenter,\n      y: Math.sin(n) * e + this.yCenter,\n      angle: n\n    };\n  }\n  getPointPositionForValue(t, e) {\n    return this.getPointPosition(t, this.getDistanceFromCenterForValue(e));\n  }\n  getBasePosition(t) {\n    return this.getPointPositionForValue(t || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(t) {\n    const {\n      left: e,\n      top: s,\n      right: n,\n      bottom: o\n    } = this._pointLabelItems[t];\n    return {\n      left: e,\n      top: s,\n      right: n,\n      bottom: o\n    };\n  }\n  drawBackground() {\n    const {\n      backgroundColor: t,\n      grid: {\n        circular: e\n      }\n    } = this.options;\n    if (t) {\n      const s = this.ctx;\n      s.save(), s.beginPath(), bo(this, this.getDistanceFromCenterForValue(this._endValue), e, this._pointLabels.length), s.closePath(), s.fillStyle = t, s.fill(), s.restore();\n    }\n  }\n  drawGrid() {\n    const t = this.ctx,\n      e = this.options,\n      {\n        angleLines: s,\n        grid: n\n      } = e,\n      o = this._pointLabels.length;\n    let r, a, l;\n    if (e.pointLabels.display && zc(this, o), n.display && this.ticks.forEach((c, h) => {\n      if (h !== 0) {\n        a = this.getDistanceFromCenterForValue(c.value);\n        const d = n.setContext(this.getContext(h - 1));\n        Bc(this, d, a, o);\n      }\n    }), s.display) {\n      for (t.save(), r = o - 1; r >= 0; r--) {\n        const c = s.setContext(this.getPointLabelContext(r)),\n          {\n            color: h,\n            lineWidth: d\n          } = c;\n        !d || !h || (t.lineWidth = d, t.strokeStyle = h, t.setLineDash(c.borderDash), t.lineDashOffset = c.borderDashOffset, a = this.getDistanceFromCenterForValue(e.ticks.reverse ? this.min : this.max), l = this.getPointPosition(r, a), t.beginPath(), t.moveTo(this.xCenter, this.yCenter), t.lineTo(l.x, l.y), t.stroke());\n      }\n      t.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const t = this.ctx,\n      e = this.options,\n      s = e.ticks;\n    if (!s.display) return;\n    const n = this.getIndexAngle(0);\n    let o, r;\n    t.save(), t.translate(this.xCenter, this.yCenter), t.rotate(n), t.textAlign = \"center\", t.textBaseline = \"middle\", this.ticks.forEach((a, l) => {\n      if (l === 0 && !e.reverse) return;\n      const c = s.setContext(this.getContext(l)),\n        h = $(c.font);\n      if (o = this.getDistanceFromCenterForValue(this.ticks[l].value), c.showLabelBackdrop) {\n        t.font = h.string, r = t.measureText(a.label).width, t.fillStyle = c.backdropColor;\n        const d = K(c.backdropPadding);\n        t.fillRect(-r / 2 - d.left, -o - h.size / 2 - d.top, r + d.width, h.size + d.height);\n      }\n      Tt(t, a.label, 0, -o, h, {\n        color: c.color\n      });\n    }), t.restore();\n  }\n  drawTitle() {}\n}\nNt.id = \"radialLinear\";\nNt.defaults = {\n  display: !0,\n  animate: !0,\n  position: \"chartArea\",\n  angleLines: {\n    display: !0,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0\n  },\n  grid: {\n    circular: !1\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: !0,\n    callback: be.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: void 0,\n    backdropPadding: 2,\n    display: !0,\n    font: {\n      size: 10\n    },\n    callback(i) {\n      return i;\n    },\n    padding: 5,\n    centerPointLabels: !1\n  }\n};\nNt.defaultRoutes = {\n  \"angleLines.color\": \"borderColor\",\n  \"pointLabels.color\": \"color\",\n  \"ticks.color\": \"color\"\n};\nNt.descriptors = {\n  angleLines: {\n    _fallback: \"grid\"\n  }\n};\nconst Je = {\n    millisecond: {\n      common: !0,\n      size: 1,\n      steps: 1e3\n    },\n    second: {\n      common: !0,\n      size: 1e3,\n      steps: 60\n    },\n    minute: {\n      common: !0,\n      size: 6e4,\n      steps: 60\n    },\n    hour: {\n      common: !0,\n      size: 36e5,\n      steps: 24\n    },\n    day: {\n      common: !0,\n      size: 864e5,\n      steps: 30\n    },\n    week: {\n      common: !1,\n      size: 6048e5,\n      steps: 4\n    },\n    month: {\n      common: !0,\n      size: 2628e6,\n      steps: 12\n    },\n    quarter: {\n      common: !1,\n      size: 7884e6,\n      steps: 4\n    },\n    year: {\n      common: !0,\n      size: 3154e7\n    }\n  },\n  G = Object.keys(Je);\nfunction Wc(i, t) {\n  return i - t;\n}\nfunction sn(i, t) {\n  if (T(t)) return null;\n  const e = i._adapter,\n    {\n      parser: s,\n      round: n,\n      isoWeekday: o\n    } = i._parseOpts;\n  let r = t;\n  return typeof s == \"function\" && (r = s(r)), N(r) || (r = typeof s == \"string\" ? e.parse(r, s) : e.parse(r)), r === null ? null : (n && (r = n === \"week\" && (Bt(o) || o === !0) ? e.startOf(r, \"isoWeek\", o) : e.startOf(r, n)), +r);\n}\nfunction nn(i, t, e, s) {\n  const n = G.length;\n  for (let o = G.indexOf(i); o < n - 1; ++o) {\n    const r = Je[G[o]],\n      a = r.steps ? r.steps : Number.MAX_SAFE_INTEGER;\n    if (r.common && Math.ceil((e - t) / (a * r.size)) <= s) return G[o];\n  }\n  return G[n - 1];\n}\nfunction Nc(i, t, e, s, n) {\n  for (let o = G.length - 1; o >= G.indexOf(e); o--) {\n    const r = G[o];\n    if (Je[r].common && i._adapter.diff(n, s, r) >= t - 1) return r;\n  }\n  return G[e ? G.indexOf(e) : 0];\n}\nfunction Hc(i) {\n  for (let t = G.indexOf(i) + 1, e = G.length; t < e; ++t) if (Je[G[t]].common) return G[t];\n}\nfunction on(i, t, e) {\n  if (!e) i[t] = !0;else if (e.length) {\n    const {\n        lo: s,\n        hi: n\n      } = Ti(e, t),\n      o = e[s] >= t ? e[s] : e[n];\n    i[o] = !0;\n  }\n}\nfunction jc(i, t, e, s) {\n  const n = i._adapter,\n    o = +n.startOf(t[0].value, s),\n    r = t[t.length - 1].value;\n  let a, l;\n  for (a = o; a <= r; a = +n.add(a, 1, s)) l = e[a], l >= 0 && (t[l].major = !0);\n  return t;\n}\nfunction rn(i, t, e) {\n  const s = [],\n    n = {},\n    o = t.length;\n  let r, a;\n  for (r = 0; r < o; ++r) a = t[r], n[a] = r, s.push({\n    value: a,\n    major: !1\n  });\n  return o === 0 || !e ? s : jc(i, s, n, e);\n}\nclass Ht extends Mt {\n  constructor(t) {\n    super(t), this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    }, this._unit = \"day\", this._majorUnit = void 0, this._offsets = {}, this._normalized = !1, this._parseOpts = void 0;\n  }\n  init(t, e) {\n    const s = t.time || (t.time = {}),\n      n = this._adapter = new Nn._date(t.adapters.date);\n    n.init(e), Qt(s.displayFormats, n.formats()), this._parseOpts = {\n      parser: s.parser,\n      round: s.round,\n      isoWeekday: s.isoWeekday\n    }, super.init(t), this._normalized = e.normalized;\n  }\n  parse(t, e) {\n    return t === void 0 ? null : sn(this, t);\n  }\n  beforeLayout() {\n    super.beforeLayout(), this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const t = this.options,\n      e = this._adapter,\n      s = t.time.unit || \"day\";\n    let {\n      min: n,\n      max: o,\n      minDefined: r,\n      maxDefined: a\n    } = this.getUserBounds();\n    function l(c) {\n      !r && !isNaN(c.min) && (n = Math.min(n, c.min)), !a && !isNaN(c.max) && (o = Math.max(o, c.max));\n    }\n    (!r || !a) && (l(this._getLabelBounds()), (t.bounds !== \"ticks\" || t.ticks.source !== \"labels\") && l(this.getMinMax(!1))), n = N(n) && !isNaN(n) ? n : +e.startOf(Date.now(), s), o = N(o) && !isNaN(o) ? o : +e.endOf(Date.now(), s) + 1, this.min = Math.min(n, o - 1), this.max = Math.max(n + 1, o);\n  }\n  _getLabelBounds() {\n    const t = this.getLabelTimestamps();\n    let e = Number.POSITIVE_INFINITY,\n      s = Number.NEGATIVE_INFINITY;\n    return t.length && (e = t[0], s = t[t.length - 1]), {\n      min: e,\n      max: s\n    };\n  }\n  buildTicks() {\n    const t = this.options,\n      e = t.time,\n      s = t.ticks,\n      n = s.source === \"labels\" ? this.getLabelTimestamps() : this._generate();\n    t.bounds === \"ticks\" && n.length && (this.min = this._userMin || n[0], this.max = this._userMax || n[n.length - 1]);\n    const o = this.min,\n      r = this.max,\n      a = Ro(n, o, r);\n    return this._unit = e.unit || (s.autoSkip ? nn(e.minUnit, this.min, this.max, this._getLabelCapacity(o)) : Nc(this, a.length, e.minUnit, this.min, this.max)), this._majorUnit = !s.major.enabled || this._unit === \"year\" ? void 0 : Hc(this._unit), this.initOffsets(n), t.reverse && a.reverse(), rn(this, a, this._majorUnit);\n  }\n  afterAutoSkip() {\n    this.options.offsetAfterAutoskip && this.initOffsets(this.ticks.map(t => +t.value));\n  }\n  initOffsets(t) {\n    let e = 0,\n      s = 0,\n      n,\n      o;\n    this.options.offset && t.length && (n = this.getDecimalForValue(t[0]), t.length === 1 ? e = 1 - n : e = (this.getDecimalForValue(t[1]) - n) / 2, o = this.getDecimalForValue(t[t.length - 1]), t.length === 1 ? s = o : s = (o - this.getDecimalForValue(t[t.length - 2])) / 2);\n    const r = t.length < 3 ? 0.5 : 0.25;\n    e = Y(e, 0, r), s = Y(s, 0, r), this._offsets = {\n      start: e,\n      end: s,\n      factor: 1 / (e + 1 + s)\n    };\n  }\n  _generate() {\n    const t = this._adapter,\n      e = this.min,\n      s = this.max,\n      n = this.options,\n      o = n.time,\n      r = o.unit || nn(o.minUnit, e, s, this._getLabelCapacity(e)),\n      a = C(o.stepSize, 1),\n      l = r === \"week\" ? o.isoWeekday : !1,\n      c = Bt(l) || l === !0,\n      h = {};\n    let d = e,\n      u,\n      f;\n    if (c && (d = +t.startOf(d, \"isoWeek\", l)), d = +t.startOf(d, c ? \"day\" : r), t.diff(s, e, r) > 1e5 * a) throw new Error(e + \" and \" + s + \" are too far apart with stepSize of \" + a + \" \" + r);\n    const g = n.ticks.source === \"data\" && this.getDataTimestamps();\n    for (u = d, f = 0; u < s; u = +t.add(u, a, r), f++) on(h, u, g);\n    return (u === s || n.bounds === \"ticks\" || f === 1) && on(h, u, g), Object.keys(h).sort((p, m) => p - m).map(p => +p);\n  }\n  getLabelForValue(t) {\n    const e = this._adapter,\n      s = this.options.time;\n    return s.tooltipFormat ? e.format(t, s.tooltipFormat) : e.format(t, s.displayFormats.datetime);\n  }\n  _tickFormatFunction(t, e, s, n) {\n    const o = this.options,\n      r = o.time.displayFormats,\n      a = this._unit,\n      l = this._majorUnit,\n      c = a && r[a],\n      h = l && r[l],\n      d = s[e],\n      u = l && h && d && d.major,\n      f = this._adapter.format(t, n || (u ? h : c)),\n      g = o.ticks.callback;\n    return g ? I(g, [f, e, s], this) : f;\n  }\n  generateTickLabels(t) {\n    let e, s, n;\n    for (e = 0, s = t.length; e < s; ++e) n = t[e], n.label = this._tickFormatFunction(n.value, e, t);\n  }\n  getDecimalForValue(t) {\n    return t === null ? NaN : (t - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(t) {\n    const e = this._offsets,\n      s = this.getDecimalForValue(t);\n    return this.getPixelForDecimal((e.start + s) * e.factor);\n  }\n  getValueForPixel(t) {\n    const e = this._offsets,\n      s = this.getDecimalForPixel(t) / e.factor - e.end;\n    return this.min + s * (this.max - this.min);\n  }\n  _getLabelSize(t) {\n    const e = this.options.ticks,\n      s = this.ctx.measureText(t).width,\n      n = nt(this.isHorizontal() ? e.maxRotation : e.minRotation),\n      o = Math.cos(n),\n      r = Math.sin(n),\n      a = this._resolveTickFontOptions(0).size;\n    return {\n      w: s * o + a * r,\n      h: s * r + a * o\n    };\n  }\n  _getLabelCapacity(t) {\n    const e = this.options.time,\n      s = e.displayFormats,\n      n = s[e.unit] || s.millisecond,\n      o = this._tickFormatFunction(t, 0, rn(this, [t], this._majorUnit), n),\n      r = this._getLabelSize(o),\n      a = Math.floor(this.isHorizontal() ? this.width / r.w : this.height / r.h) - 1;\n    return a > 0 ? a : 1;\n  }\n  getDataTimestamps() {\n    let t = this._cache.data || [],\n      e,\n      s;\n    if (t.length) return t;\n    const n = this.getMatchingVisibleMetas();\n    if (this._normalized && n.length) return this._cache.data = n[0].controller.getAllParsedValues(this);\n    for (e = 0, s = n.length; e < s; ++e) t = t.concat(n[e].controller.getAllParsedValues(this));\n    return this._cache.data = this.normalize(t);\n  }\n  getLabelTimestamps() {\n    const t = this._cache.labels || [];\n    let e, s;\n    if (t.length) return t;\n    const n = this.getLabels();\n    for (e = 0, s = n.length; e < s; ++e) t.push(sn(this, n[e]));\n    return this._cache.labels = this._normalized ? t : this.normalize(t);\n  }\n  normalize(t) {\n    return un(t.sort(Wc));\n  }\n}\nHt.id = \"time\";\nHt.defaults = {\n  bounds: \"data\",\n  adapters: {},\n  time: {\n    parser: !1,\n    unit: !1,\n    round: !1,\n    isoWeekday: !1,\n    minUnit: \"millisecond\",\n    displayFormats: {}\n  },\n  ticks: {\n    source: \"auto\",\n    major: {\n      enabled: !1\n    }\n  }\n};\nfunction Fe(i, t, e) {\n  let s = 0,\n    n = i.length - 1,\n    o,\n    r,\n    a,\n    l;\n  e ? (t >= i[s].pos && t <= i[n].pos && ({\n    lo: s,\n    hi: n\n  } = ft(i, \"pos\", t)), ({\n    pos: o,\n    time: a\n  } = i[s]), ({\n    pos: r,\n    time: l\n  } = i[n])) : (t >= i[s].time && t <= i[n].time && ({\n    lo: s,\n    hi: n\n  } = ft(i, \"time\", t)), ({\n    time: o,\n    pos: a\n  } = i[s]), ({\n    time: r,\n    pos: l\n  } = i[n]));\n  const c = r - o;\n  return c ? a + (l - a) * (t - o) / c : a;\n}\nclass Qe extends Ht {\n  constructor(t) {\n    super(t), this._table = [], this._minPos = void 0, this._tableRange = void 0;\n  }\n  initOffsets() {\n    const t = this._getTimestampsForTable(),\n      e = this._table = this.buildLookupTable(t);\n    this._minPos = Fe(e, this.min), this._tableRange = Fe(e, this.max) - this._minPos, super.initOffsets(t);\n  }\n  buildLookupTable(t) {\n    const {\n        min: e,\n        max: s\n      } = this,\n      n = [],\n      o = [];\n    let r, a, l, c, h;\n    for (r = 0, a = t.length; r < a; ++r) c = t[r], c >= e && c <= s && n.push(c);\n    if (n.length < 2) return [{\n      time: e,\n      pos: 0\n    }, {\n      time: s,\n      pos: 1\n    }];\n    for (r = 0, a = n.length; r < a; ++r) h = n[r + 1], l = n[r - 1], c = n[r], Math.round((h + l) / 2) !== c && o.push({\n      time: c,\n      pos: r / (a - 1)\n    });\n    return o;\n  }\n  _getTimestampsForTable() {\n    let t = this._cache.all || [];\n    if (t.length) return t;\n    const e = this.getDataTimestamps(),\n      s = this.getLabelTimestamps();\n    return e.length && s.length ? t = this.normalize(e.concat(s)) : t = e.length ? e : s, t = this._cache.all = t, t;\n  }\n  getDecimalForValue(t) {\n    return (Fe(this._table, t) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(t) {\n    const e = this._offsets,\n      s = this.getDecimalForPixel(t) / e.factor - e.end;\n    return Fe(this._table, s * this._tableRange + this._minPos, !0);\n  }\n}\nQe.id = \"timeseries\";\nQe.defaults = Ht.defaults;\nvar xo = /* @__PURE__ */Object.freeze({\n  __proto__: null,\n  CategoryScale: ce,\n  LinearScale: Ge,\n  LogarithmicScale: Ze,\n  RadialLinearScale: Nt,\n  TimeScale: Ht,\n  TimeSeriesScale: Qe\n});\nconst $c = [Wn, oo, mo, xo],\n  Yc = /* @__PURE__ */Object.freeze( /* @__PURE__ */Object.defineProperty({\n    __proto__: null,\n    Animation: In,\n    Animations: Ni,\n    ArcElement: ye,\n    BarController: ue,\n    BarElement: Me,\n    BasePlatform: Hi,\n    BasicPlatform: Yn,\n    BubbleController: fe,\n    CategoryScale: ce,\n    Chart: ji,\n    DatasetController: it,\n    Decimation: ao,\n    DomPlatform: Kn,\n    DoughnutController: Lt,\n    Element: st,\n    Filler: ho,\n    Interaction: Hn,\n    Legend: uo,\n    LineController: ge,\n    LineElement: gt,\n    LinearScale: Ge,\n    LogarithmicScale: Ze,\n    PieController: qe,\n    PointElement: ve,\n    PolarAreaController: pe,\n    RadarController: me,\n    RadialLinearScale: Nt,\n    Scale: Mt,\n    ScatterController: xe,\n    SubTitle: go,\n    Ticks: be,\n    TimeScale: Ht,\n    TimeSeriesScale: Qe,\n    Title: fo,\n    Tooltip: po,\n    _adapters: Nn,\n    _detectPlatform: qn,\n    animator: at,\n    controllers: Wn,\n    defaults: O,\n    elements: oo,\n    layouts: X,\n    plugins: mo,\n    registerables: $c,\n    registry: ot,\n    scales: xo\n  }, Symbol.toStringTag, {\n    value: \"Module\"\n  }));\nexport { ye as A, Me as B, ve as P, K as a, D as b, I as c, O as d, E as e, Yc as f, T as i, ne as m, Zt as r, $ as t, C as v };","map":{"version":3,"names":["ct","_o","i","T","z","Array","isArray","t","Object","prototype","toString","call","slice","D","N","Number","isFinite","Q","C","yo","toPercentage","endsWith","parseFloat","an","toDimension","I","e","apply","E","s","n","o","r","length","keys","ze","datasetIndex","index","Be","map","create","ln","indexOf","vo","ne","merger","a","l","c","Qt","Mo","hasOwnProperty","Xi","x","y","_t","ko","wo","split","push","Oi","charAt","toUpperCase","et","yt","Ui","setsEqual","size","has","So","type","B","Math","PI","F","Po","Ve","POSITIVE_INFINITY","Co","V","$t","Ki","tt","log10","lt","sign","qi","round","te","pow","floor","Do","sqrt","sort","pop","Bt","isNaN","abs","Oo","cn","min","max","nt","Ai","Gi","hn","atan2","angle","distance","bi","Ao","Z","oe","h","Y","To","ut","Ti","lo","hi","ft","_lookupByKey","Lo","_rlookupByKey","Ro","dn","Eo","_chartjs","listeners","defineProperty","configurable","enumerable","value","forEach","Zi","splice","un","Set","add","from","fn","window","requestAnimationFrame","gn","Fo","clearTimeout","setTimeout","Li","U","_alignStartEnd","Io","_textX","pn","_sorted","iScale","_parsed","axis","minDefined","d","maxDefined","u","getUserBounds","getPixelForValue","start","count","mn","xScale","yScale","_scaleRanges","xmin","xmax","ymin","ymax","assign","we","Ji","elasticIn","sin","Qi","elasticOut","ee","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","he","mt","lim","Gt","xt","dt","ts","J","A","b","f","xi","zo","Bo","Se","Vo","g","Wo","No","alpha","Ho","jo","bn","$o","Yo","Xo","Ri","Ei","Fi","Uo","Ko","xn","qo","exec","Go","Zo","es","X","W","S","R","P","O","M","L","K","G","H","is","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","Jo","replace","parseInt","Pe","Qo","transparent","toLowerCase","tr","er","ir","ni","Ft","sr","Ce","_n","ss","nr","We","constructor","_rgb","_valid","valid","rgb","rgbString","hexString","hslString","mix","interpolate","clone","clearer","greyscale","opaquer","negate","lighten","darken","saturate","desaturate","rotate","yn","vn","ns","oi","At","_i","ie","ri","or","animation","backgroundColor","borderColor","color","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","weight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","set","get","override","route","defineProperties","writable","_scriptable","startsWith","_indexable","_fallback","rr","Ne","measureText","width","ar","data","garbageCollect","save","restore","wt","currentDevicePixelRatio","os","getContext","resetTransform","clearRect","height","yi","Mn","pointStyle","rotation","radius","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","re","left","right","top","bottom","clip","Ue","lr","cr","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","Tt","strokeWidth","strokeColor","string","hr","strokeStyle","lineWidth","strokeText","maxWidth","fillText","dr","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","decorationWidth","ae","w","topLeft","bottomLeft","bottomRight","topRight","ur","RegExp","fr","gr","match","pr","Ii","kn","Dt","$","console","warn","Zt","cacheable","mr","keepZero","vt","zi","getTarget","Cn","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","Sn","wr","getOwnPropertyDescriptor","Reflect","getPrototypeOf","as","includes","ownKeys","_storage","Vt","_proxy","_context","_subProxy","_stack","_descriptors","wn","setContext","xr","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","br","readKey","Bi","needsSubResolver","_r","yr","Error","join","delete","Vi","filter","Pn","vr","getScope","Mr","rs","kr","Sr","Dn","key","_parsing","parse","Pr","EPSILON","Wt","getPoint","skip","On","Cr","previous","next","Dr","Or","Ar","De","Tr","Lr","spanGaps","cubicInterpolationMode","tension","capBezierPoints","An","document","Wi","parentNode","host","He","Ke","getComputedStyle","Rr","getPropertyValue","Er","Ot","Fr","useOffsetPos","shadowRoot","Ir","touches","offsetX","offsetY","target","getBoundingClientRect","clientX","clientY","box","Pt","canvas","boxSizing","zr","clientWidth","clientHeight","maxHeight","ai","Br","ls","ctx","setTransform","Vr","passive","addEventListener","removeEventListener","cs","Ct","Wr","Nr","hs","Map","Hr","JSON","stringify","Intl","NumberFormat","de","format","jr","getRightToLeftAdapter","setWidth","xPlus","leftForLtr","$r","getLeftToRightAdapter","zt","Tn","getPropertyPriority","setProperty","prevTextDirection","Ln","Rn","between","compare","normalize","ds","end","loop","Yr","property","En","p","m","v","startIsBefore","_","endIsBefore","shouldStart","k","shouldStop","Fn","segments","points","Xr","Ur","stop","Kr","options","_loop","us","_fullLoop","qr","_chart","fs","_datasetIndex","p0","p1","p0DataIndex","p1DataIndex","Gr","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Zr","_request","_charts","_running","_lastDate","_notify","duration","initial","numSteps","currentStep","_refresh","_update","Date","now","running","items","_active","_total","tick","draw","_getAnims","complete","progress","listen","reduce","_duration","cancel","remove","at","gs","Jr","boolean","number","In","to","_fn","_easing","easing","_start","delay","_target","_prop","_from","_to","_promises","active","update","wait","Promise","res","rej","Qr","ta","ea","colors","properties","numbers","resize","show","animations","visible","hide","Ni","_properties","configure","getOwnPropertyNames","_animateOptions","sa","_createAnimations","$shared","ia","$animations","then","all","ps","reverse","na","oa","disabled","zn","_getSortedDatasetMetas","ms","values","ra","bs","stacked","stack","aa","id","la","NEGATIVE_INFINITY","ca","xs","getMatchingVisibleMetas","_s","_cachedMeta","_stacks","vScale","_top","_bottom","li","shift","ha","dataset","da","dataIndex","parsed","raw","element","Yt","controller","ci","ys","cloneIfNotShared","ua","createStack","hidden","_stacked","it","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xAxisID","yAxisID","rAxisID","iAxisID","vAxisID","getScaleForId","rScale","getDatasetMeta","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","_resyncElements","config","datasetScopeKeys","getOptionScopes","createResolver","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","getLabels","xAxisKey","yAxisKey","getParsed","getDataElement","applyStack","updateRangeFromParsed","NaN","getMinMax","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","datasetElementScopeKeys","context","resolveNamedOptions","freeze","_resolveAnimations","datasetAnimationScopeKeys","getSharedOptions","includeOptions","_animationsDisabled","_getSharedOptions","updateSharedOptions","sharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_insertElements","_removeElements","updateElements","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","defaults","fa","_cache","$bar","concat","ga","_length","updateMinAndPrev","ticks","getPixelForTick","pa","barThickness","categoryPercentage","barPercentage","chunk","ratio","pixels","ma","ba","_custom","barStart","barEnd","Bn","vs","xa","isHorizontal","_a","horizontal","base","ya","borderSkipped","enableBorderRadius","Ms","va","ks","Ma","inflateAmount","ue","getBasePixel","_getRuler","head","_calculateBarValuePixels","_calculateBarIndexPixels","center","_getStacks","grouped","_getStackCount","_getStackIndex","_startPixel","_endPixel","stackCount","minBarLength","getDataVisibility","getPixelForDecimal","getLineWidthForValue","skipNull","maxBarThickness","overrides","_index_","offset","grid","_value_","beginAtZero","fe","tooltip","callbacks","title","ka","calcMax","calcMin","ratioX","ratioY","Lt","innerRadius","outerRadius","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","getMaxBorderWidth","getMaxOffset","spacing","cutout","_getRingWeight","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animateScale","startAngle","endAngle","labels","locale","borderAlign","hoverBorderWidth","hoverOffset","descriptors","aspectRatio","legend","generateLabels","text","toggleDataVisibility","formattedValue","ge","_dataset","_decimated","segment","animated","updateControlPoints","pe","bind","_updateRadius","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","getIndexAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","qe","me","getPointPositionForValue","line","st","tooltipPosition","getProps","hasValue","defaultRoutes","Vn","numeric","wa","notation","minimumFractionDigits","maximumFractionDigits","logarithmic","be","formatters","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","callback","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","Sa","maxTicksLimit","Pa","enabled","Da","Oa","Ca","Oe","_tickSize","_maxLength","Aa","ceil","Ta","ws","offsetFromEdge","Ss","La","Ra","gc","Xt","Ps","Ea","Fa","Ia","za","titleX","titleY","Mt","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","_isVisible","_getLabelSizes","widest","highest","asin","first","last","_calculatePadding","_handleMargins","position","isFullSize","fullSize","_computeLabelSizes","_resolveTickFontOptions","widths","heights","getValueForPixel","getDecimalForPixel","getBaseValue","_computeGridLineItems","alignBorderValue","j","q","kt","ti","Rt","ke","Et","tickBorderDash","jt","tickBorderDashOffset","tx1","ty1","tx2","ty2","x1","y1","x2","y2","_computeLabelItems","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ei","ii","si","textOffset","backdrop","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawLabels","drawTitle","_layers","getSortedVisibleDatasetMetas","_maxDigits","Ae","scope","isForType","isPrototypeOf","register","Wa","Ba","unregister","Va","Na","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","_getRegistryForType","_exec","ot","xe","Wn","__proto__","BarController","BubbleController","DoughnutController","LineController","PolarAreaController","PieController","RadarController","ScatterController","St","vi","formats","diff","startOf","endOf","Nn","_date","Ha","getRange","_e","ja","di","isPointInArea","inRange","$a","Ya","getCenterPoint","ui","Cs","Hn","evaluateInteractionItems","modes","point","nearest","jn","Ut","pos","Ds","Kt","Xa","stackWeight","Ua","placed","Ka","vBoxMaxWidth","hBoxMaxHeight","availableWidth","availableHeight","qa","leftAndTop","rightAndBottom","vertical","Os","$n","Ga","maxPadding","outerWidth","outerHeight","same","other","Za","Ja","Jt","Te","As","autoPadding","addBox","boxes","removeBox","layout","Hi","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","Yn","Ie","Qa","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","Ts","tl","getAttribute","Xn","el","il","sl","native","je","contains","nl","MutationObserver","addedNodes","removedNodes","observe","childList","subtree","ol","le","Ls","Un","rl","al","ll","ResizeObserver","contentRect","fi","disconnect","cl","Kn","removeAttribute","setAttribute","$proxies","attach","detach","isConnected","qn","OffscreenCanvas","hl","_init","notify","_createDescriptors","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","dl","fl","some","localIds","ul","gl","local","pluginScopeKeys","Mi","pl","ml","bl","ki","xl","error","Gn","Zn","_l","Rs","Jn","Le","qt","addIfFound","yl","_config","_scopeCache","_resolverCache","clearCache","clear","additionalOptionScopes","_cachedScopes","chartOptionScopes","resolver","subPrefixes","Es","Ml","vl","kl","wl","Fs","Is","zs","onComplete","Sl","onProgress","Qn","getElementById","$e","Pl","Cl","ji","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","onResize","render","ensureScalesHaveIDs","buildOrUpdateScales","dposition","dtype","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","order","_resetElements","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","unbindEvents","_getUniformDataChanges","method","_idx","_updateDataset","meta","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","listener","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","event","replay","inChartArea","_handleEvent","changed","_getActiveElements","Bs","invalidatePlugins","instances","pt","registry","version","getChart","eo","pixelMargin","Dl","Ol","borderRadius","outerStart","outerEnd","innerStart","innerEnd","It","wi","Al","fullCircles","Tl","Ll","lineJoin","ye","io","lineCap","Rl","El","stepped","so","ilen","Fl","move","Il","drawX","Si","zl","Bl","_path","Path2D","path","Vl","Wl","Nl","gt","_points","_segments","_pointsUpdated","pathSegment","Vs","hitRadius","ve","inXRange","inYRange","hoverRadius","no","bt","Hl","jl","$l","outer","inner","gi","Yl","Xl","pi","Me","oo","ArcElement","LineElement","PointElement","BarElement","Ul","samples","Kl","ro","Ws","ql","ao","algorithm","beforeElementsUpdate","threshold","Gl","$i","Pi","Ns","Zl","Hs","Jl","Ql","sc","tc","ec","ic","nc","oc","rc","unshift","ac","co","lc","cc","hc","uc","dc","mi","above","below","fc","area","js","$s","Ys","ho","afterDatasetsUpdate","$filler","propagate","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","Xs","getBoxSize","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","pc","itemsEqual","Us","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_computeTitleHeight","_fitRows","_fitCols","row","col","adjustHitBoxes","rtl","_draw","drawLegendBox","lineDash","SQRT2","textDirection","fontColor","_getLegendItemAt","handleEvent","mc","onLeave","uo","_element","afterEvent","Yi","_padding","_drawArgs","bc","titleBlock","fo","Re","WeakMap","go","se","average","rt","ht","String","xc","Ks","body","footer","bodyFont","titleFont","footerFont","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","maxLineWidth","boxPadding","_c","yc","caretSize","caretPadding","vc","qs","yAlign","xAlign","Mc","kc","Gs","cornerRadius","Ee","Zs","wc","tooltipItems","Js","Ci","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","external","drawCaret","getCaretPosition","x3","y3","titleAlign","titleColor","_drawColorBox","multiKeyBackground","strokeRect","drawBody","bodyAlign","fillLineOfText","bodyColor","drawFooter","footerAlign","footerColor","quadraticCurveTo","_updateAnimationTarget","_willRender","globalAlpha","_positionChanged","_ignoreReplayEvents","positioners","po","afterInit","afterDraw","mo","Decimation","Filler","Legend","SubTitle","Title","Tooltip","Sc","addIfString","Pc","lastIndexOf","Cc","validIndex","ce","_startValue","_valueRange","_addedLabels","Dc","step","precision","maxTicks","maxDigits","includeBounds","Qs","Ye","_endValue","handleTickRangeOptions","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","Ge","tn","Oc","Ze","_zero","exp","Di","Ac","en","Tc","_pointLabels","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","Lc","setCenterPoint","_pointLabelItems","Rc","Ic","Ec","Fc","zc","bo","Bc","Vc","Nt","getValueForDistanceFromCenter","getBasePosition","getPointLabelPosition","animate","Je","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","Wc","sn","_adapter","parser","isoWeekday","_parseOpts","nn","Nc","Hc","on","jc","rn","Ht","_unit","_majorUnit","_offsets","_normalized","time","adapters","date","displayFormats","normalized","unit","_getLabelBounds","getLabelTimestamps","_generate","minUnit","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","factor","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","_getLabelSize","Fe","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","xo","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","$c","Yc"],"sources":["/home/prem/beckn/frontend/node_modules/tw-elements/node_modules/chart.js/dist/chunks/helpers.segment.mjs","/home/prem/beckn/frontend/node_modules/tw-elements/node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}