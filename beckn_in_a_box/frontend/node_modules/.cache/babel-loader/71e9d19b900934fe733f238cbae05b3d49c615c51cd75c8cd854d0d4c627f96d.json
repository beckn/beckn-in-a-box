{"ast":null,"code":"var _jsxFileName = \"/home/prem/beckn-in-a-box/beckn_in_a_box/frontend/src/components/ModalComponent/modal.js\";\nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport project_domain from './project_domain.jpg';\nimport project_type from './project_type.jpg';\nimport select_funnel from './select_funnel_stages.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalComponent(props) {\n  const {\n    imageUrl,\n    show,\n    onHide\n  } = props;\n\n  // Define a mapping of image URLs to imported images\n  const imageMap = {\n    'project_domain': project_domain,\n    'project_type': project_type,\n    'select_funnel_stages': select_funnel\n  };\n\n  // Determine the image source based on the imageUrl prop\n  const typeImage = imageMap[imageUrl] || project_domain;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Type Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: typeImage,\n        alt: \"Type\",\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["React","Modal","Button","project_domain","project_type","select_funnel","jsxDEV","_jsxDEV","ModalComponent","props","imageUrl","show","onHide","imageMap","typeImage","centered","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","src","alt","className","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/prem/beckn-in-a-box/beckn_in_a_box/frontend/src/components/ModalComponent/modal.js"],"sourcesContent":["import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport project_domain from './project_domain.jpg';\nimport project_type from './project_type.jpg';\nimport select_funnel from './select_funnel_stages.jpg';\n\nfunction ModalComponent(props) {\n  const { imageUrl, show, onHide } = props;\n\n  // Define a mapping of image URLs to imported images\n  const imageMap = {\n    'project_domain': project_domain,\n    'project_type': project_type,\n    'select_funnel_stages': select_funnel,\n  };\n\n  // Determine the image source based on the imageUrl prop\n  const typeImage = imageMap[imageUrl] || project_domain;\n\n  return (\n    <Modal show={show} onHide={onHide} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Type Image</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <img src={typeImage} alt=\"Type\" className=\"w-full\" />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ModalComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAE3C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,oBAAoB;AAC7C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC7B,MAAM;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGH,KAAK;;EAExC;EACA,MAAMI,QAAQ,GAAG;IACf,gBAAgB,EAAEV,cAAc;IAChC,cAAc,EAAEC,YAAY;IAC5B,sBAAsB,EAAEC;EAC1B,CAAC;;EAED;EACA,MAAMS,SAAS,GAAGD,QAAQ,CAACH,QAAQ,CAAC,IAAIP,cAAc;EAEtD,oBACEI,OAAA,CAACN,KAAK;IAACU,IAAI,EAAEA,IAAK;IAACC,MAAM,EAAEA,MAAO;IAACG,QAAQ;IAAAC,QAAA,gBACzCT,OAAA,CAACN,KAAK,CAACgB,MAAM;MAACC,WAAW;MAAAF,QAAA,eACvBT,OAAA,CAACN,KAAK,CAACkB,KAAK;QAAAH,QAAA,EAAC;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACfhB,OAAA,CAACN,KAAK,CAACuB,IAAI;MAAAR,QAAA,eACTT,OAAA;QAAKkB,GAAG,EAAEX,SAAU;QAACY,GAAG,EAAC,MAAM;QAACC,SAAS,EAAC;MAAQ;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACbhB,OAAA,CAACN,KAAK,CAAC2B,MAAM;MAAAZ,QAAA,eACXT,OAAA,CAACL,MAAM;QAAC2B,OAAO,EAAC,WAAW;QAACC,OAAO,EAAElB,MAAO;QAAAI,QAAA,EAAC;MAE7C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEZ;AAACQ,EAAA,GA5BQvB,cAAc;AA8BvB,eAAeA,cAAc;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}