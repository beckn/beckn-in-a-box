[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/reportWebVitals.js":"3","/app/src/pages/SignIn/sign.js":"4","/app/src/pages/SignUp/signup.js":"5","/app/src/pages/Home/home.js":"6","/app/src/pages/MainContent/API Keys/apikeys.js":"7","/app/src/pages/MainContent/Dashboard/dashboard.js":"8","/app/src/pages/MainContent/SDKs/sdk.js":"9","/app/src/pages/MainContent/Deployments/deployments.js":"10","/app/src/components/NotFound/not.js":"11","/app/src/pages/MainContent/Wizard/wizard.js":"12","/app/src/config.js":"13","/app/src/pages/MainContent/index.js":"14","/app/src/pages/Navbar/navbar.js":"15","/app/src/components/ApiComponent/apicomp.js":"16","/app/src/components/SdkComponent/sdkcomp.js":"17","/app/src/components/DeployComponent/deploycomp.js":"18","/app/src/components/DashboardComponent/boxcomp.js":"19","/app/src/components/WizardComponent/comp1.js":"20","/app/src/pages/Sidebar/sidebar.js":"21","/app/src/components/ModalComponent/modal.js":"22"},{"size":535,"mtime":1694011800197,"results":"23","hashOfConfig":"24"},{"size":1439,"mtime":1694011800193,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1694011800197,"results":"26","hashOfConfig":"24"},{"size":2845,"mtime":1694011800197,"results":"27","hashOfConfig":"24"},{"size":3308,"mtime":1694011800197,"results":"28","hashOfConfig":"24"},{"size":795,"mtime":1694011800197,"results":"29","hashOfConfig":"24"},{"size":1672,"mtime":1694011800197,"results":"30","hashOfConfig":"24"},{"size":1740,"mtime":1694011800197,"results":"31","hashOfConfig":"24"},{"size":1545,"mtime":1694011800197,"results":"32","hashOfConfig":"24"},{"size":1823,"mtime":1694011800197,"results":"33","hashOfConfig":"24"},{"size":246,"mtime":1694011800197,"results":"34","hashOfConfig":"24"},{"size":2337,"mtime":1694011800197,"results":"35","hashOfConfig":"24"},{"size":201,"mtime":1694011800197,"results":"36","hashOfConfig":"24"},{"size":1097,"mtime":1694011800197,"results":"37","hashOfConfig":"24"},{"size":2637,"mtime":1694011800197,"results":"38","hashOfConfig":"24"},{"size":2016,"mtime":1694011800193,"results":"39","hashOfConfig":"24"},{"size":2029,"mtime":1694011800197,"results":"40","hashOfConfig":"24"},{"size":2303,"mtime":1694011800193,"results":"41","hashOfConfig":"24"},{"size":1827,"mtime":1694011800193,"results":"42","hashOfConfig":"24"},{"size":10420,"mtime":1694237214024,"results":"43","hashOfConfig":"24"},{"size":1903,"mtime":1694011800197,"results":"44","hashOfConfig":"24"},{"size":1980,"mtime":1694237166588,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ea80l9",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},"/app/src/index.js",[],[],"/app/src/App.js",[],[],"/app/src/reportWebVitals.js",[],[],"/app/src/pages/SignIn/sign.js",["124"],[],"import React, { useState } from 'react';\nimport {Link,useNavigate} from 'react-router-dom'\nimport './sign.css'; // Import external CSS file\nimport axios from 'axios'\nimport ls from 'local-storage';\nimport config from '../../config.js'\n\nconst SignIn = () => {\n  const backendURL = `${config.backendUrl}:${config.backendPort}`;\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showRequiredMessage, setShowRequiredMessage] = useState(false);\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      setShowRequiredMessage(true);\n    } else {\n      const data = await loggedIn();\n      console.log(data.length)\n      if(data.length !== 0){\n        const userData  = await data[0]\n        await ls.set('UserData', userData)\n        navigate('/home');\n      }\n      else{\n      navigate('/signup');\n      }\n    }\n  };\n\n  const loggedIn = async() => {\n    try {\n      const response = await axios.post(`${backendURL}/signin`, {\n        email,\n        password,\n      });\n      if(response.data.length !== 0){\n\n      alert(\"Logged in Successfully\")\n      setEmail('')\n      setPassword('')\n      setShowRequiredMessage(false);\n      }\n      else{\n      alert('Wrong Credentials or Try SignUp');\n      }\n      return response.data \n    } catch (error) {\n      console.error(error);\n      alert('Error signing in');\n    }\n  };\n\n  return (\n    <div className=\"signin-container\">\n      <div className=\"signin-content\">\n        <h2 className=\"fw-bold mb-2 text-uppercase\">Login</h2>\n        <p className=\"text-white-50 mb-5\">Please enter your login and password!</p>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-wrapper\">\n            <input\n              className=\"input-field\"\n              type=\"email\"\n              placeholder=\"Email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <input\n              className=\"input-field\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n          <p className=\"small mb-3 pb-lg-2\">\n            <a className=\"text-white-50\" href=\"#!\">\n              Forgot password?\n            </a>\n          </p>\n          <p className=\"required-text\">{showRequiredMessage && \"Please fill in all fields.\"}</p>\n          <button className=\"login-btn\">Login</button>\n        </form>\n\n        <p className=\"mb-0\">\n          Don't have an account? <a href=\"\" className=\"text-white-50 fw-bold\"><Link to='/signup'>Sign Up</Link></a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n","/app/src/pages/SignUp/signup.js",["125"],[],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './signup.css'; // Import external CSS file\nimport axios from 'axios';\nimport config from '../../config.js'\n\nconst SignUp = () => {\n  const backendURL = `${config.backendUrl}:${config.backendPort}`;\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [organization, setOrganization] = useState('');\n  const [showRequiredMessage, setShowRequiredMessage] = useState(false);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!username || !email || !password || !organization) {\n      setShowRequiredMessage(true);\n    }\n    else{\n      createAccount();\n    }\n  };\n\n  const createAccount = async() => {\n    try {\n      const response = await axios.post(`${backendURL}/signup`, {\n        username,\n        email,\n        password,\n        organization\n      });\n      console.log(response)\n      const {data} = response\n      const {message} = data \n\n      if(message === \"User Already Registered\"){\n        alert(\"User Already exists. Try Signin\")\n      }\n      else{\n        alert(\"Added User Successfully\")\n      }\n      setUsername('');\n      setEmail('');\n      setPassword('');\n      setOrganization('');\n      setShowRequiredMessage(false);\n    } catch (error) {\n      console.error(error);\n      alert('Error signing in');\n    }\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <div className=\"signup-content\">\n        <h2 className=\"fw-bold mb-2 text-uppercase\">Sign Up</h2>\n        <p className=\"text-white-50 mb-5\">Create your account</p>\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"input-wrapper\">\n            <input\n              className=\"input-field\"\n              type=\"text\"\n              placeholder=\"Username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <input\n              className=\"input-field\"\n              type=\"email\"\n              placeholder=\"Email address\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <input\n              className=\"input-field\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n          <div className=\"input-wrapper\">\n            <input\n              className=\"input-field\"\n              type=\"text\"\n              placeholder=\"Organization\"\n              value={organization}\n              onChange={(e) => setOrganization(e.target.value)}\n            />\n          </div>\n          <p className=\"required-text\">\n            {showRequiredMessage && \"Please fill in all fields.\"}\n          </p>\n          <button className=\"signup-btn\">Sign Up</button>\n        </form>\n\n        <p className=\"mb-0\">\n          Already have an account?{' '}\n          <a href=\"\" className=\"text-white-50 fw-bold\">\n            <Link to=\"/signin\">Login</Link>\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","/app/src/pages/Home/home.js",[],[],"/app/src/pages/MainContent/API Keys/apikeys.js",["126"],[],"import React from 'react';\nimport './apikeys.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport ApiComponent from '../../../components/ApiComponent/apicomp';\nimport config from '../../../config.js'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons'; // Import the edit icon\n\nconst Apikeys = (props) => {\n    const backendURL = `${config.backendUrl}:${config.backendPort}`;\n    const { email,  setActive} = props;\n    const [apiKeysList, setApisList] = useState([]); // Initialize with an empty array\n\n    const getApis = async () => {\n        const response = await axios.post(`${backendURL}/get-details`, {\n            email: email,\n            project_type: 'Protocol Stack'\n        });\n        console.log(response)\n        setApisList(response.data);\n    }\n\n    const createProject = async () => {\n        setActive('wizard')\n    }\n\n    useEffect(() => {\n        getApis();\n    }, [email]);\n\n    return (\n        <div className='w-full h-full bg-gray-100 rounded-lg p-6 text-left'>\n            <h1 className='text-[darkblue] text-[2.5rem]'>Account</h1>\n            <br />\n            <h2 onClick={createProject} className=\"my-4 mt-6 hover:cursor-pointer text-xl text-blue-500 flex items-center\">\n                Create an API <span className=\"text-lg ml-2\">+</span>\n            </h2>\n            <div className=\"w-full bg-white shadow-sm rounded-lg p-4 h-full\">\n                {apiKeysList.map(api => (\n                    <ApiComponent key={api.id} data={api} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Apikeys;\n","/app/src/pages/MainContent/Dashboard/dashboard.js",["127"],[],"import React from 'react';\n// import './dashboard.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport ProjectComponent from '../../../components/DashboardComponent/boxcomp';\nimport config from '../../../config.js'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons'; // Import the edit icon\n\nconst DashBoard = (props) => {\n    const backendURL = `${config.backendUrl}:${config.backendPort}`;\n    const { email,  setActive} = props;\n    const [projectList, setProjectList] = useState([]); // Initialize with an empty array\n\n    const getProject = async () => {\n        const response = await axios.post(`${backendURL}/get-projects`, {\n            email: email\n        });\n        setProjectList(response.data);\n    }\n    const createProject = async () => {\n        setActive('wizard')\n    }\n\n    useEffect(() => {\n        getProject();\n    }, [email]);\n\n    return (\n        <div className='w-full bg-gray-100 rounded-lg p-6 text-left'>\n            <h1 className=\"relative text-left p-0 left-0 my-3 text-4xl text-bold text-blue-800/100\">Build with Beckn</h1>\n            <br />\n            <h2 onClick={createProject} className=\"my-4 mt-6 hover:cursor-pointer text-xl text-blue-500 flex items-center\">\n                Create a Project <span className=\"text-lg ml-2\">+</span>\n            </h2>\n            <div className=\"w-full bg-[#f2f2f2] flex flex-wrap min-h-[250px] p-2.5 bg-white shadow-sm rounded-lg p-4 h-full\">\n                {projectList.map(project => (\n                    <ProjectComponent key={project.id} data={project} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default DashBoard;\n","/app/src/pages/MainContent/SDKs/sdk.js",["128"],[],"import React, { useState, useEffect } from 'react';\n// import './sdk.css';\nimport axios from 'axios';\nimport SdkComponent from '../../../components/SdkComponent/sdkcomp'\nimport config from '../../../config.js'\n\nconst Sdk = (props) => {\n  const backendURL = `${config.backendUrl}:${config.backendPort}`;\n    const { email,  setActive} = props;\n    const [sdkList, setSdkList] = useState([]);\n\n    const getSdks = async () => {\n        const response = await axios.post(`${backendURL}/get-details`, {\n            email: email,\n            project_type: 'SDK'\n        });\n        console.log(response)\n        setSdkList(response.data);\n    }\n    const createProject = async () => {\n        setActive('wizard')\n    }\n\n    useEffect(() => {\n        getSdks();\n    }, [email]);\n\n    return (\n<div className=\"w-full h-full bg-gray-100 rounded-lg p-6 text-left\">\n<h1 className=\"relative text-left p-0 left-0 my-3 text-4xl text-bold text-blue-800/100\">Build with Beckn</h1>\n  <div className=\"flex items-center mb-4\">\n  <h2 onClick={createProject} className=\"my-4 mt-6 hover:cursor-pointer text-xl text-blue-500 flex items-center\">\n                Create a SDK <span className=\"text-lg ml-2\">+</span>\n    </h2>\n  </div>\n  <div className=\"w-full bg-white shadow-sm rounded-lg p-4 h-full\">\n    <div className=\"w-full bg-[#f2f2f2] flex flex-wrap min-h-[250px] p-2.5 bg-white shadow-sm rounded-lg p-4 h-full\">\n      {sdkList.map((sdk) => (\n        <SdkComponent key={sdk.id} data={sdk} />\n      ))}\n    </div>\n  </div>\n</div>\n\n    );\n};\n\nexport default Sdk;\n","/app/src/pages/MainContent/Deployments/deployments.js",["129"],[],"import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport DeploymentComponent from '../../../components/DeployComponent/deploycomp'\nimport config from '../../../config.js'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons'; // Import the edit icon\n\nconst Apikeys = (props) => {\n    const backendURL = `${config.backendUrl}:${config.backendPort}`;\n    const { email,  setActive} = props;\n    const [apiKeysList, setApisList] = useState([]); // Initialize with an empty array\n\n    const getApis = async () => {\n        const response = await axios.post(`${backendURL}/get-details`, {\n            email: email,\n            project_type: 'User Application'\n        });\n        console.log(response.data)\n        setApisList(response.data);\n    }\n\n    const createProject = async () => {\n        setActive('wizard')\n    }\n\n    useEffect(() => {\n        getApis();\n    }, [email]);\n\n    return (\n        <div className='w-full h-full bg-gray-100 rounded-lg p-6 text-left'>\n            \n            <h1 className=\"relative text-left p-0 left-0 my-3 text-4xl text-bold text-blue-800/100\">Build with Beckn</h1>\n            <br />\n            <h2 onClick={createProject} className=\"my-4 mt-6 hover:cursor-pointer text-xl text-blue-500 flex items-center\">\n                Deploy Your Project<span className=\"text-lg ml-2\">+</span>\n            </h2>\n            <div className=\"w-full bg-white shadow-sm rounded-lg p-4 h-full \">\n                <div className='flex flex-wrap '>\n                {apiKeysList.map(deploy => (\n                    <DeploymentComponent key={deploy} data={deploy} />\n                ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Apikeys;\n","/app/src/components/NotFound/not.js",[],[],"/app/src/pages/MainContent/Wizard/wizard.js",["130","131","132"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Component1 from '../../../components/WizardComponent/comp1';\n// import './wizard.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport config from '../../../config.js'\nfunction Wizard(props) {\n  const backendURL = `${config.backendUrl}:${config.backendPort}`;\n  const { data} = props;\n  const {email, organization} = data\n  console.log(email)\n  \n  const [activeComponent, setActiveComponent] = useState(1);\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    if (Object.keys(formData).length !== 0) {\n      addProjectToDatabase();\n    }\n  }, [formData]);\n\n  const handleFormSubmit = (data) => {\n    setFormData({ ...data });\n  };\n  const checkProjectRegistration = async () => {\n    try {\n      const response = await axios.post(`${backendURL}/check-project`, {\n        project: formData.project,\n      });\n\n      const data = response.data;\n      const { details } = data;\n      console.log(details)\n      return details;\n    } catch (error) {\n      console.error('Error checking project registration:', error);\n    }\n  };\n\n  const addProjectToDatabase = async () => {\n    try {\n      const request = { ...formData, id: uuidv4(), email: email };\n      const response = await fetch('http://localhost:3001/users', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(request),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const responseData = await response.json();\n      await setFormData({});\n      const details = await checkProjectRegistration(); \n      console.log(details)\n      if(details === formData.project){\n        \n        alert(\"Project Added Successfully\")\n      }\n      else{\n        alert(\"Error! Check backend app.js\")\n      }\n      // await setActiveComponent(1);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className='relative h-screen m-0 p-4'>\n      <h1 className=\"relative text-left p-0 left-0 my-3 text-4xl text-bold text-blue-800/100\">Build with Beckn</h1>\n      <div>\n        {activeComponent === 1 && <Component1 onSubmit={handleFormSubmit} org={organization} />}\n      </div>\n    </div>\n  );\n}\n\nexport default Wizard;\n","/app/src/config.js",[],[],"/app/src/pages/MainContent/index.js",[],[],"/app/src/pages/Navbar/navbar.js",[],[],"/app/src/components/ApiComponent/apicomp.js",["133"],[],"import React, { useState } from 'react';\n// import './apicomp.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\n\nconst ApiComponent = (props) => {\n    const { data } = props;\n    const { project, funnel_stages, project_role, project_type , user_api} = data;\n    const [clickName, setName] = useState('Copy')\n    const [clicked, setClicked] = useState(false);\n    \n    const handleCopyClick = () => {\n        const apiText = user_api;\n        navigator.clipboard.writeText(apiText);\n        setName('Copied')\n        setClicked(true);\n        setTimeout(() => {\n            setClicked(false);\n            setName('Copy')\n        }, 1000); // Reset after 1 second\n    };\n    \n    return (\n        <div className=\"w-full h-full min-h-[50px] max-h-[70px] flex flex-row items-center bg-gradient-to-r from-indigo-500 to-purple-600 m-4 p-4 rounded-lg shadow-md\">\n            <h1 className=\"text-lg font-semibold text-white\">{project}</h1>\n            <div className={`w-[100%] flex ml-4 ${clicked ? 'clicked' : ''}`}>\n            <div className={`flex items-center ${clicked ? 'animate-pulse' : ''}`}>\n              <h1\n                  className=\"text-base text-blue-300 cursor-pointer hover:text-blue-500\"\n                  onClick={handleCopyClick}\n              >\n                  {user_api}\n              </h1>\n              <button className=\"bg-green-500 text-white text-center text-xs ml-2 px-3 py-1 rounded-md\" onClick={handleCopyClick}>\n                  {clickName}\n              </button>\n          </div>\n            </div>\n            <div className=\"flex justify-end items-center w-2/5 ml-auto\">\n                <p className=\"mr-4 text-sm text-gray-300\">{funnel_stages}</p>\n                <p className=\"mr-2 text-sm text-gray-300\">{project_role}</p>\n                <FontAwesomeIcon icon={faEdit} className=\"text-blue-400 text-lg cursor-pointer\" />\n            </div>\n        </div>\n    );\n};\n\nexport default ApiComponent;\n","/app/src/components/SdkComponent/sdkcomp.js",["134","135"],[],"import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faArrowCircleDown } from '@fortawesome/free-solid-svg-icons';\n\nconst SdkComponent = (props) => {\n  const { data } = props;\n  const { project, industry_domains, funnel_stages, project_role } = data;\n\n  const [downloading, setDownloading] = useState(false);\n\n  const handleDownloadClick = () => {\n    setDownloading(true);\n    setTimeout(() => {\n      setDownloading(false);\n    }, 2000); // Simulating download delay\n  };\n\n  return (\n<div className={`w-full min-w-[250px] max-w-[300px] h-full min-h-[200px] max-h-[250px] flex flex-col justify-between bg-gradient-to-r from-blue-400 to-purple-500 m-4 p-6 rounded-lg shadow-md`}>\n  <div>\n    <div className=\"flex justify-items-stretch items-center\">\n      <h1 className=\"text-2xl font-semibold text-white mb-2 mr-2\">{project}</h1>\n    </div>\n  </div>\n  <div className=\"mt-2\">\n    <h1 className=\"text-xs text-blue-200 mb-1\">Industry Domain:</h1>\n    <h1 className=\"text-sm text-white mb-2\">{industry_domains}</h1>\n    <h1 className=\"text-xs text-blue-200 mb-1\">Funnel Stages:</h1>\n    <h1 className=\"text-sm text-white\">{funnel_stages}</h1>\n  </div>\n  <div className=\"mt-2\">\n    <div className=\"flex justify-between\">\n      <h1 className=\"text-base text-white\">{project_role}</h1>\n      <button\n        onClick={handleDownloadClick}\n        className={`text-base ${downloading ? 'cursor-not-allowed' : ''} text-blue hover:text-blue-200 focus:outline-none`}\n      >\n        {downloading ? (\n          <div className=\"flex items-center\">\n            <FontAwesomeIcon icon={faArrowCircleDown} spin className=\"text-blue mr-2\" />\n            Downloading...\n          </div>\n        ) : (\n          <div className=\"flex items-center\">\n            <FontAwesomeIcon icon={faArrowCircleDown} className=\"text-blue mr-2\" />\n            Download SDK\n          </div>\n        )}\n      </button>\n    </div>\n  </div>\n</div>\n\n  );\n};\n\nexport default SdkComponent;\n","/app/src/components/DeployComponent/deploycomp.js",["136","137"],[],"import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRocket, faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nconst DeploymentComponent = (props) => {\n    const { data } = props;\n    const { project, funnel_stages, project_role, project_type } = data;\n  const [isDeploying, setIsDeploying] = useState(false);\n  const [deployed, setDeployed] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleDeployClick = async () => {\n    setIsDeploying(true);\n    setError(null);\n\n    try {\n      // Simulate deployment process with a delay\n      await new Promise((resolve) => setTimeout(resolve, 2000));\n\n      setIsDeploying(false);\n      setDeployed(true);\n    } catch (err) {\n      setIsDeploying(false);\n      setError('Deployment failed. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"w-full min-w-[250px] max-w-[300px] bg-white rounded-lg p-6 shadow-md border-2 border-blue-500 m-3\">\n    <h2 className=\"text-xl font-semibold mb-4\">{project}</h2>\n    <div className=\"my-5 mb-2\">\n        <h1 className=\"text-xs text-blue-500\">Funnel Stages:</h1>\n        <h1 className=\"text-sm text-black\">{funnel_stages}</h1>\n    </div>\n    <div className=\"my-2 flex justify-between\">\n        <h1 className=\"text-md font-semibold text-black\">{project_role}</h1>\n    </div>\n    {isDeploying ? (\n        <div className=\"text-center\">\n        <FontAwesomeIcon icon={faSpinner} spin className=\"text-blue-500 text-4xl mb-4\" />\n        <p className=\"text-gray-600\">Deploying...</p>\n        </div>\n    ) : (\n        <div className=\"flex justify-center items-center\">\n        {!deployed ? (\n            <button\n            onClick={handleDeployClick}\n            className=\"bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-6 rounded-md\"\n            >\n            Deploy Now\n            </button>\n        ) : (\n            <div className=\"text-center\">\n            <FontAwesomeIcon icon={faRocket} className=\"text-green-500 text-4xl mb-4\" />\n            <p className=\"text-gray-600\">Deployment successful!</p>\n            </div>\n        )}\n        </div>\n    )}\n\n    {error && <p className=\"text-red-500 mt-4\">{error}</p>}\n    </div>\n\n  );\n};\n\nexport default DeploymentComponent;\n","/app/src/components/DashboardComponent/boxcomp.js",["138"],[],"// import './boxcomp.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'; // Import the edit icon\n// import './boxcomp.css'\n\nconst ProjectComponent = (props) => {\n    const {data} = props\n    const {project, industry_domains,funnel_stages, project_role , project_type} = data \n    return (\n        <div className=\"w-full min-w-[250px] max-w-[300px] h-full min-h-[150px] max-h-[200px] flex flex-col justify-between bg-gradient-to-r from-teal-400 to-blue-500 m-4 p-6 rounded-lg shadow-lg\">\n            <div className=\"flex justify-between items-center mb-4\">\n                <h1 className=\"text-lg font-semibold text-white\">{project}</h1>\n                <div className=\"flex items-center ml-auto\">\n                    <a className=\"text-white text-sm underline hover:no-underline\">\n                    Edit Project\n                    </a>\n                    <FontAwesomeIcon\n                    icon={faEdit}\n                    className=\"text-white text-xl sdk-project-edit ml-2\"\n                    />\n                </div>\n            </div>\n            <div className=\"mb-2\">\n                <h1 className=\"text-xs text-blue-200\">Industry Domain:</h1>\n                <h1 className=\"text-sm text-white\">{industry_domains}</h1>\n            </div>\n            <div className=\"mb-2\">\n                <h1 className=\"text-xs text-blue-200\">Funnel Stages:</h1>\n                <h1 className=\"text-sm text-white\">{funnel_stages}</h1>\n            </div>\n            <div className=\"flex justify-between\">\n                <h1 className=\"text-md font-semibold text-white\">{project_role}</h1>\n                <h1 className=\"text-md font-semibold text-white\">{project_type}</h1>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProjectComponent","/app/src/components/WizardComponent/comp1.js",[],[],"/app/src/pages/Sidebar/sidebar.js",[],[],"/app/src/components/ModalComponent/modal.js",["139"],[],"import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nimport project_domain from './project_domain.jpg';\nimport project_type from './project_type.jpg';\nimport select_funnel from './select_funnel_stages.jpg';\n\nfunction ModalComponent({ imageUrl, show, onHide }) {\n  const imageMap = {\n    project_domain,\n    project_type,\n    select_funnel,\n  };\n\n  const typeImage = imageMap[imageUrl] || project_domain;\n  const capitalizedImageUrl = imageUrl.toUpperCase();\n\n  return (\n    <div\n      className={`fixed top-0 left-0 h-screen w-screen flex justify-center items-center bg-opacity-50 bg-gray-900 ${\n        show ? 'block' : 'hidden'\n      }`}\n    >\n      <div className=\"bg-white w-2/3 md:w-1/2 lg:w-1/3 p-4 rounded-lg shadow-lg\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg font-semibold\">{capitalizedImageUrl}</h2>\n          <button\n            onClick={onHide}\n            className=\"text-gray-500 hover:text-gray-700 focus:outline-none\"\n          >\n            <svg\n              className=\"w-5 h-5\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M5.293 6.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414L11.414 12l3.293 3.293a1 1 0 01-1.414 1.414L10 13.414l-3.293 3.293a1 1 0 01-1.414-1.414L8.586 12 5.293 8.707a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              />\n            </svg>\n          </button>\n        </div>\n        <div className=\"modal-content\">\n          <img src={typeImage} alt={capitalizedImageUrl} className=\"w-full\" />\n        </div>\n        <div className=\"mt-4 flex justify-end\">\n          <Button variant=\"secondary\" onClick={onHide}>\n            Close\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ModalComponent;\n",{"ruleId":"140","severity":1,"message":"141","line":91,"column":34,"nodeType":"142","endLine":91,"endColumn":79},{"ruleId":"140","severity":1,"message":"141","line":105,"column":11,"nodeType":"142","endLine":105,"endColumn":56},{"ruleId":"143","severity":1,"message":"144","line":30,"column":8,"nodeType":"145","endLine":30,"endColumn":15,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":27,"column":8,"nodeType":"145","endLine":27,"endColumn":15,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":26,"column":8,"nodeType":"145","endLine":26,"endColumn":15,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"144","line":29,"column":8,"nodeType":"145","endLine":29,"endColumn":15,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":13,"column":27,"nodeType":"154","messageId":"155","endLine":13,"endColumn":45},{"ruleId":"143","severity":1,"message":"156","line":20,"column":6,"nodeType":"145","endLine":20,"endColumn":16,"suggestions":"157"},{"ruleId":"152","severity":1,"message":"158","line":55,"column":13,"nodeType":"154","messageId":"155","endLine":55,"endColumn":25},{"ruleId":"152","severity":1,"message":"159","line":8,"column":51,"nodeType":"154","messageId":"155","endLine":8,"endColumn":63},{"ruleId":"152","severity":1,"message":"160","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"161","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"152","severity":1,"message":"162","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":13},{"ruleId":"152","severity":1,"message":"159","line":8,"column":51,"nodeType":"154","messageId":"155","endLine":8,"endColumn":63},{"ruleId":"140","severity":1,"message":"163","line":14,"column":21,"nodeType":"142","endLine":14,"endColumn":84},{"ruleId":"152","severity":1,"message":"164","line":2,"column":8,"nodeType":"154","messageId":"155","endLine":2,"endColumn":13},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getApis'. Either include it or remove the dependency array.","ArrayExpression",["165"],"React Hook useEffect has a missing dependency: 'getProject'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has a missing dependency: 'getSdks'. Either include it or remove the dependency array.",["167"],["168"],"no-unused-vars","'setActiveComponent' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'addProjectToDatabase'. Either include it or remove the dependency array.",["169"],"'responseData' is assigned a value but never used.","'project_type' is assigned a value but never used.","'useEffect' is defined but never used.","'faEdit' is defined but never used.","'axios' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Modal' is defined but never used.",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"170","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [email, getApis]",{"range":"179","text":"180"},"Update the dependencies array to be: [email, getProject]",{"range":"181","text":"182"},"Update the dependencies array to be: [email, getSdks]",{"range":"183","text":"184"},{"range":"185","text":"180"},"Update the dependencies array to be: [addProjectToDatabase, formData]",{"range":"186","text":"187"},[999,1006],"[email, getApis]",[954,961],"[email, getProject]",[763,770],"[email, getSdks]",[994,1001],[645,655],"[addProjectToDatabase, formData]"]